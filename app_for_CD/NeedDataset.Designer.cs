//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace app_for_CD {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NeedDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NeedDataset : global::System.Data.DataSet {
        
        private TBCB_CRP_DOCU_INFODataTable tableTBCB_CRP_DOCU_INFO;
        
        private TBCB_CRP_INFODataTable tableTBCB_CRP_INFO;
        
        private TABLE_FOR_CDDataTable tableTABLE_FOR_CD;
        
        private NEW_TBCBDataTable tableNEW_TBCB;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public NeedDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected NeedDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TBCB_CRP_DOCU_INFO"] != null)) {
                    base.Tables.Add(new TBCB_CRP_DOCU_INFODataTable(ds.Tables["TBCB_CRP_DOCU_INFO"]));
                }
                if ((ds.Tables["TBCB_CRP_INFO"] != null)) {
                    base.Tables.Add(new TBCB_CRP_INFODataTable(ds.Tables["TBCB_CRP_INFO"]));
                }
                if ((ds.Tables["TABLE_FOR_CD"] != null)) {
                    base.Tables.Add(new TABLE_FOR_CDDataTable(ds.Tables["TABLE_FOR_CD"]));
                }
                if ((ds.Tables["NEW_TBCB"] != null)) {
                    base.Tables.Add(new NEW_TBCBDataTable(ds.Tables["NEW_TBCB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBCB_CRP_DOCU_INFODataTable TBCB_CRP_DOCU_INFO {
            get {
                return this.tableTBCB_CRP_DOCU_INFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TBCB_CRP_INFODataTable TBCB_CRP_INFO {
            get {
                return this.tableTBCB_CRP_INFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TABLE_FOR_CDDataTable TABLE_FOR_CD {
            get {
                return this.tableTABLE_FOR_CD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NEW_TBCBDataTable NEW_TBCB {
            get {
                return this.tableNEW_TBCB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NeedDataset cln = ((NeedDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TBCB_CRP_DOCU_INFO"] != null)) {
                    base.Tables.Add(new TBCB_CRP_DOCU_INFODataTable(ds.Tables["TBCB_CRP_DOCU_INFO"]));
                }
                if ((ds.Tables["TBCB_CRP_INFO"] != null)) {
                    base.Tables.Add(new TBCB_CRP_INFODataTable(ds.Tables["TBCB_CRP_INFO"]));
                }
                if ((ds.Tables["TABLE_FOR_CD"] != null)) {
                    base.Tables.Add(new TABLE_FOR_CDDataTable(ds.Tables["TABLE_FOR_CD"]));
                }
                if ((ds.Tables["NEW_TBCB"] != null)) {
                    base.Tables.Add(new NEW_TBCBDataTable(ds.Tables["NEW_TBCB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTBCB_CRP_DOCU_INFO = ((TBCB_CRP_DOCU_INFODataTable)(base.Tables["TBCB_CRP_DOCU_INFO"]));
            if ((initTable == true)) {
                if ((this.tableTBCB_CRP_DOCU_INFO != null)) {
                    this.tableTBCB_CRP_DOCU_INFO.InitVars();
                }
            }
            this.tableTBCB_CRP_INFO = ((TBCB_CRP_INFODataTable)(base.Tables["TBCB_CRP_INFO"]));
            if ((initTable == true)) {
                if ((this.tableTBCB_CRP_INFO != null)) {
                    this.tableTBCB_CRP_INFO.InitVars();
                }
            }
            this.tableTABLE_FOR_CD = ((TABLE_FOR_CDDataTable)(base.Tables["TABLE_FOR_CD"]));
            if ((initTable == true)) {
                if ((this.tableTABLE_FOR_CD != null)) {
                    this.tableTABLE_FOR_CD.InitVars();
                }
            }
            this.tableNEW_TBCB = ((NEW_TBCBDataTable)(base.Tables["NEW_TBCB"]));
            if ((initTable == true)) {
                if ((this.tableNEW_TBCB != null)) {
                    this.tableNEW_TBCB.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NeedDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NeedDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTBCB_CRP_DOCU_INFO = new TBCB_CRP_DOCU_INFODataTable();
            base.Tables.Add(this.tableTBCB_CRP_DOCU_INFO);
            this.tableTBCB_CRP_INFO = new TBCB_CRP_INFODataTable();
            base.Tables.Add(this.tableTBCB_CRP_INFO);
            this.tableTABLE_FOR_CD = new TABLE_FOR_CDDataTable();
            base.Tables.Add(this.tableTABLE_FOR_CD);
            this.tableNEW_TBCB = new NEW_TBCBDataTable();
            base.Tables.Add(this.tableNEW_TBCB);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBCB_CRP_DOCU_INFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTBCB_CRP_INFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTABLE_FOR_CD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeNEW_TBCB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NeedDataset ds = new NeedDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBCB_CRP_DOCU_INFORowChangeEventHandler(object sender, TBCB_CRP_DOCU_INFORowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TBCB_CRP_INFORowChangeEventHandler(object sender, TBCB_CRP_INFORowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TABLE_FOR_CDRowChangeEventHandler(object sender, TABLE_FOR_CDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void NEW_TBCBRowChangeEventHandler(object sender, NEW_TBCBRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBCB_CRP_DOCU_INFODataTable : global::System.Data.TypedTableBase<TBCB_CRP_DOCU_INFORow> {
            
            private global::System.Data.DataColumn columnCRP_CD;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnDIST_ID_TYPE_CD;
            
            private global::System.Data.DataColumn columnDIST_ID;
            
            private global::System.Data.DataColumn columnDOCU_NO;
            
            private global::System.Data.DataColumn columnDOCU_SRES;
            
            private global::System.Data.DataColumn columnDOCU_CLS_CD;
            
            private global::System.Data.DataColumn columnDOCU_TYPE_CD;
            
            private global::System.Data.DataColumn columnDOCU_ISSU_DD;
            
            private global::System.Data.DataColumn columnDOCU_EXP_DD;
            
            private global::System.Data.DataColumn columnREGR_CD;
            
            private global::System.Data.DataColumn columnINTN_CD;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnREMARK_2;
            
            private global::System.Data.DataColumn columnDOCU_CRTE_DT;
            
            private global::System.Data.DataColumn columnDOCU_STAT_CD;
            
            private global::System.Data.DataColumn columnCRTE_DT;
            
            private global::System.Data.DataColumn columnCRTE_ID;
            
            private global::System.Data.DataColumn columnUPD_DT;
            
            private global::System.Data.DataColumn columnUPD_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFODataTable() {
                this.TableName = "TBCB_CRP_DOCU_INFO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBCB_CRP_DOCU_INFODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBCB_CRP_DOCU_INFODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_CDColumn {
                get {
                    return this.columnCRP_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIST_ID_TYPE_CDColumn {
                get {
                    return this.columnDIST_ID_TYPE_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIST_IDColumn {
                get {
                    return this.columnDIST_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_NOColumn {
                get {
                    return this.columnDOCU_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_SRESColumn {
                get {
                    return this.columnDOCU_SRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_CLS_CDColumn {
                get {
                    return this.columnDOCU_CLS_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_TYPE_CDColumn {
                get {
                    return this.columnDOCU_TYPE_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_ISSU_DDColumn {
                get {
                    return this.columnDOCU_ISSU_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_EXP_DDColumn {
                get {
                    return this.columnDOCU_EXP_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REGR_CDColumn {
                get {
                    return this.columnREGR_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INTN_CDColumn {
                get {
                    return this.columnINTN_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REMARK_2Column {
                get {
                    return this.columnREMARK_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_CRTE_DTColumn {
                get {
                    return this.columnDOCU_CRTE_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_STAT_CDColumn {
                get {
                    return this.columnDOCU_STAT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRTE_DTColumn {
                get {
                    return this.columnCRTE_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRTE_IDColumn {
                get {
                    return this.columnCRTE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPD_DTColumn {
                get {
                    return this.columnUPD_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPD_IDColumn {
                get {
                    return this.columnUPD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFORow this[int index] {
                get {
                    return ((TBCB_CRP_DOCU_INFORow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_DOCU_INFORowChangeEventHandler TBCB_CRP_DOCU_INFORowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_DOCU_INFORowChangeEventHandler TBCB_CRP_DOCU_INFORowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_DOCU_INFORowChangeEventHandler TBCB_CRP_DOCU_INFORowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_DOCU_INFORowChangeEventHandler TBCB_CRP_DOCU_INFORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBCB_CRP_DOCU_INFORow(TBCB_CRP_DOCU_INFORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFORow AddTBCB_CRP_DOCU_INFORow(
                        string CRP_CD, 
                        long SEQ, 
                        string DIST_ID_TYPE_CD, 
                        string DIST_ID, 
                        string DOCU_NO, 
                        string DOCU_SRES, 
                        string DOCU_CLS_CD, 
                        string DOCU_TYPE_CD, 
                        string DOCU_ISSU_DD, 
                        string DOCU_EXP_DD, 
                        string REGR_CD, 
                        string INTN_CD, 
                        string REMARK, 
                        string REMARK_2, 
                        string DOCU_CRTE_DT, 
                        string DOCU_STAT_CD, 
                        System.DateTime CRTE_DT, 
                        string CRTE_ID, 
                        System.DateTime UPD_DT, 
                        string UPD_ID) {
                TBCB_CRP_DOCU_INFORow rowTBCB_CRP_DOCU_INFORow = ((TBCB_CRP_DOCU_INFORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CRP_CD,
                        SEQ,
                        DIST_ID_TYPE_CD,
                        DIST_ID,
                        DOCU_NO,
                        DOCU_SRES,
                        DOCU_CLS_CD,
                        DOCU_TYPE_CD,
                        DOCU_ISSU_DD,
                        DOCU_EXP_DD,
                        REGR_CD,
                        INTN_CD,
                        REMARK,
                        REMARK_2,
                        DOCU_CRTE_DT,
                        DOCU_STAT_CD,
                        CRTE_DT,
                        CRTE_ID,
                        UPD_DT,
                        UPD_ID};
                rowTBCB_CRP_DOCU_INFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBCB_CRP_DOCU_INFORow);
                return rowTBCB_CRP_DOCU_INFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFORow FindByCRP_CDSEQ(string CRP_CD, long SEQ) {
                return ((TBCB_CRP_DOCU_INFORow)(this.Rows.Find(new object[] {
                            CRP_CD,
                            SEQ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBCB_CRP_DOCU_INFODataTable cln = ((TBCB_CRP_DOCU_INFODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBCB_CRP_DOCU_INFODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCRP_CD = base.Columns["CRP_CD"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnDIST_ID_TYPE_CD = base.Columns["DIST_ID_TYPE_CD"];
                this.columnDIST_ID = base.Columns["DIST_ID"];
                this.columnDOCU_NO = base.Columns["DOCU_NO"];
                this.columnDOCU_SRES = base.Columns["DOCU_SRES"];
                this.columnDOCU_CLS_CD = base.Columns["DOCU_CLS_CD"];
                this.columnDOCU_TYPE_CD = base.Columns["DOCU_TYPE_CD"];
                this.columnDOCU_ISSU_DD = base.Columns["DOCU_ISSU_DD"];
                this.columnDOCU_EXP_DD = base.Columns["DOCU_EXP_DD"];
                this.columnREGR_CD = base.Columns["REGR_CD"];
                this.columnINTN_CD = base.Columns["INTN_CD"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnREMARK_2 = base.Columns["REMARK_2"];
                this.columnDOCU_CRTE_DT = base.Columns["DOCU_CRTE_DT"];
                this.columnDOCU_STAT_CD = base.Columns["DOCU_STAT_CD"];
                this.columnCRTE_DT = base.Columns["CRTE_DT"];
                this.columnCRTE_ID = base.Columns["CRTE_ID"];
                this.columnUPD_DT = base.Columns["UPD_DT"];
                this.columnUPD_ID = base.Columns["UPD_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCRP_CD = new global::System.Data.DataColumn("CRP_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_CD);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnDIST_ID_TYPE_CD = new global::System.Data.DataColumn("DIST_ID_TYPE_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIST_ID_TYPE_CD);
                this.columnDIST_ID = new global::System.Data.DataColumn("DIST_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIST_ID);
                this.columnDOCU_NO = new global::System.Data.DataColumn("DOCU_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_NO);
                this.columnDOCU_SRES = new global::System.Data.DataColumn("DOCU_SRES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_SRES);
                this.columnDOCU_CLS_CD = new global::System.Data.DataColumn("DOCU_CLS_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_CLS_CD);
                this.columnDOCU_TYPE_CD = new global::System.Data.DataColumn("DOCU_TYPE_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_TYPE_CD);
                this.columnDOCU_ISSU_DD = new global::System.Data.DataColumn("DOCU_ISSU_DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_ISSU_DD);
                this.columnDOCU_EXP_DD = new global::System.Data.DataColumn("DOCU_EXP_DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_EXP_DD);
                this.columnREGR_CD = new global::System.Data.DataColumn("REGR_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGR_CD);
                this.columnINTN_CD = new global::System.Data.DataColumn("INTN_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTN_CD);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnREMARK_2 = new global::System.Data.DataColumn("REMARK_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK_2);
                this.columnDOCU_CRTE_DT = new global::System.Data.DataColumn("DOCU_CRTE_DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_CRTE_DT);
                this.columnDOCU_STAT_CD = new global::System.Data.DataColumn("DOCU_STAT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_STAT_CD);
                this.columnCRTE_DT = new global::System.Data.DataColumn("CRTE_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRTE_DT);
                this.columnCRTE_ID = new global::System.Data.DataColumn("CRTE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRTE_ID);
                this.columnUPD_DT = new global::System.Data.DataColumn("UPD_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPD_DT);
                this.columnUPD_ID = new global::System.Data.DataColumn("UPD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPD_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCRP_CD,
                                this.columnSEQ}, true));
                this.columnCRP_CD.AllowDBNull = false;
                this.columnCRP_CD.MaxLength = 12;
                this.columnSEQ.AllowDBNull = false;
                this.columnDIST_ID_TYPE_CD.AllowDBNull = false;
                this.columnDIST_ID_TYPE_CD.MaxLength = 2;
                this.columnDIST_ID.AllowDBNull = false;
                this.columnDIST_ID.MaxLength = 100;
                this.columnDOCU_NO.AllowDBNull = false;
                this.columnDOCU_NO.MaxLength = 40;
                this.columnDOCU_SRES.MaxLength = 20;
                this.columnDOCU_CLS_CD.MaxLength = 2;
                this.columnDOCU_TYPE_CD.MaxLength = 2;
                this.columnDOCU_ISSU_DD.MaxLength = 8;
                this.columnDOCU_EXP_DD.MaxLength = 8;
                this.columnREGR_CD.MaxLength = 7;
                this.columnINTN_CD.MaxLength = 20;
                this.columnREMARK.MaxLength = 1000;
                this.columnREMARK_2.MaxLength = 1000;
                this.columnDOCU_CRTE_DT.MaxLength = 300;
                this.columnDOCU_STAT_CD.MaxLength = 1;
                this.columnCRTE_ID.MaxLength = 20;
                this.columnUPD_ID.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFORow NewTBCB_CRP_DOCU_INFORow() {
                return ((TBCB_CRP_DOCU_INFORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBCB_CRP_DOCU_INFORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBCB_CRP_DOCU_INFORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBCB_CRP_DOCU_INFORowChanged != null)) {
                    this.TBCB_CRP_DOCU_INFORowChanged(this, new TBCB_CRP_DOCU_INFORowChangeEvent(((TBCB_CRP_DOCU_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBCB_CRP_DOCU_INFORowChanging != null)) {
                    this.TBCB_CRP_DOCU_INFORowChanging(this, new TBCB_CRP_DOCU_INFORowChangeEvent(((TBCB_CRP_DOCU_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBCB_CRP_DOCU_INFORowDeleted != null)) {
                    this.TBCB_CRP_DOCU_INFORowDeleted(this, new TBCB_CRP_DOCU_INFORowChangeEvent(((TBCB_CRP_DOCU_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBCB_CRP_DOCU_INFORowDeleting != null)) {
                    this.TBCB_CRP_DOCU_INFORowDeleting(this, new TBCB_CRP_DOCU_INFORowChangeEvent(((TBCB_CRP_DOCU_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBCB_CRP_DOCU_INFORow(TBCB_CRP_DOCU_INFORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NeedDataset ds = new NeedDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBCB_CRP_DOCU_INFODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TBCB_CRP_INFODataTable : global::System.Data.TypedTableBase<TBCB_CRP_INFORow> {
            
            private global::System.Data.DataColumn columnCRP_CD;
            
            private global::System.Data.DataColumn columnCRP_TYPE_CD;
            
            private global::System.Data.DataColumn columnCRP_SRNM;
            
            private global::System.Data.DataColumn columnCRP_FRST_NM;
            
            private global::System.Data.DataColumn columnCRP_SCND_NM;
            
            private global::System.Data.DataColumn columnENG_CRP_SRNM;
            
            private global::System.Data.DataColumn columnENG_CRP_FRST_NM;
            
            private global::System.Data.DataColumn columnENG_CRP_SCND_NM;
            
            private global::System.Data.DataColumn columnCPCT_CD;
            
            private global::System.Data.DataColumn columnSHRT_CRP_NM;
            
            private global::System.Data.DataColumn columnENG_SHRT_CRP_NM;
            
            private global::System.Data.DataColumn columnCRP_NM;
            
            private global::System.Data.DataColumn columnENG_CRP_NM;
            
            private global::System.Data.DataColumn columnCRP_CAT_CD;
            
            private global::System.Data.DataColumn columnCRP_STAT_CD;
            
            private global::System.Data.DataColumn columnCNTRY_CD;
            
            private global::System.Data.DataColumn columnRSDT_YN;
            
            private global::System.Data.DataColumn columnBIRTH_DD;
            
            private global::System.Data.DataColumn columnBZNO;
            
            private global::System.Data.DataColumn columnSWFT_CD;
            
            private global::System.Data.DataColumn columnREG_POST_NO;
            
            private global::System.Data.DataColumn columnREG_CNTRY_CD;
            
            private global::System.Data.DataColumn columnREG_REGN_CD;
            
            private global::System.Data.DataColumn columnREG_SOATO_CD;
            
            private global::System.Data.DataColumn columnREG_STRE_ADDR;
            
            private global::System.Data.DataColumn columnENG_REG_STRE_ADDR;
            
            private global::System.Data.DataColumn columnREG_ADDR_CONT;
            
            private global::System.Data.DataColumn columnENG_REG_ADDR_CONT;
            
            private global::System.Data.DataColumn columnRSDT_POST_NO;
            
            private global::System.Data.DataColumn columnRSDT_CNTRY_CD;
            
            private global::System.Data.DataColumn columnRSDT_REGN_CD;
            
            private global::System.Data.DataColumn columnRSDT_SOATO_CD;
            
            private global::System.Data.DataColumn columnRSDT_STRE_ADDR;
            
            private global::System.Data.DataColumn columnENG_RSDT_STRE_ADDR;
            
            private global::System.Data.DataColumn columnRSDT_ADDR_CONT;
            
            private global::System.Data.DataColumn columnENG_RSDT_ADDR_CONT;
            
            private global::System.Data.DataColumn columnTEL_NO;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnFAX_NO;
            
            private global::System.Data.DataColumn columnHOMP;
            
            private global::System.Data.DataColumn columnDIST_ID_TYPE_CD;
            
            private global::System.Data.DataColumn columnDIST_ID;
            
            private global::System.Data.DataColumn columnDIST_ID_2;
            
            private global::System.Data.DataColumn columnOFSH_YN;
            
            private global::System.Data.DataColumn columnOKPO_CD;
            
            private global::System.Data.DataColumn columnOKONH_CD;
            
            private global::System.Data.DataColumn columnTYBZ_CD;
            
            private global::System.Data.DataColumn columnCORPS_REG_PLC_CD;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnLGR_NO;
            
            private global::System.Data.DataColumn columnLGR_USR_ID;
            
            private global::System.Data.DataColumn columnCRP_ISSU_DD;
            
            private global::System.Data.DataColumn columnOLD_CRP_CD;
            
            private global::System.Data.DataColumn columnUKWN_YN;
            
            private global::System.Data.DataColumn columnAGENT_CRP_CD;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnDOCU_NO;
            
            private global::System.Data.DataColumn columnFEE_LEVY_YN;
            
            private global::System.Data.DataColumn columnCRP_FEE;
            
            private global::System.Data.DataColumn columnRP_RQST_DD;
            
            private global::System.Data.DataColumn columnRP_RQST_SEQ;
            
            private global::System.Data.DataColumn columnISSR_CAT_CD;
            
            private global::System.Data.DataColumn columnSOOGU_CD;
            
            private global::System.Data.DataColumn columnCRTE_DT;
            
            private global::System.Data.DataColumn columnCRTE_ID;
            
            private global::System.Data.DataColumn columnUPD_DT;
            
            private global::System.Data.DataColumn columnUPD_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFODataTable() {
                this.TableName = "TBCB_CRP_INFO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBCB_CRP_INFODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TBCB_CRP_INFODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_CDColumn {
                get {
                    return this.columnCRP_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_TYPE_CDColumn {
                get {
                    return this.columnCRP_TYPE_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_SRNMColumn {
                get {
                    return this.columnCRP_SRNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_FRST_NMColumn {
                get {
                    return this.columnCRP_FRST_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_SCND_NMColumn {
                get {
                    return this.columnCRP_SCND_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_CRP_SRNMColumn {
                get {
                    return this.columnENG_CRP_SRNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_CRP_FRST_NMColumn {
                get {
                    return this.columnENG_CRP_FRST_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_CRP_SCND_NMColumn {
                get {
                    return this.columnENG_CRP_SCND_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CPCT_CDColumn {
                get {
                    return this.columnCPCT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHRT_CRP_NMColumn {
                get {
                    return this.columnSHRT_CRP_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_SHRT_CRP_NMColumn {
                get {
                    return this.columnENG_SHRT_CRP_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_NMColumn {
                get {
                    return this.columnCRP_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_CRP_NMColumn {
                get {
                    return this.columnENG_CRP_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_CAT_CDColumn {
                get {
                    return this.columnCRP_CAT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_STAT_CDColumn {
                get {
                    return this.columnCRP_STAT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CNTRY_CDColumn {
                get {
                    return this.columnCNTRY_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_YNColumn {
                get {
                    return this.columnRSDT_YN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BIRTH_DDColumn {
                get {
                    return this.columnBIRTH_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BZNOColumn {
                get {
                    return this.columnBZNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SWFT_CDColumn {
                get {
                    return this.columnSWFT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REG_POST_NOColumn {
                get {
                    return this.columnREG_POST_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REG_CNTRY_CDColumn {
                get {
                    return this.columnREG_CNTRY_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REG_REGN_CDColumn {
                get {
                    return this.columnREG_REGN_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REG_SOATO_CDColumn {
                get {
                    return this.columnREG_SOATO_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REG_STRE_ADDRColumn {
                get {
                    return this.columnREG_STRE_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_REG_STRE_ADDRColumn {
                get {
                    return this.columnENG_REG_STRE_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REG_ADDR_CONTColumn {
                get {
                    return this.columnREG_ADDR_CONT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_REG_ADDR_CONTColumn {
                get {
                    return this.columnENG_REG_ADDR_CONT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_POST_NOColumn {
                get {
                    return this.columnRSDT_POST_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_CNTRY_CDColumn {
                get {
                    return this.columnRSDT_CNTRY_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_REGN_CDColumn {
                get {
                    return this.columnRSDT_REGN_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_SOATO_CDColumn {
                get {
                    return this.columnRSDT_SOATO_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_STRE_ADDRColumn {
                get {
                    return this.columnRSDT_STRE_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_RSDT_STRE_ADDRColumn {
                get {
                    return this.columnENG_RSDT_STRE_ADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RSDT_ADDR_CONTColumn {
                get {
                    return this.columnRSDT_ADDR_CONT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ENG_RSDT_ADDR_CONTColumn {
                get {
                    return this.columnENG_RSDT_ADDR_CONT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TEL_NOColumn {
                get {
                    return this.columnTEL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAX_NOColumn {
                get {
                    return this.columnFAX_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOMPColumn {
                get {
                    return this.columnHOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIST_ID_TYPE_CDColumn {
                get {
                    return this.columnDIST_ID_TYPE_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIST_IDColumn {
                get {
                    return this.columnDIST_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIST_ID_2Column {
                get {
                    return this.columnDIST_ID_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OFSH_YNColumn {
                get {
                    return this.columnOFSH_YN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OKPO_CDColumn {
                get {
                    return this.columnOKPO_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OKONH_CDColumn {
                get {
                    return this.columnOKONH_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TYBZ_CDColumn {
                get {
                    return this.columnTYBZ_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CORPS_REG_PLC_CDColumn {
                get {
                    return this.columnCORPS_REG_PLC_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LGR_NOColumn {
                get {
                    return this.columnLGR_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LGR_USR_IDColumn {
                get {
                    return this.columnLGR_USR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_ISSU_DDColumn {
                get {
                    return this.columnCRP_ISSU_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OLD_CRP_CDColumn {
                get {
                    return this.columnOLD_CRP_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UKWN_YNColumn {
                get {
                    return this.columnUKWN_YN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AGENT_CRP_CDColumn {
                get {
                    return this.columnAGENT_CRP_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_NOColumn {
                get {
                    return this.columnDOCU_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FEE_LEVY_YNColumn {
                get {
                    return this.columnFEE_LEVY_YN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_FEEColumn {
                get {
                    return this.columnCRP_FEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RP_RQST_DDColumn {
                get {
                    return this.columnRP_RQST_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RP_RQST_SEQColumn {
                get {
                    return this.columnRP_RQST_SEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ISSR_CAT_CDColumn {
                get {
                    return this.columnISSR_CAT_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SOOGU_CDColumn {
                get {
                    return this.columnSOOGU_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRTE_DTColumn {
                get {
                    return this.columnCRTE_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRTE_IDColumn {
                get {
                    return this.columnCRTE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPD_DTColumn {
                get {
                    return this.columnUPD_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UPD_IDColumn {
                get {
                    return this.columnUPD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFORow this[int index] {
                get {
                    return ((TBCB_CRP_INFORow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_INFORowChangeEventHandler TBCB_CRP_INFORowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_INFORowChangeEventHandler TBCB_CRP_INFORowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_INFORowChangeEventHandler TBCB_CRP_INFORowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TBCB_CRP_INFORowChangeEventHandler TBCB_CRP_INFORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTBCB_CRP_INFORow(TBCB_CRP_INFORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFORow AddTBCB_CRP_INFORow(
                        string CRP_CD, 
                        string CRP_TYPE_CD, 
                        string CRP_SRNM, 
                        string CRP_FRST_NM, 
                        string CRP_SCND_NM, 
                        string ENG_CRP_SRNM, 
                        string ENG_CRP_FRST_NM, 
                        string ENG_CRP_SCND_NM, 
                        string CPCT_CD, 
                        string SHRT_CRP_NM, 
                        string ENG_SHRT_CRP_NM, 
                        string CRP_NM, 
                        string ENG_CRP_NM, 
                        string CRP_CAT_CD, 
                        string CRP_STAT_CD, 
                        string CNTRY_CD, 
                        string RSDT_YN, 
                        string BIRTH_DD, 
                        string BZNO, 
                        string SWFT_CD, 
                        string REG_POST_NO, 
                        string REG_CNTRY_CD, 
                        string REG_REGN_CD, 
                        string REG_SOATO_CD, 
                        string REG_STRE_ADDR, 
                        string ENG_REG_STRE_ADDR, 
                        string REG_ADDR_CONT, 
                        string ENG_REG_ADDR_CONT, 
                        string RSDT_POST_NO, 
                        string RSDT_CNTRY_CD, 
                        string RSDT_REGN_CD, 
                        string RSDT_SOATO_CD, 
                        string RSDT_STRE_ADDR, 
                        string ENG_RSDT_STRE_ADDR, 
                        string RSDT_ADDR_CONT, 
                        string ENG_RSDT_ADDR_CONT, 
                        string TEL_NO, 
                        string EMAIL, 
                        string FAX_NO, 
                        string HOMP, 
                        string DIST_ID_TYPE_CD, 
                        string DIST_ID, 
                        string DIST_ID_2, 
                        string OFSH_YN, 
                        string OKPO_CD, 
                        string OKONH_CD, 
                        string TYBZ_CD, 
                        string CORPS_REG_PLC_CD, 
                        string REMARK, 
                        string LGR_NO, 
                        string LGR_USR_ID, 
                        string CRP_ISSU_DD, 
                        string OLD_CRP_CD, 
                        string UKWN_YN, 
                        string AGENT_CRP_CD, 
                        long SEQ, 
                        string DOCU_NO, 
                        string FEE_LEVY_YN, 
                        long CRP_FEE, 
                        string RP_RQST_DD, 
                        long RP_RQST_SEQ, 
                        string ISSR_CAT_CD, 
                        string SOOGU_CD, 
                        System.DateTime CRTE_DT, 
                        string CRTE_ID, 
                        System.DateTime UPD_DT, 
                        string UPD_ID) {
                TBCB_CRP_INFORow rowTBCB_CRP_INFORow = ((TBCB_CRP_INFORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CRP_CD,
                        CRP_TYPE_CD,
                        CRP_SRNM,
                        CRP_FRST_NM,
                        CRP_SCND_NM,
                        ENG_CRP_SRNM,
                        ENG_CRP_FRST_NM,
                        ENG_CRP_SCND_NM,
                        CPCT_CD,
                        SHRT_CRP_NM,
                        ENG_SHRT_CRP_NM,
                        CRP_NM,
                        ENG_CRP_NM,
                        CRP_CAT_CD,
                        CRP_STAT_CD,
                        CNTRY_CD,
                        RSDT_YN,
                        BIRTH_DD,
                        BZNO,
                        SWFT_CD,
                        REG_POST_NO,
                        REG_CNTRY_CD,
                        REG_REGN_CD,
                        REG_SOATO_CD,
                        REG_STRE_ADDR,
                        ENG_REG_STRE_ADDR,
                        REG_ADDR_CONT,
                        ENG_REG_ADDR_CONT,
                        RSDT_POST_NO,
                        RSDT_CNTRY_CD,
                        RSDT_REGN_CD,
                        RSDT_SOATO_CD,
                        RSDT_STRE_ADDR,
                        ENG_RSDT_STRE_ADDR,
                        RSDT_ADDR_CONT,
                        ENG_RSDT_ADDR_CONT,
                        TEL_NO,
                        EMAIL,
                        FAX_NO,
                        HOMP,
                        DIST_ID_TYPE_CD,
                        DIST_ID,
                        DIST_ID_2,
                        OFSH_YN,
                        OKPO_CD,
                        OKONH_CD,
                        TYBZ_CD,
                        CORPS_REG_PLC_CD,
                        REMARK,
                        LGR_NO,
                        LGR_USR_ID,
                        CRP_ISSU_DD,
                        OLD_CRP_CD,
                        UKWN_YN,
                        AGENT_CRP_CD,
                        SEQ,
                        DOCU_NO,
                        FEE_LEVY_YN,
                        CRP_FEE,
                        RP_RQST_DD,
                        RP_RQST_SEQ,
                        ISSR_CAT_CD,
                        SOOGU_CD,
                        CRTE_DT,
                        CRTE_ID,
                        UPD_DT,
                        UPD_ID};
                rowTBCB_CRP_INFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTBCB_CRP_INFORow);
                return rowTBCB_CRP_INFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFORow FindByCRP_CD(string CRP_CD) {
                return ((TBCB_CRP_INFORow)(this.Rows.Find(new object[] {
                            CRP_CD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TBCB_CRP_INFODataTable cln = ((TBCB_CRP_INFODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TBCB_CRP_INFODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCRP_CD = base.Columns["CRP_CD"];
                this.columnCRP_TYPE_CD = base.Columns["CRP_TYPE_CD"];
                this.columnCRP_SRNM = base.Columns["CRP_SRNM"];
                this.columnCRP_FRST_NM = base.Columns["CRP_FRST_NM"];
                this.columnCRP_SCND_NM = base.Columns["CRP_SCND_NM"];
                this.columnENG_CRP_SRNM = base.Columns["ENG_CRP_SRNM"];
                this.columnENG_CRP_FRST_NM = base.Columns["ENG_CRP_FRST_NM"];
                this.columnENG_CRP_SCND_NM = base.Columns["ENG_CRP_SCND_NM"];
                this.columnCPCT_CD = base.Columns["CPCT_CD"];
                this.columnSHRT_CRP_NM = base.Columns["SHRT_CRP_NM"];
                this.columnENG_SHRT_CRP_NM = base.Columns["ENG_SHRT_CRP_NM"];
                this.columnCRP_NM = base.Columns["CRP_NM"];
                this.columnENG_CRP_NM = base.Columns["ENG_CRP_NM"];
                this.columnCRP_CAT_CD = base.Columns["CRP_CAT_CD"];
                this.columnCRP_STAT_CD = base.Columns["CRP_STAT_CD"];
                this.columnCNTRY_CD = base.Columns["CNTRY_CD"];
                this.columnRSDT_YN = base.Columns["RSDT_YN"];
                this.columnBIRTH_DD = base.Columns["BIRTH_DD"];
                this.columnBZNO = base.Columns["BZNO"];
                this.columnSWFT_CD = base.Columns["SWFT_CD"];
                this.columnREG_POST_NO = base.Columns["REG_POST_NO"];
                this.columnREG_CNTRY_CD = base.Columns["REG_CNTRY_CD"];
                this.columnREG_REGN_CD = base.Columns["REG_REGN_CD"];
                this.columnREG_SOATO_CD = base.Columns["REG_SOATO_CD"];
                this.columnREG_STRE_ADDR = base.Columns["REG_STRE_ADDR"];
                this.columnENG_REG_STRE_ADDR = base.Columns["ENG_REG_STRE_ADDR"];
                this.columnREG_ADDR_CONT = base.Columns["REG_ADDR_CONT"];
                this.columnENG_REG_ADDR_CONT = base.Columns["ENG_REG_ADDR_CONT"];
                this.columnRSDT_POST_NO = base.Columns["RSDT_POST_NO"];
                this.columnRSDT_CNTRY_CD = base.Columns["RSDT_CNTRY_CD"];
                this.columnRSDT_REGN_CD = base.Columns["RSDT_REGN_CD"];
                this.columnRSDT_SOATO_CD = base.Columns["RSDT_SOATO_CD"];
                this.columnRSDT_STRE_ADDR = base.Columns["RSDT_STRE_ADDR"];
                this.columnENG_RSDT_STRE_ADDR = base.Columns["ENG_RSDT_STRE_ADDR"];
                this.columnRSDT_ADDR_CONT = base.Columns["RSDT_ADDR_CONT"];
                this.columnENG_RSDT_ADDR_CONT = base.Columns["ENG_RSDT_ADDR_CONT"];
                this.columnTEL_NO = base.Columns["TEL_NO"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnFAX_NO = base.Columns["FAX_NO"];
                this.columnHOMP = base.Columns["HOMP"];
                this.columnDIST_ID_TYPE_CD = base.Columns["DIST_ID_TYPE_CD"];
                this.columnDIST_ID = base.Columns["DIST_ID"];
                this.columnDIST_ID_2 = base.Columns["DIST_ID_2"];
                this.columnOFSH_YN = base.Columns["OFSH_YN"];
                this.columnOKPO_CD = base.Columns["OKPO_CD"];
                this.columnOKONH_CD = base.Columns["OKONH_CD"];
                this.columnTYBZ_CD = base.Columns["TYBZ_CD"];
                this.columnCORPS_REG_PLC_CD = base.Columns["CORPS_REG_PLC_CD"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnLGR_NO = base.Columns["LGR_NO"];
                this.columnLGR_USR_ID = base.Columns["LGR_USR_ID"];
                this.columnCRP_ISSU_DD = base.Columns["CRP_ISSU_DD"];
                this.columnOLD_CRP_CD = base.Columns["OLD_CRP_CD"];
                this.columnUKWN_YN = base.Columns["UKWN_YN"];
                this.columnAGENT_CRP_CD = base.Columns["AGENT_CRP_CD"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnDOCU_NO = base.Columns["DOCU_NO"];
                this.columnFEE_LEVY_YN = base.Columns["FEE_LEVY_YN"];
                this.columnCRP_FEE = base.Columns["CRP_FEE"];
                this.columnRP_RQST_DD = base.Columns["RP_RQST_DD"];
                this.columnRP_RQST_SEQ = base.Columns["RP_RQST_SEQ"];
                this.columnISSR_CAT_CD = base.Columns["ISSR_CAT_CD"];
                this.columnSOOGU_CD = base.Columns["SOOGU_CD"];
                this.columnCRTE_DT = base.Columns["CRTE_DT"];
                this.columnCRTE_ID = base.Columns["CRTE_ID"];
                this.columnUPD_DT = base.Columns["UPD_DT"];
                this.columnUPD_ID = base.Columns["UPD_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCRP_CD = new global::System.Data.DataColumn("CRP_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_CD);
                this.columnCRP_TYPE_CD = new global::System.Data.DataColumn("CRP_TYPE_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_TYPE_CD);
                this.columnCRP_SRNM = new global::System.Data.DataColumn("CRP_SRNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_SRNM);
                this.columnCRP_FRST_NM = new global::System.Data.DataColumn("CRP_FRST_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_FRST_NM);
                this.columnCRP_SCND_NM = new global::System.Data.DataColumn("CRP_SCND_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_SCND_NM);
                this.columnENG_CRP_SRNM = new global::System.Data.DataColumn("ENG_CRP_SRNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_CRP_SRNM);
                this.columnENG_CRP_FRST_NM = new global::System.Data.DataColumn("ENG_CRP_FRST_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_CRP_FRST_NM);
                this.columnENG_CRP_SCND_NM = new global::System.Data.DataColumn("ENG_CRP_SCND_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_CRP_SCND_NM);
                this.columnCPCT_CD = new global::System.Data.DataColumn("CPCT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPCT_CD);
                this.columnSHRT_CRP_NM = new global::System.Data.DataColumn("SHRT_CRP_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHRT_CRP_NM);
                this.columnENG_SHRT_CRP_NM = new global::System.Data.DataColumn("ENG_SHRT_CRP_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_SHRT_CRP_NM);
                this.columnCRP_NM = new global::System.Data.DataColumn("CRP_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_NM);
                this.columnENG_CRP_NM = new global::System.Data.DataColumn("ENG_CRP_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_CRP_NM);
                this.columnCRP_CAT_CD = new global::System.Data.DataColumn("CRP_CAT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_CAT_CD);
                this.columnCRP_STAT_CD = new global::System.Data.DataColumn("CRP_STAT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_STAT_CD);
                this.columnCNTRY_CD = new global::System.Data.DataColumn("CNTRY_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNTRY_CD);
                this.columnRSDT_YN = new global::System.Data.DataColumn("RSDT_YN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_YN);
                this.columnBIRTH_DD = new global::System.Data.DataColumn("BIRTH_DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTH_DD);
                this.columnBZNO = new global::System.Data.DataColumn("BZNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZNO);
                this.columnSWFT_CD = new global::System.Data.DataColumn("SWFT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWFT_CD);
                this.columnREG_POST_NO = new global::System.Data.DataColumn("REG_POST_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_POST_NO);
                this.columnREG_CNTRY_CD = new global::System.Data.DataColumn("REG_CNTRY_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_CNTRY_CD);
                this.columnREG_REGN_CD = new global::System.Data.DataColumn("REG_REGN_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_REGN_CD);
                this.columnREG_SOATO_CD = new global::System.Data.DataColumn("REG_SOATO_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_SOATO_CD);
                this.columnREG_STRE_ADDR = new global::System.Data.DataColumn("REG_STRE_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_STRE_ADDR);
                this.columnENG_REG_STRE_ADDR = new global::System.Data.DataColumn("ENG_REG_STRE_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_REG_STRE_ADDR);
                this.columnREG_ADDR_CONT = new global::System.Data.DataColumn("REG_ADDR_CONT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_ADDR_CONT);
                this.columnENG_REG_ADDR_CONT = new global::System.Data.DataColumn("ENG_REG_ADDR_CONT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_REG_ADDR_CONT);
                this.columnRSDT_POST_NO = new global::System.Data.DataColumn("RSDT_POST_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_POST_NO);
                this.columnRSDT_CNTRY_CD = new global::System.Data.DataColumn("RSDT_CNTRY_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_CNTRY_CD);
                this.columnRSDT_REGN_CD = new global::System.Data.DataColumn("RSDT_REGN_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_REGN_CD);
                this.columnRSDT_SOATO_CD = new global::System.Data.DataColumn("RSDT_SOATO_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_SOATO_CD);
                this.columnRSDT_STRE_ADDR = new global::System.Data.DataColumn("RSDT_STRE_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_STRE_ADDR);
                this.columnENG_RSDT_STRE_ADDR = new global::System.Data.DataColumn("ENG_RSDT_STRE_ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_RSDT_STRE_ADDR);
                this.columnRSDT_ADDR_CONT = new global::System.Data.DataColumn("RSDT_ADDR_CONT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSDT_ADDR_CONT);
                this.columnENG_RSDT_ADDR_CONT = new global::System.Data.DataColumn("ENG_RSDT_ADDR_CONT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENG_RSDT_ADDR_CONT);
                this.columnTEL_NO = new global::System.Data.DataColumn("TEL_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_NO);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnFAX_NO = new global::System.Data.DataColumn("FAX_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX_NO);
                this.columnHOMP = new global::System.Data.DataColumn("HOMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOMP);
                this.columnDIST_ID_TYPE_CD = new global::System.Data.DataColumn("DIST_ID_TYPE_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIST_ID_TYPE_CD);
                this.columnDIST_ID = new global::System.Data.DataColumn("DIST_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIST_ID);
                this.columnDIST_ID_2 = new global::System.Data.DataColumn("DIST_ID_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIST_ID_2);
                this.columnOFSH_YN = new global::System.Data.DataColumn("OFSH_YN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFSH_YN);
                this.columnOKPO_CD = new global::System.Data.DataColumn("OKPO_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOKPO_CD);
                this.columnOKONH_CD = new global::System.Data.DataColumn("OKONH_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOKONH_CD);
                this.columnTYBZ_CD = new global::System.Data.DataColumn("TYBZ_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYBZ_CD);
                this.columnCORPS_REG_PLC_CD = new global::System.Data.DataColumn("CORPS_REG_PLC_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCORPS_REG_PLC_CD);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnLGR_NO = new global::System.Data.DataColumn("LGR_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGR_NO);
                this.columnLGR_USR_ID = new global::System.Data.DataColumn("LGR_USR_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGR_USR_ID);
                this.columnCRP_ISSU_DD = new global::System.Data.DataColumn("CRP_ISSU_DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_ISSU_DD);
                this.columnOLD_CRP_CD = new global::System.Data.DataColumn("OLD_CRP_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_CRP_CD);
                this.columnUKWN_YN = new global::System.Data.DataColumn("UKWN_YN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUKWN_YN);
                this.columnAGENT_CRP_CD = new global::System.Data.DataColumn("AGENT_CRP_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGENT_CRP_CD);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnDOCU_NO = new global::System.Data.DataColumn("DOCU_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_NO);
                this.columnFEE_LEVY_YN = new global::System.Data.DataColumn("FEE_LEVY_YN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEE_LEVY_YN);
                this.columnCRP_FEE = new global::System.Data.DataColumn("CRP_FEE", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_FEE);
                this.columnRP_RQST_DD = new global::System.Data.DataColumn("RP_RQST_DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRP_RQST_DD);
                this.columnRP_RQST_SEQ = new global::System.Data.DataColumn("RP_RQST_SEQ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRP_RQST_SEQ);
                this.columnISSR_CAT_CD = new global::System.Data.DataColumn("ISSR_CAT_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISSR_CAT_CD);
                this.columnSOOGU_CD = new global::System.Data.DataColumn("SOOGU_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOOGU_CD);
                this.columnCRTE_DT = new global::System.Data.DataColumn("CRTE_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRTE_DT);
                this.columnCRTE_ID = new global::System.Data.DataColumn("CRTE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRTE_ID);
                this.columnUPD_DT = new global::System.Data.DataColumn("UPD_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPD_DT);
                this.columnUPD_ID = new global::System.Data.DataColumn("UPD_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPD_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCRP_CD}, true));
                this.columnCRP_CD.AllowDBNull = false;
                this.columnCRP_CD.Unique = true;
                this.columnCRP_CD.MaxLength = 12;
                this.columnCRP_TYPE_CD.AllowDBNull = false;
                this.columnCRP_TYPE_CD.MaxLength = 4;
                this.columnCRP_SRNM.MaxLength = 100;
                this.columnCRP_FRST_NM.MaxLength = 100;
                this.columnCRP_SCND_NM.MaxLength = 100;
                this.columnENG_CRP_SRNM.MaxLength = 100;
                this.columnENG_CRP_FRST_NM.MaxLength = 100;
                this.columnENG_CRP_SCND_NM.MaxLength = 100;
                this.columnCPCT_CD.MaxLength = 3;
                this.columnSHRT_CRP_NM.AllowDBNull = false;
                this.columnSHRT_CRP_NM.MaxLength = 200;
                this.columnENG_SHRT_CRP_NM.MaxLength = 200;
                this.columnCRP_NM.AllowDBNull = false;
                this.columnCRP_NM.MaxLength = 300;
                this.columnENG_CRP_NM.MaxLength = 300;
                this.columnCRP_CAT_CD.AllowDBNull = false;
                this.columnCRP_CAT_CD.MaxLength = 1;
                this.columnCRP_STAT_CD.AllowDBNull = false;
                this.columnCRP_STAT_CD.MaxLength = 1;
                this.columnCNTRY_CD.MaxLength = 3;
                this.columnRSDT_YN.MaxLength = 1;
                this.columnBIRTH_DD.MaxLength = 8;
                this.columnBZNO.MaxLength = 100;
                this.columnSWFT_CD.MaxLength = 10;
                this.columnREG_POST_NO.MaxLength = 10;
                this.columnREG_CNTRY_CD.MaxLength = 3;
                this.columnREG_REGN_CD.MaxLength = 2;
                this.columnREG_SOATO_CD.MaxLength = 10;
                this.columnREG_STRE_ADDR.MaxLength = 200;
                this.columnENG_REG_STRE_ADDR.MaxLength = 200;
                this.columnREG_ADDR_CONT.MaxLength = 600;
                this.columnENG_REG_ADDR_CONT.MaxLength = 600;
                this.columnRSDT_POST_NO.MaxLength = 10;
                this.columnRSDT_CNTRY_CD.MaxLength = 3;
                this.columnRSDT_REGN_CD.MaxLength = 2;
                this.columnRSDT_SOATO_CD.MaxLength = 10;
                this.columnRSDT_STRE_ADDR.MaxLength = 200;
                this.columnENG_RSDT_STRE_ADDR.MaxLength = 200;
                this.columnRSDT_ADDR_CONT.MaxLength = 600;
                this.columnENG_RSDT_ADDR_CONT.MaxLength = 600;
                this.columnTEL_NO.MaxLength = 30;
                this.columnEMAIL.MaxLength = 40;
                this.columnFAX_NO.MaxLength = 30;
                this.columnHOMP.MaxLength = 100;
                this.columnDIST_ID_TYPE_CD.MaxLength = 2;
                this.columnDIST_ID.MaxLength = 100;
                this.columnDIST_ID_2.MaxLength = 40;
                this.columnOFSH_YN.MaxLength = 1;
                this.columnOKPO_CD.MaxLength = 10;
                this.columnOKONH_CD.MaxLength = 5;
                this.columnTYBZ_CD.MaxLength = 4;
                this.columnCORPS_REG_PLC_CD.MaxLength = 2;
                this.columnREMARK.MaxLength = 1000;
                this.columnLGR_NO.MaxLength = 5;
                this.columnLGR_USR_ID.MaxLength = 10;
                this.columnCRP_ISSU_DD.AllowDBNull = false;
                this.columnCRP_ISSU_DD.MaxLength = 8;
                this.columnOLD_CRP_CD.MaxLength = 7;
                this.columnUKWN_YN.MaxLength = 1;
                this.columnAGENT_CRP_CD.MaxLength = 12;
                this.columnDOCU_NO.MaxLength = 40;
                this.columnFEE_LEVY_YN.MaxLength = 1;
                this.columnRP_RQST_DD.MaxLength = 8;
                this.columnISSR_CAT_CD.MaxLength = 1;
                this.columnSOOGU_CD.MaxLength = 10;
                this.columnCRTE_ID.MaxLength = 20;
                this.columnUPD_ID.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFORow NewTBCB_CRP_INFORow() {
                return ((TBCB_CRP_INFORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TBCB_CRP_INFORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TBCB_CRP_INFORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TBCB_CRP_INFORowChanged != null)) {
                    this.TBCB_CRP_INFORowChanged(this, new TBCB_CRP_INFORowChangeEvent(((TBCB_CRP_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TBCB_CRP_INFORowChanging != null)) {
                    this.TBCB_CRP_INFORowChanging(this, new TBCB_CRP_INFORowChangeEvent(((TBCB_CRP_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TBCB_CRP_INFORowDeleted != null)) {
                    this.TBCB_CRP_INFORowDeleted(this, new TBCB_CRP_INFORowChangeEvent(((TBCB_CRP_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TBCB_CRP_INFORowDeleting != null)) {
                    this.TBCB_CRP_INFORowDeleting(this, new TBCB_CRP_INFORowChangeEvent(((TBCB_CRP_INFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTBCB_CRP_INFORow(TBCB_CRP_INFORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NeedDataset ds = new NeedDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBCB_CRP_INFODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TABLE_FOR_CDDataTable : global::System.Data.TypedTableBase<TABLE_FOR_CDRow> {
            
            private global::System.Data.DataColumn columnCRP_CD;
            
            private global::System.Data.DataColumn columnDOCU_PRICE;
            
            private global::System.Data.DataColumn columnGET_DD;
            
            private global::System.Data.DataColumn columnDOCU_NO;
            
            private global::System.Data.DataColumn columnARCHV;
            
            private global::System.Data.DataColumn columnDESCRPT;
            
            private global::System.Data.DataColumn columnESTM_CD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TABLE_FOR_CDDataTable() {
                this.TableName = "TABLE_FOR_CD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TABLE_FOR_CDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TABLE_FOR_CDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_CDColumn {
                get {
                    return this.columnCRP_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_PRICEColumn {
                get {
                    return this.columnDOCU_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GET_DDColumn {
                get {
                    return this.columnGET_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_NOColumn {
                get {
                    return this.columnDOCU_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ARCHVColumn {
                get {
                    return this.columnARCHV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRPTColumn {
                get {
                    return this.columnDESCRPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ESTM_CDColumn {
                get {
                    return this.columnESTM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TABLE_FOR_CDRow this[int index] {
                get {
                    return ((TABLE_FOR_CDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TABLE_FOR_CDRowChangeEventHandler TABLE_FOR_CDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TABLE_FOR_CDRowChangeEventHandler TABLE_FOR_CDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TABLE_FOR_CDRowChangeEventHandler TABLE_FOR_CDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TABLE_FOR_CDRowChangeEventHandler TABLE_FOR_CDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTABLE_FOR_CDRow(TABLE_FOR_CDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TABLE_FOR_CDRow AddTABLE_FOR_CDRow(string CRP_CD, decimal DOCU_PRICE, string GET_DD, string DOCU_NO, string ARCHV, string DESCRPT, decimal ESTM_CD) {
                TABLE_FOR_CDRow rowTABLE_FOR_CDRow = ((TABLE_FOR_CDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CRP_CD,
                        DOCU_PRICE,
                        GET_DD,
                        DOCU_NO,
                        ARCHV,
                        DESCRPT,
                        ESTM_CD};
                rowTABLE_FOR_CDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTABLE_FOR_CDRow);
                return rowTABLE_FOR_CDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TABLE_FOR_CDDataTable cln = ((TABLE_FOR_CDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TABLE_FOR_CDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCRP_CD = base.Columns["CRP_CD"];
                this.columnDOCU_PRICE = base.Columns["DOCU_PRICE"];
                this.columnGET_DD = base.Columns["GET_DD"];
                this.columnDOCU_NO = base.Columns["DOCU_NO"];
                this.columnARCHV = base.Columns["ARCHV"];
                this.columnDESCRPT = base.Columns["DESCRPT"];
                this.columnESTM_CD = base.Columns["ESTM_CD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCRP_CD = new global::System.Data.DataColumn("CRP_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_CD);
                this.columnDOCU_PRICE = new global::System.Data.DataColumn("DOCU_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_PRICE);
                this.columnGET_DD = new global::System.Data.DataColumn("GET_DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGET_DD);
                this.columnDOCU_NO = new global::System.Data.DataColumn("DOCU_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_NO);
                this.columnARCHV = new global::System.Data.DataColumn("ARCHV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARCHV);
                this.columnDESCRPT = new global::System.Data.DataColumn("DESCRPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRPT);
                this.columnESTM_CD = new global::System.Data.DataColumn("ESTM_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTM_CD);
                this.columnCRP_CD.AllowDBNull = false;
                this.columnCRP_CD.MaxLength = 13;
                this.columnDOCU_PRICE.AllowDBNull = false;
                this.columnGET_DD.MaxLength = 8;
                this.columnDOCU_NO.MaxLength = 20;
                this.columnARCHV.MaxLength = 200;
                this.columnDESCRPT.MaxLength = 200;
                this.columnESTM_CD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TABLE_FOR_CDRow NewTABLE_FOR_CDRow() {
                return ((TABLE_FOR_CDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TABLE_FOR_CDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TABLE_FOR_CDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TABLE_FOR_CDRowChanged != null)) {
                    this.TABLE_FOR_CDRowChanged(this, new TABLE_FOR_CDRowChangeEvent(((TABLE_FOR_CDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TABLE_FOR_CDRowChanging != null)) {
                    this.TABLE_FOR_CDRowChanging(this, new TABLE_FOR_CDRowChangeEvent(((TABLE_FOR_CDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TABLE_FOR_CDRowDeleted != null)) {
                    this.TABLE_FOR_CDRowDeleted(this, new TABLE_FOR_CDRowChangeEvent(((TABLE_FOR_CDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TABLE_FOR_CDRowDeleting != null)) {
                    this.TABLE_FOR_CDRowDeleting(this, new TABLE_FOR_CDRowChangeEvent(((TABLE_FOR_CDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTABLE_FOR_CDRow(TABLE_FOR_CDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NeedDataset ds = new NeedDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TABLE_FOR_CDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NEW_TBCBDataTable : global::System.Data.TypedTableBase<NEW_TBCBRow> {
            
            private global::System.Data.DataColumn columnCRP_CD;
            
            private global::System.Data.DataColumn columnDOCU_PRICE;
            
            private global::System.Data.DataColumn columnGET_DD;
            
            private global::System.Data.DataColumn columnDOCU_NO;
            
            private global::System.Data.DataColumn columnARCHV;
            
            private global::System.Data.DataColumn columnDESCRPT;
            
            private global::System.Data.DataColumn columnESTM_CD;
            
            private global::System.Data.DataColumn columnESTM_NM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEW_TBCBDataTable() {
                this.TableName = "NEW_TBCB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NEW_TBCBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected NEW_TBCBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CRP_CDColumn {
                get {
                    return this.columnCRP_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_PRICEColumn {
                get {
                    return this.columnDOCU_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GET_DDColumn {
                get {
                    return this.columnGET_DD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOCU_NOColumn {
                get {
                    return this.columnDOCU_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ARCHVColumn {
                get {
                    return this.columnARCHV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DESCRPTColumn {
                get {
                    return this.columnDESCRPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ESTM_CDColumn {
                get {
                    return this.columnESTM_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ESTM_NMColumn {
                get {
                    return this.columnESTM_NM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEW_TBCBRow this[int index] {
                get {
                    return ((NEW_TBCBRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEW_TBCBRowChangeEventHandler NEW_TBCBRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEW_TBCBRowChangeEventHandler NEW_TBCBRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEW_TBCBRowChangeEventHandler NEW_TBCBRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event NEW_TBCBRowChangeEventHandler NEW_TBCBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddNEW_TBCBRow(NEW_TBCBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEW_TBCBRow AddNEW_TBCBRow(string CRP_CD, string DOCU_PRICE, decimal GET_DD, string DOCU_NO, string ARCHV, string DESCRPT, string ESTM_CD, string ESTM_NM) {
                NEW_TBCBRow rowNEW_TBCBRow = ((NEW_TBCBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CRP_CD,
                        DOCU_PRICE,
                        GET_DD,
                        DOCU_NO,
                        ARCHV,
                        DESCRPT,
                        ESTM_CD,
                        ESTM_NM};
                rowNEW_TBCBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNEW_TBCBRow);
                return rowNEW_TBCBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NEW_TBCBDataTable cln = ((NEW_TBCBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NEW_TBCBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCRP_CD = base.Columns["CRP_CD"];
                this.columnDOCU_PRICE = base.Columns["DOCU_PRICE"];
                this.columnGET_DD = base.Columns["GET_DD"];
                this.columnDOCU_NO = base.Columns["DOCU_NO"];
                this.columnARCHV = base.Columns["ARCHV"];
                this.columnDESCRPT = base.Columns["DESCRPT"];
                this.columnESTM_CD = base.Columns["ESTM_CD"];
                this.columnESTM_NM = base.Columns["ESTM_NM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCRP_CD = new global::System.Data.DataColumn("CRP_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRP_CD);
                this.columnDOCU_PRICE = new global::System.Data.DataColumn("DOCU_PRICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_PRICE);
                this.columnGET_DD = new global::System.Data.DataColumn("GET_DD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGET_DD);
                this.columnDOCU_NO = new global::System.Data.DataColumn("DOCU_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCU_NO);
                this.columnARCHV = new global::System.Data.DataColumn("ARCHV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARCHV);
                this.columnDESCRPT = new global::System.Data.DataColumn("DESCRPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRPT);
                this.columnESTM_CD = new global::System.Data.DataColumn("ESTM_CD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTM_CD);
                this.columnESTM_NM = new global::System.Data.DataColumn("ESTM_NM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTM_NM);
                this.columnCRP_CD.AllowDBNull = false;
                this.columnCRP_CD.MaxLength = 12;
                this.columnDOCU_PRICE.AllowDBNull = false;
                this.columnDOCU_PRICE.MaxLength = 1000;
                this.columnGET_DD.AllowDBNull = false;
                this.columnDOCU_NO.AllowDBNull = false;
                this.columnDOCU_NO.MaxLength = 1000;
                this.columnARCHV.MaxLength = 1000;
                this.columnDESCRPT.MaxLength = 1000;
                this.columnESTM_CD.MaxLength = 100;
                this.columnESTM_NM.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEW_TBCBRow NewNEW_TBCBRow() {
                return ((NEW_TBCBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NEW_TBCBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NEW_TBCBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NEW_TBCBRowChanged != null)) {
                    this.NEW_TBCBRowChanged(this, new NEW_TBCBRowChangeEvent(((NEW_TBCBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NEW_TBCBRowChanging != null)) {
                    this.NEW_TBCBRowChanging(this, new NEW_TBCBRowChangeEvent(((NEW_TBCBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NEW_TBCBRowDeleted != null)) {
                    this.NEW_TBCBRowDeleted(this, new NEW_TBCBRowChangeEvent(((NEW_TBCBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NEW_TBCBRowDeleting != null)) {
                    this.NEW_TBCBRowDeleting(this, new NEW_TBCBRowChangeEvent(((NEW_TBCBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveNEW_TBCBRow(NEW_TBCBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NeedDataset ds = new NeedDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NEW_TBCBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBCB_CRP_DOCU_INFORow : global::System.Data.DataRow {
            
            private TBCB_CRP_DOCU_INFODataTable tableTBCB_CRP_DOCU_INFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBCB_CRP_DOCU_INFORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBCB_CRP_DOCU_INFO = ((TBCB_CRP_DOCU_INFODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_CD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.CRP_CDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.CRP_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long SEQ {
                get {
                    return ((long)(this[this.tableTBCB_CRP_DOCU_INFO.SEQColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DIST_ID_TYPE_CD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DIST_ID_TYPE_CDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DIST_ID_TYPE_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DIST_ID {
                get {
                    return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DIST_IDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DIST_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_NO {
                get {
                    return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_NOColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_SRES {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_SRESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_SRES\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_SRESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_CLS_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_CLS_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_CLS_CD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_CLS_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_TYPE_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_TYPE_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_TYPE_CD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_TYPE_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_ISSU_DD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_ISSU_DDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_ISSU_DD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_ISSU_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_EXP_DD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_EXP_DDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_EXP_DD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_EXP_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REGR_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.REGR_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REGR_CD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.REGR_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INTN_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.INTN_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'INTN_CD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.INTN_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REMARK\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REMARK_2 {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.REMARK_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REMARK_2\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.REMARK_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_CRTE_DT {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_CRTE_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_CRTE_DT\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_CRTE_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_STAT_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.DOCU_STAT_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_STAT_CD\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.DOCU_STAT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CRTE_DT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBCB_CRP_DOCU_INFO.CRTE_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRTE_DT\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.CRTE_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRTE_ID {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.CRTE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRTE_ID\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.CRTE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UPD_DT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBCB_CRP_DOCU_INFO.UPD_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UPD_DT\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.UPD_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UPD_ID {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_DOCU_INFO.UPD_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UPD_ID\' в таблице \'TBCB_CRP_DOCU_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_DOCU_INFO.UPD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_SRESNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_SRESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_SRESNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_SRESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_CLS_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_CLS_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_CLS_CDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_CLS_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_TYPE_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_TYPE_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_TYPE_CDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_TYPE_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_ISSU_DDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_ISSU_DDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_ISSU_DDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_ISSU_DDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_EXP_DDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_EXP_DDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_EXP_DDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_EXP_DDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREGR_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.REGR_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREGR_CDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.REGR_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINTN_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.INTN_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINTN_CDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.INTN_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREMARKNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREMARK_2Null() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.REMARK_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREMARK_2Null() {
                this[this.tableTBCB_CRP_DOCU_INFO.REMARK_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_CRTE_DTNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_CRTE_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_CRTE_DTNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_CRTE_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_STAT_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.DOCU_STAT_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_STAT_CDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.DOCU_STAT_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRTE_DTNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.CRTE_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRTE_DTNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.CRTE_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRTE_IDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.CRTE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRTE_IDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.CRTE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPD_DTNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.UPD_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPD_DTNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.UPD_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPD_IDNull() {
                return this.IsNull(this.tableTBCB_CRP_DOCU_INFO.UPD_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPD_IDNull() {
                this[this.tableTBCB_CRP_DOCU_INFO.UPD_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TBCB_CRP_INFORow : global::System.Data.DataRow {
            
            private TBCB_CRP_INFODataTable tableTBCB_CRP_INFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TBCB_CRP_INFORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTBCB_CRP_INFO = ((TBCB_CRP_INFODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_CD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.CRP_CDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_TYPE_CD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.CRP_TYPE_CDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_TYPE_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_SRNM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CRP_SRNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRP_SRNM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_SRNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_FRST_NM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CRP_FRST_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRP_FRST_NM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_FRST_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_SCND_NM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CRP_SCND_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRP_SCND_NM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_SCND_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_CRP_SRNM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_CRP_SRNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_CRP_SRNM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_CRP_SRNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_CRP_FRST_NM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_CRP_FRST_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_CRP_FRST_NM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_CRP_FRST_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_CRP_SCND_NM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_CRP_SCND_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_CRP_SCND_NM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_CRP_SCND_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CPCT_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CPCT_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CPCT_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CPCT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHRT_CRP_NM {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.SHRT_CRP_NMColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.SHRT_CRP_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_SHRT_CRP_NM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_SHRT_CRP_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_SHRT_CRP_NM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_SHRT_CRP_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_NM {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.CRP_NMColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_CRP_NM {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_CRP_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_CRP_NM\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_CRP_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_CAT_CD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.CRP_CAT_CDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_CAT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_STAT_CD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.CRP_STAT_CDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_STAT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CNTRY_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CNTRY_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CNTRY_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CNTRY_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_YN {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_YNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_YN\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_YNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BIRTH_DD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.BIRTH_DDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'BIRTH_DD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.BIRTH_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BZNO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.BZNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'BZNO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.BZNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SWFT_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.SWFT_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SWFT_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.SWFT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REG_POST_NO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REG_POST_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REG_POST_NO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REG_POST_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REG_CNTRY_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REG_CNTRY_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REG_CNTRY_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REG_CNTRY_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REG_REGN_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REG_REGN_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REG_REGN_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REG_REGN_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REG_SOATO_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REG_SOATO_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REG_SOATO_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REG_SOATO_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REG_STRE_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REG_STRE_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REG_STRE_ADDR\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REG_STRE_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_REG_STRE_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_REG_STRE_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_REG_STRE_ADDR\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_REG_STRE_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REG_ADDR_CONT {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REG_ADDR_CONTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REG_ADDR_CONT\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REG_ADDR_CONTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_REG_ADDR_CONT {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_REG_ADDR_CONTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_REG_ADDR_CONT\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_REG_ADDR_CONTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_POST_NO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_POST_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_POST_NO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_POST_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_CNTRY_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_CNTRY_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_CNTRY_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_CNTRY_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_REGN_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_REGN_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_REGN_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_REGN_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_SOATO_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_SOATO_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_SOATO_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_SOATO_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_STRE_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_STRE_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_STRE_ADDR\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_STRE_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_RSDT_STRE_ADDR {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_RSDT_STRE_ADDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_RSDT_STRE_ADDR\' в таблице \'TBCB_CRP_INFO\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_RSDT_STRE_ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RSDT_ADDR_CONT {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RSDT_ADDR_CONTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RSDT_ADDR_CONT\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RSDT_ADDR_CONTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ENG_RSDT_ADDR_CONT {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ENG_RSDT_ADDR_CONTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ENG_RSDT_ADDR_CONT\' в таблице \'TBCB_CRP_INFO\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ENG_RSDT_ADDR_CONTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEL_NO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.TEL_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TEL_NO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.TEL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'EMAIL\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FAX_NO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.FAX_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FAX_NO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.FAX_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HOMP {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.HOMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'HOMP\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.HOMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DIST_ID_TYPE_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.DIST_ID_TYPE_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DIST_ID_TYPE_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.DIST_ID_TYPE_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DIST_ID {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.DIST_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DIST_ID\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.DIST_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DIST_ID_2 {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.DIST_ID_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DIST_ID_2\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.DIST_ID_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OFSH_YN {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.OFSH_YNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OFSH_YN\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.OFSH_YNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OKPO_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.OKPO_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OKPO_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.OKPO_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OKONH_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.OKONH_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OKONH_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.OKONH_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TYBZ_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.TYBZ_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TYBZ_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.TYBZ_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CORPS_REG_PLC_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CORPS_REG_PLC_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CORPS_REG_PLC_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CORPS_REG_PLC_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'REMARK\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LGR_NO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.LGR_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LGR_NO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.LGR_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LGR_USR_ID {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.LGR_USR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'LGR_USR_ID\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.LGR_USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_ISSU_DD {
                get {
                    return ((string)(this[this.tableTBCB_CRP_INFO.CRP_ISSU_DDColumn]));
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_ISSU_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OLD_CRP_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.OLD_CRP_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OLD_CRP_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.OLD_CRP_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UKWN_YN {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.UKWN_YNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UKWN_YN\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.UKWN_YNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AGENT_CRP_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.AGENT_CRP_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'AGENT_CRP_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.AGENT_CRP_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long SEQ {
                get {
                    try {
                        return ((long)(this[this.tableTBCB_CRP_INFO.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SEQ\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_NO {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.DOCU_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_NO\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.DOCU_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FEE_LEVY_YN {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.FEE_LEVY_YNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FEE_LEVY_YN\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.FEE_LEVY_YNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long CRP_FEE {
                get {
                    try {
                        return ((long)(this[this.tableTBCB_CRP_INFO.CRP_FEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRP_FEE\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRP_FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RP_RQST_DD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.RP_RQST_DDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RP_RQST_DD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RP_RQST_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long RP_RQST_SEQ {
                get {
                    try {
                        return ((long)(this[this.tableTBCB_CRP_INFO.RP_RQST_SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'RP_RQST_SEQ\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.RP_RQST_SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ISSR_CAT_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.ISSR_CAT_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ISSR_CAT_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.ISSR_CAT_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SOOGU_CD {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.SOOGU_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SOOGU_CD\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.SOOGU_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CRTE_DT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBCB_CRP_INFO.CRTE_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRTE_DT\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRTE_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRTE_ID {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.CRTE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CRTE_ID\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.CRTE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime UPD_DT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTBCB_CRP_INFO.UPD_DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UPD_DT\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.UPD_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UPD_ID {
                get {
                    try {
                        return ((string)(this[this.tableTBCB_CRP_INFO.UPD_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'UPD_ID\' в таблице \'TBCB_CRP_INFO\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTBCB_CRP_INFO.UPD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRP_SRNMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CRP_SRNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRP_SRNMNull() {
                this[this.tableTBCB_CRP_INFO.CRP_SRNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRP_FRST_NMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CRP_FRST_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRP_FRST_NMNull() {
                this[this.tableTBCB_CRP_INFO.CRP_FRST_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRP_SCND_NMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CRP_SCND_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRP_SCND_NMNull() {
                this[this.tableTBCB_CRP_INFO.CRP_SCND_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_CRP_SRNMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_CRP_SRNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_CRP_SRNMNull() {
                this[this.tableTBCB_CRP_INFO.ENG_CRP_SRNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_CRP_FRST_NMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_CRP_FRST_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_CRP_FRST_NMNull() {
                this[this.tableTBCB_CRP_INFO.ENG_CRP_FRST_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_CRP_SCND_NMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_CRP_SCND_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_CRP_SCND_NMNull() {
                this[this.tableTBCB_CRP_INFO.ENG_CRP_SCND_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCPCT_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CPCT_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCPCT_CDNull() {
                this[this.tableTBCB_CRP_INFO.CPCT_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_SHRT_CRP_NMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_SHRT_CRP_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_SHRT_CRP_NMNull() {
                this[this.tableTBCB_CRP_INFO.ENG_SHRT_CRP_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_CRP_NMNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_CRP_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_CRP_NMNull() {
                this[this.tableTBCB_CRP_INFO.ENG_CRP_NMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCNTRY_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CNTRY_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCNTRY_CDNull() {
                this[this.tableTBCB_CRP_INFO.CNTRY_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_YNNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_YNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_YNNull() {
                this[this.tableTBCB_CRP_INFO.RSDT_YNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBIRTH_DDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.BIRTH_DDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBIRTH_DDNull() {
                this[this.tableTBCB_CRP_INFO.BIRTH_DDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBZNONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.BZNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBZNONull() {
                this[this.tableTBCB_CRP_INFO.BZNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSWFT_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.SWFT_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSWFT_CDNull() {
                this[this.tableTBCB_CRP_INFO.SWFT_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREG_POST_NONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REG_POST_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREG_POST_NONull() {
                this[this.tableTBCB_CRP_INFO.REG_POST_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREG_CNTRY_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REG_CNTRY_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREG_CNTRY_CDNull() {
                this[this.tableTBCB_CRP_INFO.REG_CNTRY_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREG_REGN_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REG_REGN_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREG_REGN_CDNull() {
                this[this.tableTBCB_CRP_INFO.REG_REGN_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREG_SOATO_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REG_SOATO_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREG_SOATO_CDNull() {
                this[this.tableTBCB_CRP_INFO.REG_SOATO_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREG_STRE_ADDRNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REG_STRE_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREG_STRE_ADDRNull() {
                this[this.tableTBCB_CRP_INFO.REG_STRE_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_REG_STRE_ADDRNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_REG_STRE_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_REG_STRE_ADDRNull() {
                this[this.tableTBCB_CRP_INFO.ENG_REG_STRE_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREG_ADDR_CONTNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REG_ADDR_CONTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREG_ADDR_CONTNull() {
                this[this.tableTBCB_CRP_INFO.REG_ADDR_CONTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_REG_ADDR_CONTNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_REG_ADDR_CONTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_REG_ADDR_CONTNull() {
                this[this.tableTBCB_CRP_INFO.ENG_REG_ADDR_CONTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_POST_NONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_POST_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_POST_NONull() {
                this[this.tableTBCB_CRP_INFO.RSDT_POST_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_CNTRY_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_CNTRY_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_CNTRY_CDNull() {
                this[this.tableTBCB_CRP_INFO.RSDT_CNTRY_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_REGN_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_REGN_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_REGN_CDNull() {
                this[this.tableTBCB_CRP_INFO.RSDT_REGN_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_SOATO_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_SOATO_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_SOATO_CDNull() {
                this[this.tableTBCB_CRP_INFO.RSDT_SOATO_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_STRE_ADDRNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_STRE_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_STRE_ADDRNull() {
                this[this.tableTBCB_CRP_INFO.RSDT_STRE_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_RSDT_STRE_ADDRNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_RSDT_STRE_ADDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_RSDT_STRE_ADDRNull() {
                this[this.tableTBCB_CRP_INFO.ENG_RSDT_STRE_ADDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRSDT_ADDR_CONTNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RSDT_ADDR_CONTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRSDT_ADDR_CONTNull() {
                this[this.tableTBCB_CRP_INFO.RSDT_ADDR_CONTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsENG_RSDT_ADDR_CONTNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ENG_RSDT_ADDR_CONTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetENG_RSDT_ADDR_CONTNull() {
                this[this.tableTBCB_CRP_INFO.ENG_RSDT_ADDR_CONTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTEL_NONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.TEL_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTEL_NONull() {
                this[this.tableTBCB_CRP_INFO.TEL_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableTBCB_CRP_INFO.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFAX_NONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.FAX_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFAX_NONull() {
                this[this.tableTBCB_CRP_INFO.FAX_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHOMPNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.HOMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHOMPNull() {
                this[this.tableTBCB_CRP_INFO.HOMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDIST_ID_TYPE_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.DIST_ID_TYPE_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDIST_ID_TYPE_CDNull() {
                this[this.tableTBCB_CRP_INFO.DIST_ID_TYPE_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDIST_IDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.DIST_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDIST_IDNull() {
                this[this.tableTBCB_CRP_INFO.DIST_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDIST_ID_2Null() {
                return this.IsNull(this.tableTBCB_CRP_INFO.DIST_ID_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDIST_ID_2Null() {
                this[this.tableTBCB_CRP_INFO.DIST_ID_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOFSH_YNNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.OFSH_YNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOFSH_YNNull() {
                this[this.tableTBCB_CRP_INFO.OFSH_YNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOKPO_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.OKPO_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOKPO_CDNull() {
                this[this.tableTBCB_CRP_INFO.OKPO_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOKONH_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.OKONH_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOKONH_CDNull() {
                this[this.tableTBCB_CRP_INFO.OKONH_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTYBZ_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.TYBZ_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTYBZ_CDNull() {
                this[this.tableTBCB_CRP_INFO.TYBZ_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCORPS_REG_PLC_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CORPS_REG_PLC_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCORPS_REG_PLC_CDNull() {
                this[this.tableTBCB_CRP_INFO.CORPS_REG_PLC_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREMARKNull() {
                this[this.tableTBCB_CRP_INFO.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLGR_NONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.LGR_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLGR_NONull() {
                this[this.tableTBCB_CRP_INFO.LGR_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLGR_USR_IDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.LGR_USR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLGR_USR_IDNull() {
                this[this.tableTBCB_CRP_INFO.LGR_USR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOLD_CRP_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.OLD_CRP_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOLD_CRP_CDNull() {
                this[this.tableTBCB_CRP_INFO.OLD_CRP_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUKWN_YNNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.UKWN_YNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUKWN_YNNull() {
                this[this.tableTBCB_CRP_INFO.UKWN_YNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAGENT_CRP_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.AGENT_CRP_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAGENT_CRP_CDNull() {
                this[this.tableTBCB_CRP_INFO.AGENT_CRP_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSEQNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSEQNull() {
                this[this.tableTBCB_CRP_INFO.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_NONull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.DOCU_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_NONull() {
                this[this.tableTBCB_CRP_INFO.DOCU_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFEE_LEVY_YNNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.FEE_LEVY_YNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFEE_LEVY_YNNull() {
                this[this.tableTBCB_CRP_INFO.FEE_LEVY_YNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRP_FEENull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CRP_FEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRP_FEENull() {
                this[this.tableTBCB_CRP_INFO.CRP_FEEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRP_RQST_DDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RP_RQST_DDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRP_RQST_DDNull() {
                this[this.tableTBCB_CRP_INFO.RP_RQST_DDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRP_RQST_SEQNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.RP_RQST_SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRP_RQST_SEQNull() {
                this[this.tableTBCB_CRP_INFO.RP_RQST_SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsISSR_CAT_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.ISSR_CAT_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetISSR_CAT_CDNull() {
                this[this.tableTBCB_CRP_INFO.ISSR_CAT_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSOOGU_CDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.SOOGU_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSOOGU_CDNull() {
                this[this.tableTBCB_CRP_INFO.SOOGU_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRTE_DTNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CRTE_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRTE_DTNull() {
                this[this.tableTBCB_CRP_INFO.CRTE_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCRTE_IDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.CRTE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCRTE_IDNull() {
                this[this.tableTBCB_CRP_INFO.CRTE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPD_DTNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.UPD_DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPD_DTNull() {
                this[this.tableTBCB_CRP_INFO.UPD_DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUPD_IDNull() {
                return this.IsNull(this.tableTBCB_CRP_INFO.UPD_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUPD_IDNull() {
                this[this.tableTBCB_CRP_INFO.UPD_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TABLE_FOR_CDRow : global::System.Data.DataRow {
            
            private TABLE_FOR_CDDataTable tableTABLE_FOR_CD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TABLE_FOR_CDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTABLE_FOR_CD = ((TABLE_FOR_CDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_CD {
                get {
                    return ((string)(this[this.tableTABLE_FOR_CD.CRP_CDColumn]));
                }
                set {
                    this[this.tableTABLE_FOR_CD.CRP_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DOCU_PRICE {
                get {
                    return ((decimal)(this[this.tableTABLE_FOR_CD.DOCU_PRICEColumn]));
                }
                set {
                    this[this.tableTABLE_FOR_CD.DOCU_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GET_DD {
                get {
                    try {
                        return ((string)(this[this.tableTABLE_FOR_CD.GET_DDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'GET_DD\' в таблице \'TABLE_FOR_CD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLE_FOR_CD.GET_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_NO {
                get {
                    try {
                        return ((string)(this[this.tableTABLE_FOR_CD.DOCU_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOCU_NO\' в таблице \'TABLE_FOR_CD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLE_FOR_CD.DOCU_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ARCHV {
                get {
                    try {
                        return ((string)(this[this.tableTABLE_FOR_CD.ARCHVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ARCHV\' в таблице \'TABLE_FOR_CD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLE_FOR_CD.ARCHVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRPT {
                get {
                    try {
                        return ((string)(this[this.tableTABLE_FOR_CD.DESCRPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DESCRPT\' в таблице \'TABLE_FOR_CD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableTABLE_FOR_CD.DESCRPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ESTM_CD {
                get {
                    return ((decimal)(this[this.tableTABLE_FOR_CD.ESTM_CDColumn]));
                }
                set {
                    this[this.tableTABLE_FOR_CD.ESTM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGET_DDNull() {
                return this.IsNull(this.tableTABLE_FOR_CD.GET_DDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGET_DDNull() {
                this[this.tableTABLE_FOR_CD.GET_DDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOCU_NONull() {
                return this.IsNull(this.tableTABLE_FOR_CD.DOCU_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOCU_NONull() {
                this[this.tableTABLE_FOR_CD.DOCU_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsARCHVNull() {
                return this.IsNull(this.tableTABLE_FOR_CD.ARCHVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetARCHVNull() {
                this[this.tableTABLE_FOR_CD.ARCHVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDESCRPTNull() {
                return this.IsNull(this.tableTABLE_FOR_CD.DESCRPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDESCRPTNull() {
                this[this.tableTABLE_FOR_CD.DESCRPTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NEW_TBCBRow : global::System.Data.DataRow {
            
            private NEW_TBCBDataTable tableNEW_TBCB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal NEW_TBCBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNEW_TBCB = ((NEW_TBCBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CRP_CD {
                get {
                    return ((string)(this[this.tableNEW_TBCB.CRP_CDColumn]));
                }
                set {
                    this[this.tableNEW_TBCB.CRP_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_PRICE {
                get {
                    return ((string)(this[this.tableNEW_TBCB.DOCU_PRICEColumn]));
                }
                set {
                    this[this.tableNEW_TBCB.DOCU_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GET_DD {
                get {
                    return ((decimal)(this[this.tableNEW_TBCB.GET_DDColumn]));
                }
                set {
                    this[this.tableNEW_TBCB.GET_DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOCU_NO {
                get {
                    return ((string)(this[this.tableNEW_TBCB.DOCU_NOColumn]));
                }
                set {
                    this[this.tableNEW_TBCB.DOCU_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ARCHV {
                get {
                    try {
                        return ((string)(this[this.tableNEW_TBCB.ARCHVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ARCHV\' в таблице \'NEW_TBCB\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableNEW_TBCB.ARCHVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DESCRPT {
                get {
                    try {
                        return ((string)(this[this.tableNEW_TBCB.DESCRPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DESCRPT\' в таблице \'NEW_TBCB\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableNEW_TBCB.DESCRPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ESTM_CD {
                get {
                    try {
                        return ((string)(this[this.tableNEW_TBCB.ESTM_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ESTM_CD\' в таблице \'NEW_TBCB\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableNEW_TBCB.ESTM_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ESTM_NM {
                get {
                    try {
                        return ((string)(this[this.tableNEW_TBCB.ESTM_NMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ESTM_NM\' в таблице \'NEW_TBCB\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableNEW_TBCB.ESTM_NMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsARCHVNull() {
                return this.IsNull(this.tableNEW_TBCB.ARCHVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetARCHVNull() {
                this[this.tableNEW_TBCB.ARCHVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDESCRPTNull() {
                return this.IsNull(this.tableNEW_TBCB.DESCRPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDESCRPTNull() {
                this[this.tableNEW_TBCB.DESCRPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsESTM_CDNull() {
                return this.IsNull(this.tableNEW_TBCB.ESTM_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetESTM_CDNull() {
                this[this.tableNEW_TBCB.ESTM_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsESTM_NMNull() {
                return this.IsNull(this.tableNEW_TBCB.ESTM_NMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetESTM_NMNull() {
                this[this.tableNEW_TBCB.ESTM_NMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBCB_CRP_DOCU_INFORowChangeEvent : global::System.EventArgs {
            
            private TBCB_CRP_DOCU_INFORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFORowChangeEvent(TBCB_CRP_DOCU_INFORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_DOCU_INFORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TBCB_CRP_INFORowChangeEvent : global::System.EventArgs {
            
            private TBCB_CRP_INFORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFORowChangeEvent(TBCB_CRP_INFORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TBCB_CRP_INFORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TABLE_FOR_CDRowChangeEvent : global::System.EventArgs {
            
            private TABLE_FOR_CDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TABLE_FOR_CDRowChangeEvent(TABLE_FOR_CDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TABLE_FOR_CDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class NEW_TBCBRowChangeEvent : global::System.EventArgs {
            
            private NEW_TBCBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEW_TBCBRowChangeEvent(NEW_TBCBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public NEW_TBCBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace app_for_CD.NeedDatasetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBCB_CRP_DOCU_INFOTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBCB_CRP_DOCU_INFOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBCB_CRP_DOCU_INFO";
            tableMapping.ColumnMappings.Add("CRP_CD", "CRP_CD");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("DIST_ID_TYPE_CD", "DIST_ID_TYPE_CD");
            tableMapping.ColumnMappings.Add("DIST_ID", "DIST_ID");
            tableMapping.ColumnMappings.Add("DOCU_NO", "DOCU_NO");
            tableMapping.ColumnMappings.Add("DOCU_SRES", "DOCU_SRES");
            tableMapping.ColumnMappings.Add("DOCU_CLS_CD", "DOCU_CLS_CD");
            tableMapping.ColumnMappings.Add("DOCU_TYPE_CD", "DOCU_TYPE_CD");
            tableMapping.ColumnMappings.Add("DOCU_ISSU_DD", "DOCU_ISSU_DD");
            tableMapping.ColumnMappings.Add("DOCU_EXP_DD", "DOCU_EXP_DD");
            tableMapping.ColumnMappings.Add("REGR_CD", "REGR_CD");
            tableMapping.ColumnMappings.Add("INTN_CD", "INTN_CD");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("REMARK_2", "REMARK_2");
            tableMapping.ColumnMappings.Add("DOCU_CRTE_DT", "DOCU_CRTE_DT");
            tableMapping.ColumnMappings.Add("DOCU_STAT_CD", "DOCU_STAT_CD");
            tableMapping.ColumnMappings.Add("CRTE_DT", "CRTE_DT");
            tableMapping.ColumnMappings.Add("CRTE_ID", "CRTE_ID");
            tableMapping.ColumnMappings.Add("UPD_DT", "UPD_DT");
            tableMapping.ColumnMappings.Add("UPD_ID", "UPD_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"GGUZDR_APP\".\"TBCB_CRP_DOCU_INFO\" WHERE ((\"CRP_CD\" = :Original_CRP_CD" +
                ") AND (\"SEQ\" = :Original_SEQ) AND (\"DIST_ID_TYPE_CD\" = :Original_DIST_ID_TYPE_CD" +
                ") AND (\"DIST_ID\" = :Original_DIST_ID) AND (\"DOCU_NO\" = :Original_DOCU_NO) AND ((" +
                ":IsNull_DOCU_SRES = 1 AND \"DOCU_SRES\" IS NULL) OR (\"DOCU_SRES\" = :Original_DOCU_" +
                "SRES)) AND ((:IsNull_DOCU_CLS_CD = 1 AND \"DOCU_CLS_CD\" IS NULL) OR (\"DOCU_CLS_CD" +
                "\" = :Original_DOCU_CLS_CD)) AND ((:IsNull_DOCU_TYPE_CD = 1 AND \"DOCU_TYPE_CD\" IS" +
                " NULL) OR (\"DOCU_TYPE_CD\" = :Original_DOCU_TYPE_CD)) AND ((:IsNull_DOCU_ISSU_DD " +
                "= 1 AND \"DOCU_ISSU_DD\" IS NULL) OR (\"DOCU_ISSU_DD\" = :Original_DOCU_ISSU_DD)) AN" +
                "D ((:IsNull_DOCU_EXP_DD = 1 AND \"DOCU_EXP_DD\" IS NULL) OR (\"DOCU_EXP_DD\" = :Orig" +
                "inal_DOCU_EXP_DD)) AND ((:IsNull_REGR_CD = 1 AND \"REGR_CD\" IS NULL) OR (\"REGR_CD" +
                "\" = :Original_REGR_CD)) AND ((:IsNull_INTN_CD = 1 AND \"INTN_CD\" IS NULL) OR (\"IN" +
                "TN_CD\" = :Original_INTN_CD)) AND ((:IsNull_REMARK = 1 AND \"REMARK\" IS NULL) OR (" +
                "\"REMARK\" = :Original_REMARK)) AND ((:IsNull_REMARK_2 = 1 AND \"REMARK_2\" IS NULL)" +
                " OR (\"REMARK_2\" = :Original_REMARK_2)) AND ((:IsNull_DOCU_CRTE_DT = 1 AND \"DOCU_" +
                "CRTE_DT\" IS NULL) OR (\"DOCU_CRTE_DT\" = :Original_DOCU_CRTE_DT)) AND ((:IsNull_DO" +
                "CU_STAT_CD = 1 AND \"DOCU_STAT_CD\" IS NULL) OR (\"DOCU_STAT_CD\" = :Original_DOCU_S" +
                "TAT_CD)) AND ((:IsNull_CRTE_DT = 1 AND \"CRTE_DT\" IS NULL) OR (\"CRTE_DT\" = :Origi" +
                "nal_CRTE_DT)) AND ((:IsNull_CRTE_ID = 1 AND \"CRTE_ID\" IS NULL) OR (\"CRTE_ID\" = :" +
                "Original_CRTE_ID)) AND ((:IsNull_UPD_DT = 1 AND \"UPD_DT\" IS NULL) OR (\"UPD_DT\" =" +
                " :Original_UPD_DT)) AND ((:IsNull_UPD_ID = 1 AND \"UPD_ID\" IS NULL) OR (\"UPD_ID\" " +
                "= :Original_UPD_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_SRES";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_SRES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_SRES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_SRES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_CLS_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CLS_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_CLS_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CLS_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_TYPE_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_ISSU_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_ISSU_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_ISSU_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_EXP_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_EXP_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_EXP_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_EXP_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REGR_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REGR_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REGR_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REGR_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INTN_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "INTN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INTN_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "INTN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REMARK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REMARK_2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REMARK_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_CRTE_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_CRTE_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_STAT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_STAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_STAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""GGUZDR_APP"".""TBCB_CRP_DOCU_INFO"" (""CRP_CD"", ""SEQ"", ""DIST_ID_TYPE_CD"", ""DIST_ID"", ""DOCU_NO"", ""DOCU_SRES"", ""DOCU_CLS_CD"", ""DOCU_TYPE_CD"", ""DOCU_ISSU_DD"", ""DOCU_EXP_DD"", ""REGR_CD"", ""INTN_CD"", ""REMARK"", ""REMARK_2"", ""DOCU_CRTE_DT"", ""DOCU_STAT_CD"", ""CRTE_DT"", ""CRTE_ID"", ""UPD_DT"", ""UPD_ID"") VALUES (:CRP_CD, :SEQ, :DIST_ID_TYPE_CD, :DIST_ID, :DOCU_NO, :DOCU_SRES, :DOCU_CLS_CD, :DOCU_TYPE_CD, :DOCU_ISSU_DD, :DOCU_EXP_DD, :REGR_CD, :INTN_CD, :REMARK, :REMARK_2, :DOCU_CRTE_DT, :DOCU_STAT_CD, :CRTE_DT, :CRTE_ID, :UPD_DT, :UPD_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_SRES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_SRES";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_CLS_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CLS_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_TYPE_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_ISSU_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_EXP_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_EXP_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REGR_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REGR_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INTN_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "INTN_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARK_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK_2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_CRTE_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CRTE_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_STAT_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"GGUZDR_APP\".\"TBCB_CRP_DOCU_INFO\" SET \"CRP_CD\" = :CRP_CD, \"SEQ\" = :SEQ, \"D" +
                "IST_ID_TYPE_CD\" = :DIST_ID_TYPE_CD, \"DIST_ID\" = :DIST_ID, \"DOCU_NO\" = :DOCU_NO, " +
                "\"DOCU_SRES\" = :DOCU_SRES, \"DOCU_CLS_CD\" = :DOCU_CLS_CD, \"DOCU_TYPE_CD\" = :DOCU_T" +
                "YPE_CD, \"DOCU_ISSU_DD\" = :DOCU_ISSU_DD, \"DOCU_EXP_DD\" = :DOCU_EXP_DD, \"REGR_CD\" " +
                "= :REGR_CD, \"INTN_CD\" = :INTN_CD, \"REMARK\" = :REMARK, \"REMARK_2\" = :REMARK_2, \"D" +
                "OCU_CRTE_DT\" = :DOCU_CRTE_DT, \"DOCU_STAT_CD\" = :DOCU_STAT_CD, \"CRTE_DT\" = :CRTE_" +
                "DT, \"CRTE_ID\" = :CRTE_ID, \"UPD_DT\" = :UPD_DT, \"UPD_ID\" = :UPD_ID WHERE ((\"CRP_CD" +
                "\" = :Original_CRP_CD) AND (\"SEQ\" = :Original_SEQ) AND (\"DIST_ID_TYPE_CD\" = :Orig" +
                "inal_DIST_ID_TYPE_CD) AND (\"DIST_ID\" = :Original_DIST_ID) AND (\"DOCU_NO\" = :Orig" +
                "inal_DOCU_NO) AND ((:IsNull_DOCU_SRES = 1 AND \"DOCU_SRES\" IS NULL) OR (\"DOCU_SRE" +
                "S\" = :Original_DOCU_SRES)) AND ((:IsNull_DOCU_CLS_CD = 1 AND \"DOCU_CLS_CD\" IS NU" +
                "LL) OR (\"DOCU_CLS_CD\" = :Original_DOCU_CLS_CD)) AND ((:IsNull_DOCU_TYPE_CD = 1 A" +
                "ND \"DOCU_TYPE_CD\" IS NULL) OR (\"DOCU_TYPE_CD\" = :Original_DOCU_TYPE_CD)) AND ((:" +
                "IsNull_DOCU_ISSU_DD = 1 AND \"DOCU_ISSU_DD\" IS NULL) OR (\"DOCU_ISSU_DD\" = :Origin" +
                "al_DOCU_ISSU_DD)) AND ((:IsNull_DOCU_EXP_DD = 1 AND \"DOCU_EXP_DD\" IS NULL) OR (\"" +
                "DOCU_EXP_DD\" = :Original_DOCU_EXP_DD)) AND ((:IsNull_REGR_CD = 1 AND \"REGR_CD\" I" +
                "S NULL) OR (\"REGR_CD\" = :Original_REGR_CD)) AND ((:IsNull_INTN_CD = 1 AND \"INTN_" +
                "CD\" IS NULL) OR (\"INTN_CD\" = :Original_INTN_CD)) AND ((:IsNull_REMARK = 1 AND \"R" +
                "EMARK\" IS NULL) OR (\"REMARK\" = :Original_REMARK)) AND ((:IsNull_REMARK_2 = 1 AND" +
                " \"REMARK_2\" IS NULL) OR (\"REMARK_2\" = :Original_REMARK_2)) AND ((:IsNull_DOCU_CR" +
                "TE_DT = 1 AND \"DOCU_CRTE_DT\" IS NULL) OR (\"DOCU_CRTE_DT\" = :Original_DOCU_CRTE_D" +
                "T)) AND ((:IsNull_DOCU_STAT_CD = 1 AND \"DOCU_STAT_CD\" IS NULL) OR (\"DOCU_STAT_CD" +
                "\" = :Original_DOCU_STAT_CD)) AND ((:IsNull_CRTE_DT = 1 AND \"CRTE_DT\" IS NULL) OR" +
                " (\"CRTE_DT\" = :Original_CRTE_DT)) AND ((:IsNull_CRTE_ID = 1 AND \"CRTE_ID\" IS NUL" +
                "L) OR (\"CRTE_ID\" = :Original_CRTE_ID)) AND ((:IsNull_UPD_DT = 1 AND \"UPD_DT\" IS " +
                "NULL) OR (\"UPD_DT\" = :Original_UPD_DT)) AND ((:IsNull_UPD_ID = 1 AND \"UPD_ID\" IS" +
                " NULL) OR (\"UPD_ID\" = :Original_UPD_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_SRES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_SRES";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_CLS_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CLS_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_TYPE_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_ISSU_DD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_EXP_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_EXP_DD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REGR_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REGR_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INTN_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "INTN_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARK_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK_2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_CRTE_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CRTE_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_STAT_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_SRES";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_SRES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_SRES";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_SRES";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_CLS_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CLS_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_CLS_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CLS_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_TYPE_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_ISSU_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_ISSU_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_ISSU_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_EXP_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_EXP_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_EXP_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_EXP_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REGR_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REGR_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REGR_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REGR_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INTN_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "INTN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INTN_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "INTN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REMARK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REMARK_2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REMARK_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_CRTE_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_CRTE_DT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_STAT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_STAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_STAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::app_for_CD.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CRP_CD, SEQ, DIST_ID_TYPE_CD, DIST_ID, DOCU_NO, DOCU_SRES, DOCU_CLS_CD, DO" +
                "CU_TYPE_CD, DOCU_ISSU_DD, DOCU_EXP_DD, REGR_CD, INTN_CD, REMARK, REMARK_2, DOCU_" +
                "CRTE_DT, DOCU_STAT_CD, CRTE_DT, CRTE_ID, UPD_DT, UPD_ID FROM GGUZDR_APP.TBCB_CRP" +
                "_DOCU_INFO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NeedDataset.TBCB_CRP_DOCU_INFODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NeedDataset.TBCB_CRP_DOCU_INFODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NeedDataset.TBCB_CRP_DOCU_INFODataTable dataTable = new NeedDataset.TBCB_CRP_DOCU_INFODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset.TBCB_CRP_DOCU_INFODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset dataSet) {
            return this.Adapter.Update(dataSet, "TBCB_CRP_DOCU_INFO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CRP_CD, 
                    long Original_SEQ, 
                    string Original_DIST_ID_TYPE_CD, 
                    string Original_DIST_ID, 
                    string Original_DOCU_NO, 
                    string Original_DOCU_SRES, 
                    string Original_DOCU_CLS_CD, 
                    string Original_DOCU_TYPE_CD, 
                    string Original_DOCU_ISSU_DD, 
                    string Original_DOCU_EXP_DD, 
                    string Original_REGR_CD, 
                    string Original_INTN_CD, 
                    string Original_REMARK, 
                    string Original_REMARK_2, 
                    string Original_DOCU_CRTE_DT, 
                    string Original_DOCU_STAT_CD, 
                    global::System.Nullable<global::System.DateTime> Original_CRTE_DT, 
                    string Original_CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPD_DT, 
                    string Original_UPD_ID) {
            if ((Original_CRP_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_CD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CRP_CD));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_SEQ));
            if ((Original_DIST_ID_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("Original_DIST_ID_TYPE_CD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DIST_ID_TYPE_CD));
            }
            if ((Original_DIST_ID == null)) {
                throw new global::System.ArgumentNullException("Original_DIST_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DIST_ID));
            }
            if ((Original_DOCU_NO == null)) {
                throw new global::System.ArgumentNullException("Original_DOCU_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DOCU_NO));
            }
            if ((Original_DOCU_SRES == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DOCU_SRES));
            }
            if ((Original_DOCU_CLS_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DOCU_CLS_CD));
            }
            if ((Original_DOCU_TYPE_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DOCU_TYPE_CD));
            }
            if ((Original_DOCU_ISSU_DD == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_DOCU_ISSU_DD));
            }
            if ((Original_DOCU_EXP_DD == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_DOCU_EXP_DD));
            }
            if ((Original_REGR_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_REGR_CD));
            }
            if ((Original_INTN_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_INTN_CD));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_REMARK));
            }
            if ((Original_REMARK_2 == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_REMARK_2));
            }
            if ((Original_DOCU_CRTE_DT == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_DOCU_CRTE_DT));
            }
            if ((Original_DOCU_STAT_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_DOCU_STAT_CD));
            }
            if ((Original_CRTE_DT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_CRTE_DT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_CRTE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_CRTE_ID));
            }
            if ((Original_UPD_DT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_UPD_DT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_UPD_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_UPD_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CRP_CD, 
                    long SEQ, 
                    string DIST_ID_TYPE_CD, 
                    string DIST_ID, 
                    string DOCU_NO, 
                    string DOCU_SRES, 
                    string DOCU_CLS_CD, 
                    string DOCU_TYPE_CD, 
                    string DOCU_ISSU_DD, 
                    string DOCU_EXP_DD, 
                    string REGR_CD, 
                    string INTN_CD, 
                    string REMARK, 
                    string REMARK_2, 
                    string DOCU_CRTE_DT, 
                    string DOCU_STAT_CD, 
                    global::System.Nullable<global::System.DateTime> CRTE_DT, 
                    string CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> UPD_DT, 
                    string UPD_ID) {
            if ((CRP_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CRP_CD));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(SEQ));
            if ((DIST_ID_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("DIST_ID_TYPE_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DIST_ID_TYPE_CD));
            }
            if ((DIST_ID == null)) {
                throw new global::System.ArgumentNullException("DIST_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DIST_ID));
            }
            if ((DOCU_NO == null)) {
                throw new global::System.ArgumentNullException("DOCU_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DOCU_NO));
            }
            if ((DOCU_SRES == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DOCU_SRES));
            }
            if ((DOCU_CLS_CD == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DOCU_CLS_CD));
            }
            if ((DOCU_TYPE_CD == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(DOCU_TYPE_CD));
            }
            if ((DOCU_ISSU_DD == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(DOCU_ISSU_DD));
            }
            if ((DOCU_EXP_DD == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DOCU_EXP_DD));
            }
            if ((REGR_CD == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(REGR_CD));
            }
            if ((INTN_CD == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(INTN_CD));
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(REMARK));
            }
            if ((REMARK_2 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(REMARK_2));
            }
            if ((DOCU_CRTE_DT == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(DOCU_CRTE_DT));
            }
            if ((DOCU_STAT_CD == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(DOCU_STAT_CD));
            }
            if ((CRTE_DT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(CRTE_DT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CRTE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(CRTE_ID));
            }
            if ((UPD_DT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(UPD_DT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((UPD_ID == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(UPD_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CRP_CD, 
                    long SEQ, 
                    string DIST_ID_TYPE_CD, 
                    string DIST_ID, 
                    string DOCU_NO, 
                    string DOCU_SRES, 
                    string DOCU_CLS_CD, 
                    string DOCU_TYPE_CD, 
                    string DOCU_ISSU_DD, 
                    string DOCU_EXP_DD, 
                    string REGR_CD, 
                    string INTN_CD, 
                    string REMARK, 
                    string REMARK_2, 
                    string DOCU_CRTE_DT, 
                    string DOCU_STAT_CD, 
                    global::System.Nullable<global::System.DateTime> CRTE_DT, 
                    string CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> UPD_DT, 
                    string UPD_ID, 
                    string Original_CRP_CD, 
                    long Original_SEQ, 
                    string Original_DIST_ID_TYPE_CD, 
                    string Original_DIST_ID, 
                    string Original_DOCU_NO, 
                    string Original_DOCU_SRES, 
                    string Original_DOCU_CLS_CD, 
                    string Original_DOCU_TYPE_CD, 
                    string Original_DOCU_ISSU_DD, 
                    string Original_DOCU_EXP_DD, 
                    string Original_REGR_CD, 
                    string Original_INTN_CD, 
                    string Original_REMARK, 
                    string Original_REMARK_2, 
                    string Original_DOCU_CRTE_DT, 
                    string Original_DOCU_STAT_CD, 
                    global::System.Nullable<global::System.DateTime> Original_CRTE_DT, 
                    string Original_CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPD_DT, 
                    string Original_UPD_ID) {
            if ((CRP_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CRP_CD));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(SEQ));
            if ((DIST_ID_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("DIST_ID_TYPE_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DIST_ID_TYPE_CD));
            }
            if ((DIST_ID == null)) {
                throw new global::System.ArgumentNullException("DIST_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DIST_ID));
            }
            if ((DOCU_NO == null)) {
                throw new global::System.ArgumentNullException("DOCU_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DOCU_NO));
            }
            if ((DOCU_SRES == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DOCU_SRES));
            }
            if ((DOCU_CLS_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DOCU_CLS_CD));
            }
            if ((DOCU_TYPE_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(DOCU_TYPE_CD));
            }
            if ((DOCU_ISSU_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(DOCU_ISSU_DD));
            }
            if ((DOCU_EXP_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DOCU_EXP_DD));
            }
            if ((REGR_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(REGR_CD));
            }
            if ((INTN_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(INTN_CD));
            }
            if ((REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(REMARK));
            }
            if ((REMARK_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(REMARK_2));
            }
            if ((DOCU_CRTE_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(DOCU_CRTE_DT));
            }
            if ((DOCU_STAT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(DOCU_STAT_CD));
            }
            if ((CRTE_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(CRTE_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((CRTE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(CRTE_ID));
            }
            if ((UPD_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(UPD_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((UPD_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(UPD_ID));
            }
            if ((Original_CRP_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_CRP_CD));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((long)(Original_SEQ));
            if ((Original_DIST_ID_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("Original_DIST_ID_TYPE_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_DIST_ID_TYPE_CD));
            }
            if ((Original_DIST_ID == null)) {
                throw new global::System.ArgumentNullException("Original_DIST_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_DIST_ID));
            }
            if ((Original_DOCU_NO == null)) {
                throw new global::System.ArgumentNullException("Original_DOCU_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_DOCU_NO));
            }
            if ((Original_DOCU_SRES == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_DOCU_SRES));
            }
            if ((Original_DOCU_CLS_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_DOCU_CLS_CD));
            }
            if ((Original_DOCU_TYPE_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_DOCU_TYPE_CD));
            }
            if ((Original_DOCU_ISSU_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_DOCU_ISSU_DD));
            }
            if ((Original_DOCU_EXP_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_DOCU_EXP_DD));
            }
            if ((Original_REGR_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_REGR_CD));
            }
            if ((Original_INTN_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_INTN_CD));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_REMARK));
            }
            if ((Original_REMARK_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_REMARK_2));
            }
            if ((Original_DOCU_CRTE_DT == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_DOCU_CRTE_DT));
            }
            if ((Original_DOCU_STAT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_DOCU_STAT_CD));
            }
            if ((Original_CRTE_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((System.DateTime)(Original_CRTE_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_CRTE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_CRTE_ID));
            }
            if ((Original_UPD_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_UPD_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_UPD_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_UPD_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string DIST_ID_TYPE_CD, 
                    string DIST_ID, 
                    string DOCU_NO, 
                    string DOCU_SRES, 
                    string DOCU_CLS_CD, 
                    string DOCU_TYPE_CD, 
                    string DOCU_ISSU_DD, 
                    string DOCU_EXP_DD, 
                    string REGR_CD, 
                    string INTN_CD, 
                    string REMARK, 
                    string REMARK_2, 
                    string DOCU_CRTE_DT, 
                    string DOCU_STAT_CD, 
                    global::System.Nullable<global::System.DateTime> CRTE_DT, 
                    string CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> UPD_DT, 
                    string UPD_ID, 
                    string Original_CRP_CD, 
                    long Original_SEQ, 
                    string Original_DIST_ID_TYPE_CD, 
                    string Original_DIST_ID, 
                    string Original_DOCU_NO, 
                    string Original_DOCU_SRES, 
                    string Original_DOCU_CLS_CD, 
                    string Original_DOCU_TYPE_CD, 
                    string Original_DOCU_ISSU_DD, 
                    string Original_DOCU_EXP_DD, 
                    string Original_REGR_CD, 
                    string Original_INTN_CD, 
                    string Original_REMARK, 
                    string Original_REMARK_2, 
                    string Original_DOCU_CRTE_DT, 
                    string Original_DOCU_STAT_CD, 
                    global::System.Nullable<global::System.DateTime> Original_CRTE_DT, 
                    string Original_CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPD_DT, 
                    string Original_UPD_ID) {
            return this.Update(Original_CRP_CD, Original_SEQ, DIST_ID_TYPE_CD, DIST_ID, DOCU_NO, DOCU_SRES, DOCU_CLS_CD, DOCU_TYPE_CD, DOCU_ISSU_DD, DOCU_EXP_DD, REGR_CD, INTN_CD, REMARK, REMARK_2, DOCU_CRTE_DT, DOCU_STAT_CD, CRTE_DT, CRTE_ID, UPD_DT, UPD_ID, Original_CRP_CD, Original_SEQ, Original_DIST_ID_TYPE_CD, Original_DIST_ID, Original_DOCU_NO, Original_DOCU_SRES, Original_DOCU_CLS_CD, Original_DOCU_TYPE_CD, Original_DOCU_ISSU_DD, Original_DOCU_EXP_DD, Original_REGR_CD, Original_INTN_CD, Original_REMARK, Original_REMARK_2, Original_DOCU_CRTE_DT, Original_DOCU_STAT_CD, Original_CRTE_DT, Original_CRTE_ID, Original_UPD_DT, Original_UPD_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TBCB_CRP_INFOTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TBCB_CRP_INFOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TBCB_CRP_INFO";
            tableMapping.ColumnMappings.Add("CRP_CD", "CRP_CD");
            tableMapping.ColumnMappings.Add("CRP_TYPE_CD", "CRP_TYPE_CD");
            tableMapping.ColumnMappings.Add("CRP_SRNM", "CRP_SRNM");
            tableMapping.ColumnMappings.Add("CRP_FRST_NM", "CRP_FRST_NM");
            tableMapping.ColumnMappings.Add("CRP_SCND_NM", "CRP_SCND_NM");
            tableMapping.ColumnMappings.Add("ENG_CRP_SRNM", "ENG_CRP_SRNM");
            tableMapping.ColumnMappings.Add("ENG_CRP_FRST_NM", "ENG_CRP_FRST_NM");
            tableMapping.ColumnMappings.Add("ENG_CRP_SCND_NM", "ENG_CRP_SCND_NM");
            tableMapping.ColumnMappings.Add("CPCT_CD", "CPCT_CD");
            tableMapping.ColumnMappings.Add("SHRT_CRP_NM", "SHRT_CRP_NM");
            tableMapping.ColumnMappings.Add("ENG_SHRT_CRP_NM", "ENG_SHRT_CRP_NM");
            tableMapping.ColumnMappings.Add("CRP_NM", "CRP_NM");
            tableMapping.ColumnMappings.Add("ENG_CRP_NM", "ENG_CRP_NM");
            tableMapping.ColumnMappings.Add("CRP_CAT_CD", "CRP_CAT_CD");
            tableMapping.ColumnMappings.Add("CRP_STAT_CD", "CRP_STAT_CD");
            tableMapping.ColumnMappings.Add("CNTRY_CD", "CNTRY_CD");
            tableMapping.ColumnMappings.Add("RSDT_YN", "RSDT_YN");
            tableMapping.ColumnMappings.Add("BIRTH_DD", "BIRTH_DD");
            tableMapping.ColumnMappings.Add("BZNO", "BZNO");
            tableMapping.ColumnMappings.Add("SWFT_CD", "SWFT_CD");
            tableMapping.ColumnMappings.Add("REG_POST_NO", "REG_POST_NO");
            tableMapping.ColumnMappings.Add("REG_CNTRY_CD", "REG_CNTRY_CD");
            tableMapping.ColumnMappings.Add("REG_REGN_CD", "REG_REGN_CD");
            tableMapping.ColumnMappings.Add("REG_SOATO_CD", "REG_SOATO_CD");
            tableMapping.ColumnMappings.Add("REG_STRE_ADDR", "REG_STRE_ADDR");
            tableMapping.ColumnMappings.Add("ENG_REG_STRE_ADDR", "ENG_REG_STRE_ADDR");
            tableMapping.ColumnMappings.Add("REG_ADDR_CONT", "REG_ADDR_CONT");
            tableMapping.ColumnMappings.Add("ENG_REG_ADDR_CONT", "ENG_REG_ADDR_CONT");
            tableMapping.ColumnMappings.Add("RSDT_POST_NO", "RSDT_POST_NO");
            tableMapping.ColumnMappings.Add("RSDT_CNTRY_CD", "RSDT_CNTRY_CD");
            tableMapping.ColumnMappings.Add("RSDT_REGN_CD", "RSDT_REGN_CD");
            tableMapping.ColumnMappings.Add("RSDT_SOATO_CD", "RSDT_SOATO_CD");
            tableMapping.ColumnMappings.Add("RSDT_STRE_ADDR", "RSDT_STRE_ADDR");
            tableMapping.ColumnMappings.Add("ENG_RSDT_STRE_ADDR", "ENG_RSDT_STRE_ADDR");
            tableMapping.ColumnMappings.Add("RSDT_ADDR_CONT", "RSDT_ADDR_CONT");
            tableMapping.ColumnMappings.Add("ENG_RSDT_ADDR_CONT", "ENG_RSDT_ADDR_CONT");
            tableMapping.ColumnMappings.Add("TEL_NO", "TEL_NO");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("FAX_NO", "FAX_NO");
            tableMapping.ColumnMappings.Add("HOMP", "HOMP");
            tableMapping.ColumnMappings.Add("DIST_ID_TYPE_CD", "DIST_ID_TYPE_CD");
            tableMapping.ColumnMappings.Add("DIST_ID", "DIST_ID");
            tableMapping.ColumnMappings.Add("DIST_ID_2", "DIST_ID_2");
            tableMapping.ColumnMappings.Add("OFSH_YN", "OFSH_YN");
            tableMapping.ColumnMappings.Add("OKPO_CD", "OKPO_CD");
            tableMapping.ColumnMappings.Add("OKONH_CD", "OKONH_CD");
            tableMapping.ColumnMappings.Add("TYBZ_CD", "TYBZ_CD");
            tableMapping.ColumnMappings.Add("CORPS_REG_PLC_CD", "CORPS_REG_PLC_CD");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("LGR_NO", "LGR_NO");
            tableMapping.ColumnMappings.Add("LGR_USR_ID", "LGR_USR_ID");
            tableMapping.ColumnMappings.Add("CRP_ISSU_DD", "CRP_ISSU_DD");
            tableMapping.ColumnMappings.Add("OLD_CRP_CD", "OLD_CRP_CD");
            tableMapping.ColumnMappings.Add("UKWN_YN", "UKWN_YN");
            tableMapping.ColumnMappings.Add("AGENT_CRP_CD", "AGENT_CRP_CD");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("DOCU_NO", "DOCU_NO");
            tableMapping.ColumnMappings.Add("FEE_LEVY_YN", "FEE_LEVY_YN");
            tableMapping.ColumnMappings.Add("CRP_FEE", "CRP_FEE");
            tableMapping.ColumnMappings.Add("RP_RQST_DD", "RP_RQST_DD");
            tableMapping.ColumnMappings.Add("RP_RQST_SEQ", "RP_RQST_SEQ");
            tableMapping.ColumnMappings.Add("ISSR_CAT_CD", "ISSR_CAT_CD");
            tableMapping.ColumnMappings.Add("SOOGU_CD", "SOOGU_CD");
            tableMapping.ColumnMappings.Add("CRTE_DT", "CRTE_DT");
            tableMapping.ColumnMappings.Add("CRTE_ID", "CRTE_ID");
            tableMapping.ColumnMappings.Add("UPD_DT", "UPD_DT");
            tableMapping.ColumnMappings.Add("UPD_ID", "UPD_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"GGUZDR_APP\".\"TBCB_CRP_INFO\" WHERE ((\"CRP_CD\" = :Original_CRP_CD) AND" +
                " (\"CRP_TYPE_CD\" = :Original_CRP_TYPE_CD) AND ((:IsNull_CRP_SRNM = 1 AND \"CRP_SRN" +
                "M\" IS NULL) OR (\"CRP_SRNM\" = :Original_CRP_SRNM)) AND ((:IsNull_CRP_FRST_NM = 1 " +
                "AND \"CRP_FRST_NM\" IS NULL) OR (\"CRP_FRST_NM\" = :Original_CRP_FRST_NM)) AND ((:Is" +
                "Null_CRP_SCND_NM = 1 AND \"CRP_SCND_NM\" IS NULL) OR (\"CRP_SCND_NM\" = :Original_CR" +
                "P_SCND_NM)) AND ((:IsNull_ENG_CRP_SRNM = 1 AND \"ENG_CRP_SRNM\" IS NULL) OR (\"ENG_" +
                "CRP_SRNM\" = :Original_ENG_CRP_SRNM)) AND ((:IsNull_ENG_CRP_FRST_NM = 1 AND \"ENG_" +
                "CRP_FRST_NM\" IS NULL) OR (\"ENG_CRP_FRST_NM\" = :Original_ENG_CRP_FRST_NM)) AND ((" +
                ":IsNull_ENG_CRP_SCND_NM = 1 AND \"ENG_CRP_SCND_NM\" IS NULL) OR (\"ENG_CRP_SCND_NM\"" +
                " = :Original_ENG_CRP_SCND_NM)) AND ((:IsNull_CPCT_CD = 1 AND \"CPCT_CD\" IS NULL) " +
                "OR (\"CPCT_CD\" = :Original_CPCT_CD)) AND (\"SHRT_CRP_NM\" = :Original_SHRT_CRP_NM) " +
                "AND ((:IsNull_ENG_SHRT_CRP_NM = 1 AND \"ENG_SHRT_CRP_NM\" IS NULL) OR (\"ENG_SHRT_C" +
                "RP_NM\" = :Original_ENG_SHRT_CRP_NM)) AND (\"CRP_NM\" = :Original_CRP_NM) AND ((:Is" +
                "Null_ENG_CRP_NM = 1 AND \"ENG_CRP_NM\" IS NULL) OR (\"ENG_CRP_NM\" = :Original_ENG_C" +
                "RP_NM)) AND (\"CRP_CAT_CD\" = :Original_CRP_CAT_CD) AND (\"CRP_STAT_CD\" = :Original" +
                "_CRP_STAT_CD) AND ((:IsNull_CNTRY_CD = 1 AND \"CNTRY_CD\" IS NULL) OR (\"CNTRY_CD\" " +
                "= :Original_CNTRY_CD)) AND ((:IsNull_RSDT_YN = 1 AND \"RSDT_YN\" IS NULL) OR (\"RSD" +
                "T_YN\" = :Original_RSDT_YN)) AND ((:IsNull_BIRTH_DD = 1 AND \"BIRTH_DD\" IS NULL) O" +
                "R (\"BIRTH_DD\" = :Original_BIRTH_DD)) AND ((:IsNull_BZNO = 1 AND \"BZNO\" IS NULL) " +
                "OR (\"BZNO\" = :Original_BZNO)) AND ((:IsNull_SWFT_CD = 1 AND \"SWFT_CD\" IS NULL) O" +
                "R (\"SWFT_CD\" = :Original_SWFT_CD)) AND ((:IsNull_REG_POST_NO = 1 AND \"REG_POST_N" +
                "O\" IS NULL) OR (\"REG_POST_NO\" = :Original_REG_POST_NO)) AND ((:IsNull_REG_CNTRY_" +
                "CD = 1 AND \"REG_CNTRY_CD\" IS NULL) OR (\"REG_CNTRY_CD\" = :Original_REG_CNTRY_CD))" +
                " AND ((:IsNull_REG_REGN_CD = 1 AND \"REG_REGN_CD\" IS NULL) OR (\"REG_REGN_CD\" = :O" +
                "riginal_REG_REGN_CD)) AND ((:IsNull_REG_SOATO_CD = 1 AND \"REG_SOATO_CD\" IS NULL)" +
                " OR (\"REG_SOATO_CD\" = :Original_REG_SOATO_CD)) AND ((:IsNull_REG_STRE_ADDR = 1 A" +
                "ND \"REG_STRE_ADDR\" IS NULL) OR (\"REG_STRE_ADDR\" = :Original_REG_STRE_ADDR)) AND " +
                "((:IsNull_ENG_REG_STRE_ADDR = 1 AND \"ENG_REG_STRE_ADDR\" IS NULL) OR (\"ENG_REG_ST" +
                "RE_ADDR\" = :Original_ENG_REG_STRE_ADDR)) AND ((:IsNull_REG_ADDR_CONT = 1 AND \"RE" +
                "G_ADDR_CONT\" IS NULL) OR (\"REG_ADDR_CONT\" = :Original_REG_ADDR_CONT)) AND ((:IsN" +
                "ull_ENG_REG_ADDR_CONT = 1 AND \"ENG_REG_ADDR_CONT\" IS NULL) OR (\"ENG_REG_ADDR_CON" +
                "T\" = :Original_ENG_REG_ADDR_CONT)) AND ((:IsNull_RSDT_POST_NO = 1 AND \"RSDT_POST" +
                "_NO\" IS NULL) OR (\"RSDT_POST_NO\" = :Original_RSDT_POST_NO)) AND ((:IsNull_RSDT_C" +
                "NTRY_CD = 1 AND \"RSDT_CNTRY_CD\" IS NULL) OR (\"RSDT_CNTRY_CD\" = :Original_RSDT_CN" +
                "TRY_CD)) AND ((:IsNull_RSDT_REGN_CD = 1 AND \"RSDT_REGN_CD\" IS NULL) OR (\"RSDT_RE" +
                "GN_CD\" = :Original_RSDT_REGN_CD)) AND ((:IsNull_RSDT_SOATO_CD = 1 AND \"RSDT_SOAT" +
                "O_CD\" IS NULL) OR (\"RSDT_SOATO_CD\" = :Original_RSDT_SOATO_CD)) AND ((:IsNull_RSD" +
                "T_STRE_ADDR = 1 AND \"RSDT_STRE_ADDR\" IS NULL) OR (\"RSDT_STRE_ADDR\" = :Original_R" +
                "SDT_STRE_ADDR)) AND ((:IsNull_ENG_RSDT_STRE_ADDR = 1 AND \"ENG_RSDT_STRE_ADDR\" IS" +
                " NULL) OR (\"ENG_RSDT_STRE_ADDR\" = :Original_ENG_RSDT_STRE_ADDR)) AND ((:IsNull_R" +
                "SDT_ADDR_CONT = 1 AND \"RSDT_ADDR_CONT\" IS NULL) OR (\"RSDT_ADDR_CONT\" = :Original" +
                "_RSDT_ADDR_CONT)) AND ((:IsNull_ENG_RSDT_ADDR_CONT = 1 AND \"ENG_RSDT_ADDR_CONT\" " +
                "IS NULL) OR (\"ENG_RSDT_ADDR_CONT\" = :Original_ENG_RSDT_ADDR_CONT)) AND ((:IsNull" +
                "_TEL_NO = 1 AND \"TEL_NO\" IS NULL) OR (\"TEL_NO\" = :Original_TEL_NO)) AND ((:IsNul" +
                "l_EMAIL = 1 AND \"EMAIL\" IS NULL) OR (\"EMAIL\" = :Original_EMAIL)) AND ((:IsNull_F" +
                "AX_NO = 1 AND \"FAX_NO\" IS NULL) OR (\"FAX_NO\" = :Original_FAX_NO)) AND ((:IsNull_" +
                "HOMP = 1 AND \"HOMP\" IS NULL) OR (\"HOMP\" = :Original_HOMP)) AND ((:IsNull_DIST_ID" +
                "_TYPE_CD = 1 AND \"DIST_ID_TYPE_CD\" IS NULL) OR (\"DIST_ID_TYPE_CD\" = :Original_DI" +
                "ST_ID_TYPE_CD)) AND ((:IsNull_DIST_ID = 1 AND \"DIST_ID\" IS NULL) OR (\"DIST_ID\" =" +
                " :Original_DIST_ID)) AND ((:IsNull_DIST_ID_2 = 1 AND \"DIST_ID_2\" IS NULL) OR (\"D" +
                "IST_ID_2\" = :Original_DIST_ID_2)) AND ((:IsNull_OFSH_YN = 1 AND \"OFSH_YN\" IS NUL" +
                "L) OR (\"OFSH_YN\" = :Original_OFSH_YN)) AND ((:IsNull_OKPO_CD = 1 AND \"OKPO_CD\" I" +
                "S NULL) OR (\"OKPO_CD\" = :Original_OKPO_CD)) AND ((:IsNull_OKONH_CD = 1 AND \"OKON" +
                "H_CD\" IS NULL) OR (\"OKONH_CD\" = :Original_OKONH_CD)) AND ((:IsNull_TYBZ_CD = 1 A" +
                "ND \"TYBZ_CD\" IS NULL) OR (\"TYBZ_CD\" = :Original_TYBZ_CD)) AND ((:IsNull_CORPS_RE" +
                "G_PLC_CD = 1 AND \"CORPS_REG_PLC_CD\" IS NULL) OR (\"CORPS_REG_PLC_CD\" = :Original_" +
                "CORPS_REG_PLC_CD)) AND ((:IsNull_REMARK = 1 AND \"REMARK\" IS NULL) OR (\"REMARK\" =" +
                " :Original_REMARK)) AND ((:IsNull_LGR_NO = 1 AND \"LGR_NO\" IS NULL) OR (\"LGR_NO\" " +
                "= :Original_LGR_NO)) AND ((:IsNull_LGR_USR_ID = 1 AND \"LGR_USR_ID\" IS NULL) OR (" +
                "\"LGR_USR_ID\" = :Original_LGR_USR_ID)) AND (\"CRP_ISSU_DD\" = :Original_CRP_ISSU_DD" +
                ") AND ((:IsNull_OLD_CRP_CD = 1 AND \"OLD_CRP_CD\" IS NULL) OR (\"OLD_CRP_CD\" = :Ori" +
                "ginal_OLD_CRP_CD)) AND ((:IsNull_UKWN_YN = 1 AND \"UKWN_YN\" IS NULL) OR (\"UKWN_YN" +
                "\" = :Original_UKWN_YN)) AND ((:IsNull_AGENT_CRP_CD = 1 AND \"AGENT_CRP_CD\" IS NUL" +
                "L) OR (\"AGENT_CRP_CD\" = :Original_AGENT_CRP_CD)) AND ((:IsNull_SEQ = 1 AND \"SEQ\"" +
                " IS NULL) OR (\"SEQ\" = :Original_SEQ)) AND ((:IsNull_DOCU_NO = 1 AND \"DOCU_NO\" IS" +
                " NULL) OR (\"DOCU_NO\" = :Original_DOCU_NO)) AND ((:IsNull_FEE_LEVY_YN = 1 AND \"FE" +
                "E_LEVY_YN\" IS NULL) OR (\"FEE_LEVY_YN\" = :Original_FEE_LEVY_YN)) AND ((:IsNull_CR" +
                "P_FEE = 1 AND \"CRP_FEE\" IS NULL) OR (\"CRP_FEE\" = :Original_CRP_FEE)) AND ((:IsNu" +
                "ll_RP_RQST_DD = 1 AND \"RP_RQST_DD\" IS NULL) OR (\"RP_RQST_DD\" = :Original_RP_RQST" +
                "_DD)) AND ((:IsNull_RP_RQST_SEQ = 1 AND \"RP_RQST_SEQ\" IS NULL) OR (\"RP_RQST_SEQ\"" +
                " = :Original_RP_RQST_SEQ)) AND ((:IsNull_ISSR_CAT_CD = 1 AND \"ISSR_CAT_CD\" IS NU" +
                "LL) OR (\"ISSR_CAT_CD\" = :Original_ISSR_CAT_CD)) AND ((:IsNull_SOOGU_CD = 1 AND \"" +
                "SOOGU_CD\" IS NULL) OR (\"SOOGU_CD\" = :Original_SOOGU_CD)) AND ((:IsNull_CRTE_DT =" +
                " 1 AND \"CRTE_DT\" IS NULL) OR (\"CRTE_DT\" = :Original_CRTE_DT)) AND ((:IsNull_CRTE" +
                "_ID = 1 AND \"CRTE_ID\" IS NULL) OR (\"CRTE_ID\" = :Original_CRTE_ID)) AND ((:IsNull" +
                "_UPD_DT = 1 AND \"UPD_DT\" IS NULL) OR (\"UPD_DT\" = :Original_UPD_DT)) AND ((:IsNul" +
                "l_UPD_ID = 1 AND \"UPD_ID\" IS NULL) OR (\"UPD_ID\" = :Original_UPD_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CRP_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_SRNM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_FRST_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_SCND_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_SRNM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_FRST_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_SCND_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CPCT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CPCT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CPCT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CPCT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "SHRT_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_SHRT_CRP_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_SHRT_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_SHRT_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_STAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CNTRY_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BIRTH_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BIRTH_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BIRTH_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BIRTH_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BZNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "BZNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BZNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "BZNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SWFT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SWFT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SWFT_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SWFT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_POST_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_CNTRY_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "REG_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "REG_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_REGN_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "REG_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "REG_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_SOATO_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_REG_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_REG_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_POST_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_CNTRY_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_REGN_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_SOATO_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_RSDT_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_RSDT_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TEL_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "TEL_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TEL_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "TEL_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EMAIL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FAX_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "FAX_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAX_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "FAX_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_HOMP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "HOMP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOMP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "HOMP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DIST_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DIST_ID_2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OFSH_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "OFSH_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OFSH_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "OFSH_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OKPO_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "OKPO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OKPO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "OKPO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OKONH_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "OKONH_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OKONH_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "OKONH_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TYBZ_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TYBZ_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TYBZ_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TYBZ_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CORPS_REG_PLC_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CORPS_REG_PLC_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CORPS_REG_PLC_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CORPS_REG_PLC_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REMARK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LGR_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "LGR_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LGR_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "LGR_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LGR_USR_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "LGR_USR_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LGR_USR_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "LGR_USR_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CRP_ISSU_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OLD_CRP_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OLD_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OLD_CRP_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OLD_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UKWN_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "UKWN_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UKWN_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "UKWN_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AGENT_CRP_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "AGENT_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AGENT_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "AGENT_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FEE_LEVY_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "FEE_LEVY_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FEE_LEVY_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "FEE_LEVY_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_FEE";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RP_RQST_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RP_RQST_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RP_RQST_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RP_RQST_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ISSR_CAT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ISSR_CAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ISSR_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ISSR_CAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SOOGU_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SOOGU_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SOOGU_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SOOGU_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"GGUZDR_APP\".\"TBCB_CRP_INFO\" (\"CRP_CD\", \"CRP_TYPE_CD\", \"CRP_SRNM\", \"C" +
                "RP_FRST_NM\", \"CRP_SCND_NM\", \"ENG_CRP_SRNM\", \"ENG_CRP_FRST_NM\", \"ENG_CRP_SCND_NM\"" +
                ", \"CPCT_CD\", \"SHRT_CRP_NM\", \"ENG_SHRT_CRP_NM\", \"CRP_NM\", \"ENG_CRP_NM\", \"CRP_CAT_" +
                "CD\", \"CRP_STAT_CD\", \"CNTRY_CD\", \"RSDT_YN\", \"BIRTH_DD\", \"BZNO\", \"SWFT_CD\", \"REG_P" +
                "OST_NO\", \"REG_CNTRY_CD\", \"REG_REGN_CD\", \"REG_SOATO_CD\", \"REG_STRE_ADDR\", \"ENG_RE" +
                "G_STRE_ADDR\", \"REG_ADDR_CONT\", \"ENG_REG_ADDR_CONT\", \"RSDT_POST_NO\", \"RSDT_CNTRY_" +
                "CD\", \"RSDT_REGN_CD\", \"RSDT_SOATO_CD\", \"RSDT_STRE_ADDR\", \"ENG_RSDT_STRE_ADDR\", \"R" +
                "SDT_ADDR_CONT\", \"ENG_RSDT_ADDR_CONT\", \"TEL_NO\", \"EMAIL\", \"FAX_NO\", \"HOMP\", \"DIST" +
                "_ID_TYPE_CD\", \"DIST_ID\", \"DIST_ID_2\", \"OFSH_YN\", \"OKPO_CD\", \"OKONH_CD\", \"TYBZ_CD" +
                "\", \"CORPS_REG_PLC_CD\", \"REMARK\", \"LGR_NO\", \"LGR_USR_ID\", \"CRP_ISSU_DD\", \"OLD_CRP" +
                "_CD\", \"UKWN_YN\", \"AGENT_CRP_CD\", \"SEQ\", \"DOCU_NO\", \"FEE_LEVY_YN\", \"CRP_FEE\", \"RP" +
                "_RQST_DD\", \"RP_RQST_SEQ\", \"ISSR_CAT_CD\", \"SOOGU_CD\", \"CRTE_DT\", \"CRTE_ID\", \"UPD_" +
                "DT\", \"UPD_ID\") VALUES (:CRP_CD, :CRP_TYPE_CD, :CRP_SRNM, :CRP_FRST_NM, :CRP_SCND" +
                "_NM, :ENG_CRP_SRNM, :ENG_CRP_FRST_NM, :ENG_CRP_SCND_NM, :CPCT_CD, :SHRT_CRP_NM, " +
                ":ENG_SHRT_CRP_NM, :CRP_NM, :ENG_CRP_NM, :CRP_CAT_CD, :CRP_STAT_CD, :CNTRY_CD, :R" +
                "SDT_YN, :BIRTH_DD, :BZNO, :SWFT_CD, :REG_POST_NO, :REG_CNTRY_CD, :REG_REGN_CD, :" +
                "REG_SOATO_CD, :REG_STRE_ADDR, :ENG_REG_STRE_ADDR, :REG_ADDR_CONT, :ENG_REG_ADDR_" +
                "CONT, :RSDT_POST_NO, :RSDT_CNTRY_CD, :RSDT_REGN_CD, :RSDT_SOATO_CD, :RSDT_STRE_A" +
                "DDR, :ENG_RSDT_STRE_ADDR, :RSDT_ADDR_CONT, :ENG_RSDT_ADDR_CONT, :TEL_NO, :EMAIL," +
                " :FAX_NO, :HOMP, :DIST_ID_TYPE_CD, :DIST_ID, :DIST_ID_2, :OFSH_YN, :OKPO_CD, :OK" +
                "ONH_CD, :TYBZ_CD, :CORPS_REG_PLC_CD, :REMARK, :LGR_NO, :LGR_USR_ID, :CRP_ISSU_DD" +
                ", :OLD_CRP_CD, :UKWN_YN, :AGENT_CRP_CD, :SEQ, :DOCU_NO, :FEE_LEVY_YN, :CRP_FEE, " +
                ":RP_RQST_DD, :RP_RQST_SEQ, :ISSR_CAT_CD, :SOOGU_CD, :CRTE_DT, :CRTE_ID, :UPD_DT," +
                " :UPD_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CRP_TYPE_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SRNM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FRST_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SCND_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SRNM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_FRST_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SCND_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CPCT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CPCT_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "SHRT_CRP_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_SHRT_CRP_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "CRP_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CAT_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_STAT_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CNTRY_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_YN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BIRTH_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BIRTH_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BZNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "BZNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SWFT_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SWFT_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_POST_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "REG_CNTRY_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "REG_REGN_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_SOATO_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "REG_STRE_ADDR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_STRE_ADDR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "REG_ADDR_CONT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_ADDR_CONT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_POST_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_CNTRY_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_REGN_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_SOATO_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_STRE_ADDR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_STRE_ADDR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_ADDR_CONT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_ADDR_CONT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TEL_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "TEL_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "EMAIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FAX_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "FAX_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HOMP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "HOMP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OFSH_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "OFSH_YN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OKPO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "OKPO_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OKONH_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "OKONH_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TYBZ_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TYBZ_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CORPS_REG_PLC_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CORPS_REG_PLC_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LGR_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "LGR_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LGR_USR_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "LGR_USR_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CRP_ISSU_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OLD_CRP_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OLD_CRP_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UKWN_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "UKWN_YN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AGENT_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "AGENT_CRP_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FEE_LEVY_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "FEE_LEVY_YN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_FEE";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FEE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RP_RQST_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RP_RQST_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_SEQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ISSR_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ISSR_CAT_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SOOGU_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SOOGU_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"GGUZDR_APP\".\"TBCB_CRP_INFO\" SET \"CRP_CD\" = :CRP_CD, \"CRP_TYPE_CD\" = :CRP_" +
                "TYPE_CD, \"CRP_SRNM\" = :CRP_SRNM, \"CRP_FRST_NM\" = :CRP_FRST_NM, \"CRP_SCND_NM\" = :" +
                "CRP_SCND_NM, \"ENG_CRP_SRNM\" = :ENG_CRP_SRNM, \"ENG_CRP_FRST_NM\" = :ENG_CRP_FRST_N" +
                "M, \"ENG_CRP_SCND_NM\" = :ENG_CRP_SCND_NM, \"CPCT_CD\" = :CPCT_CD, \"SHRT_CRP_NM\" = :" +
                "SHRT_CRP_NM, \"ENG_SHRT_CRP_NM\" = :ENG_SHRT_CRP_NM, \"CRP_NM\" = :CRP_NM, \"ENG_CRP_" +
                "NM\" = :ENG_CRP_NM, \"CRP_CAT_CD\" = :CRP_CAT_CD, \"CRP_STAT_CD\" = :CRP_STAT_CD, \"CN" +
                "TRY_CD\" = :CNTRY_CD, \"RSDT_YN\" = :RSDT_YN, \"BIRTH_DD\" = :BIRTH_DD, \"BZNO\" = :BZN" +
                "O, \"SWFT_CD\" = :SWFT_CD, \"REG_POST_NO\" = :REG_POST_NO, \"REG_CNTRY_CD\" = :REG_CNT" +
                "RY_CD, \"REG_REGN_CD\" = :REG_REGN_CD, \"REG_SOATO_CD\" = :REG_SOATO_CD, \"REG_STRE_A" +
                "DDR\" = :REG_STRE_ADDR, \"ENG_REG_STRE_ADDR\" = :ENG_REG_STRE_ADDR, \"REG_ADDR_CONT\"" +
                " = :REG_ADDR_CONT, \"ENG_REG_ADDR_CONT\" = :ENG_REG_ADDR_CONT, \"RSDT_POST_NO\" = :R" +
                "SDT_POST_NO, \"RSDT_CNTRY_CD\" = :RSDT_CNTRY_CD, \"RSDT_REGN_CD\" = :RSDT_REGN_CD, \"" +
                "RSDT_SOATO_CD\" = :RSDT_SOATO_CD, \"RSDT_STRE_ADDR\" = :RSDT_STRE_ADDR, \"ENG_RSDT_S" +
                "TRE_ADDR\" = :ENG_RSDT_STRE_ADDR, \"RSDT_ADDR_CONT\" = :RSDT_ADDR_CONT, \"ENG_RSDT_A" +
                "DDR_CONT\" = :ENG_RSDT_ADDR_CONT, \"TEL_NO\" = :TEL_NO, \"EMAIL\" = :EMAIL, \"FAX_NO\" " +
                "= :FAX_NO, \"HOMP\" = :HOMP, \"DIST_ID_TYPE_CD\" = :DIST_ID_TYPE_CD, \"DIST_ID\" = :DI" +
                "ST_ID, \"DIST_ID_2\" = :DIST_ID_2, \"OFSH_YN\" = :OFSH_YN, \"OKPO_CD\" = :OKPO_CD, \"OK" +
                "ONH_CD\" = :OKONH_CD, \"TYBZ_CD\" = :TYBZ_CD, \"CORPS_REG_PLC_CD\" = :CORPS_REG_PLC_C" +
                "D, \"REMARK\" = :REMARK, \"LGR_NO\" = :LGR_NO, \"LGR_USR_ID\" = :LGR_USR_ID, \"CRP_ISSU" +
                "_DD\" = :CRP_ISSU_DD, \"OLD_CRP_CD\" = :OLD_CRP_CD, \"UKWN_YN\" = :UKWN_YN, \"AGENT_CR" +
                "P_CD\" = :AGENT_CRP_CD, \"SEQ\" = :SEQ, \"DOCU_NO\" = :DOCU_NO, \"FEE_LEVY_YN\" = :FEE_" +
                "LEVY_YN, \"CRP_FEE\" = :CRP_FEE, \"RP_RQST_DD\" = :RP_RQST_DD, \"RP_RQST_SEQ\" = :RP_R" +
                "QST_SEQ, \"ISSR_CAT_CD\" = :ISSR_CAT_CD, \"SOOGU_CD\" = :SOOGU_CD, \"CRTE_DT\" = :CRTE" +
                "_DT, \"CRTE_ID\" = :CRTE_ID, \"UPD_DT\" = :UPD_DT, \"UPD_ID\" = :UPD_ID WHERE ((\"CRP_C" +
                "D\" = :Original_CRP_CD) AND (\"CRP_TYPE_CD\" = :Original_CRP_TYPE_CD) AND ((:IsNull" +
                "_CRP_SRNM = 1 AND \"CRP_SRNM\" IS NULL) OR (\"CRP_SRNM\" = :Original_CRP_SRNM)) AND " +
                "((:IsNull_CRP_FRST_NM = 1 AND \"CRP_FRST_NM\" IS NULL) OR (\"CRP_FRST_NM\" = :Origin" +
                "al_CRP_FRST_NM)) AND ((:IsNull_CRP_SCND_NM = 1 AND \"CRP_SCND_NM\" IS NULL) OR (\"C" +
                "RP_SCND_NM\" = :Original_CRP_SCND_NM)) AND ((:IsNull_ENG_CRP_SRNM = 1 AND \"ENG_CR" +
                "P_SRNM\" IS NULL) OR (\"ENG_CRP_SRNM\" = :Original_ENG_CRP_SRNM)) AND ((:IsNull_ENG" +
                "_CRP_FRST_NM = 1 AND \"ENG_CRP_FRST_NM\" IS NULL) OR (\"ENG_CRP_FRST_NM\" = :Origina" +
                "l_ENG_CRP_FRST_NM)) AND ((:IsNull_ENG_CRP_SCND_NM = 1 AND \"ENG_CRP_SCND_NM\" IS N" +
                "ULL) OR (\"ENG_CRP_SCND_NM\" = :Original_ENG_CRP_SCND_NM)) AND ((:IsNull_CPCT_CD =" +
                " 1 AND \"CPCT_CD\" IS NULL) OR (\"CPCT_CD\" = :Original_CPCT_CD)) AND (\"SHRT_CRP_NM\"" +
                " = :Original_SHRT_CRP_NM) AND ((:IsNull_ENG_SHRT_CRP_NM = 1 AND \"ENG_SHRT_CRP_NM" +
                "\" IS NULL) OR (\"ENG_SHRT_CRP_NM\" = :Original_ENG_SHRT_CRP_NM)) AND (\"CRP_NM\" = :" +
                "Original_CRP_NM) AND ((:IsNull_ENG_CRP_NM = 1 AND \"ENG_CRP_NM\" IS NULL) OR (\"ENG" +
                "_CRP_NM\" = :Original_ENG_CRP_NM)) AND (\"CRP_CAT_CD\" = :Original_CRP_CAT_CD) AND " +
                "(\"CRP_STAT_CD\" = :Original_CRP_STAT_CD) AND ((:IsNull_CNTRY_CD = 1 AND \"CNTRY_CD" +
                "\" IS NULL) OR (\"CNTRY_CD\" = :Original_CNTRY_CD)) AND ((:IsNull_RSDT_YN = 1 AND \"" +
                "RSDT_YN\" IS NULL) OR (\"RSDT_YN\" = :Original_RSDT_YN)) AND ((:IsNull_BIRTH_DD = 1" +
                " AND \"BIRTH_DD\" IS NULL) OR (\"BIRTH_DD\" = :Original_BIRTH_DD)) AND ((:IsNull_BZN" +
                "O = 1 AND \"BZNO\" IS NULL) OR (\"BZNO\" = :Original_BZNO)) AND ((:IsNull_SWFT_CD = " +
                "1 AND \"SWFT_CD\" IS NULL) OR (\"SWFT_CD\" = :Original_SWFT_CD)) AND ((:IsNull_REG_P" +
                "OST_NO = 1 AND \"REG_POST_NO\" IS NULL) OR (\"REG_POST_NO\" = :Original_REG_POST_NO)" +
                ") AND ((:IsNull_REG_CNTRY_CD = 1 AND \"REG_CNTRY_CD\" IS NULL) OR (\"REG_CNTRY_CD\" " +
                "= :Original_REG_CNTRY_CD)) AND ((:IsNull_REG_REGN_CD = 1 AND \"REG_REGN_CD\" IS NU" +
                "LL) OR (\"REG_REGN_CD\" = :Original_REG_REGN_CD)) AND ((:IsNull_REG_SOATO_CD = 1 A" +
                "ND \"REG_SOATO_CD\" IS NULL) OR (\"REG_SOATO_CD\" = :Original_REG_SOATO_CD)) AND ((:" +
                "IsNull_REG_STRE_ADDR = 1 AND \"REG_STRE_ADDR\" IS NULL) OR (\"REG_STRE_ADDR\" = :Ori" +
                "ginal_REG_STRE_ADDR)) AND ((:IsNull_ENG_REG_STRE_ADDR = 1 AND \"ENG_REG_STRE_ADDR" +
                "\" IS NULL) OR (\"ENG_REG_STRE_ADDR\" = :Original_ENG_REG_STRE_ADDR)) AND ((:IsNull" +
                "_REG_ADDR_CONT = 1 AND \"REG_ADDR_CONT\" IS NULL) OR (\"REG_ADDR_CONT\" = :Original_" +
                "REG_ADDR_CONT)) AND ((:IsNull_ENG_REG_ADDR_CONT = 1 AND \"ENG_REG_ADDR_CONT\" IS N" +
                "ULL) OR (\"ENG_REG_ADDR_CONT\" = :Original_ENG_REG_ADDR_CONT)) AND ((:IsNull_RSDT_" +
                "POST_NO = 1 AND \"RSDT_POST_NO\" IS NULL) OR (\"RSDT_POST_NO\" = :Original_RSDT_POST" +
                "_NO)) AND ((:IsNull_RSDT_CNTRY_CD = 1 AND \"RSDT_CNTRY_CD\" IS NULL) OR (\"RSDT_CNT" +
                "RY_CD\" = :Original_RSDT_CNTRY_CD)) AND ((:IsNull_RSDT_REGN_CD = 1 AND \"RSDT_REGN" +
                "_CD\" IS NULL) OR (\"RSDT_REGN_CD\" = :Original_RSDT_REGN_CD)) AND ((:IsNull_RSDT_S" +
                "OATO_CD = 1 AND \"RSDT_SOATO_CD\" IS NULL) OR (\"RSDT_SOATO_CD\" = :Original_RSDT_SO" +
                "ATO_CD)) AND ((:IsNull_RSDT_STRE_ADDR = 1 AND \"RSDT_STRE_ADDR\" IS NULL) OR (\"RSD" +
                "T_STRE_ADDR\" = :Original_RSDT_STRE_ADDR)) AND ((:IsNull_ENG_RSDT_STRE_ADDR = 1 A" +
                "ND \"ENG_RSDT_STRE_ADDR\" IS NULL) OR (\"ENG_RSDT_STRE_ADDR\" = :Original_ENG_RSDT_S" +
                "TRE_ADDR)) AND ((:IsNull_RSDT_ADDR_CONT = 1 AND \"RSDT_ADDR_CONT\" IS NULL) OR (\"R" +
                "SDT_ADDR_CONT\" = :Original_RSDT_ADDR_CONT)) AND ((:IsNull_ENG_RSDT_ADDR_CONT = 1" +
                " AND \"ENG_RSDT_ADDR_CONT\" IS NULL) OR (\"ENG_RSDT_ADDR_CONT\" = :Original_ENG_RSDT" +
                "_ADDR_CONT)) AND ((:IsNull_TEL_NO = 1 AND \"TEL_NO\" IS NULL) OR (\"TEL_NO\" = :Orig" +
                "inal_TEL_NO)) AND ((:IsNull_EMAIL = 1 AND \"EMAIL\" IS NULL) OR (\"EMAIL\" = :Origin" +
                "al_EMAIL)) AND ((:IsNull_FAX_NO = 1 AND \"FAX_NO\" IS NULL) OR (\"FAX_NO\" = :Origin" +
                "al_FAX_NO)) AND ((:IsNull_HOMP = 1 AND \"HOMP\" IS NULL) OR (\"HOMP\" = :Original_HO" +
                "MP)) AND ((:IsNull_DIST_ID_TYPE_CD = 1 AND \"DIST_ID_TYPE_CD\" IS NULL) OR (\"DIST_" +
                "ID_TYPE_CD\" = :Original_DIST_ID_TYPE_CD)) AND ((:IsNull_DIST_ID = 1 AND \"DIST_ID" +
                "\" IS NULL) OR (\"DIST_ID\" = :Original_DIST_ID)) AND ((:IsNull_DIST_ID_2 = 1 AND \"" +
                "DIST_ID_2\" IS NULL) OR (\"DIST_ID_2\" = :Original_DIST_ID_2)) AND ((:IsNull_OFSH_Y" +
                "N = 1 AND \"OFSH_YN\" IS NULL) OR (\"OFSH_YN\" = :Original_OFSH_YN)) AND ((:IsNull_O" +
                "KPO_CD = 1 AND \"OKPO_CD\" IS NULL) OR (\"OKPO_CD\" = :Original_OKPO_CD)) AND ((:IsN" +
                "ull_OKONH_CD = 1 AND \"OKONH_CD\" IS NULL) OR (\"OKONH_CD\" = :Original_OKONH_CD)) A" +
                "ND ((:IsNull_TYBZ_CD = 1 AND \"TYBZ_CD\" IS NULL) OR (\"TYBZ_CD\" = :Original_TYBZ_C" +
                "D)) AND ((:IsNull_CORPS_REG_PLC_CD = 1 AND \"CORPS_REG_PLC_CD\" IS NULL) OR (\"CORP" +
                "S_REG_PLC_CD\" = :Original_CORPS_REG_PLC_CD)) AND ((:IsNull_REMARK = 1 AND \"REMAR" +
                "K\" IS NULL) OR (\"REMARK\" = :Original_REMARK)) AND ((:IsNull_LGR_NO = 1 AND \"LGR_" +
                "NO\" IS NULL) OR (\"LGR_NO\" = :Original_LGR_NO)) AND ((:IsNull_LGR_USR_ID = 1 AND " +
                "\"LGR_USR_ID\" IS NULL) OR (\"LGR_USR_ID\" = :Original_LGR_USR_ID)) AND (\"CRP_ISSU_D" +
                "D\" = :Original_CRP_ISSU_DD) AND ((:IsNull_OLD_CRP_CD = 1 AND \"OLD_CRP_CD\" IS NUL" +
                "L) OR (\"OLD_CRP_CD\" = :Original_OLD_CRP_CD)) AND ((:IsNull_UKWN_YN = 1 AND \"UKWN" +
                "_YN\" IS NULL) OR (\"UKWN_YN\" = :Original_UKWN_YN)) AND ((:IsNull_AGENT_CRP_CD = 1" +
                " AND \"AGENT_CRP_CD\" IS NULL) OR (\"AGENT_CRP_CD\" = :Original_AGENT_CRP_CD)) AND (" +
                "(:IsNull_SEQ = 1 AND \"SEQ\" IS NULL) OR (\"SEQ\" = :Original_SEQ)) AND ((:IsNull_DO" +
                "CU_NO = 1 AND \"DOCU_NO\" IS NULL) OR (\"DOCU_NO\" = :Original_DOCU_NO)) AND ((:IsNu" +
                "ll_FEE_LEVY_YN = 1 AND \"FEE_LEVY_YN\" IS NULL) OR (\"FEE_LEVY_YN\" = :Original_FEE_" +
                "LEVY_YN)) AND ((:IsNull_CRP_FEE = 1 AND \"CRP_FEE\" IS NULL) OR (\"CRP_FEE\" = :Orig" +
                "inal_CRP_FEE)) AND ((:IsNull_RP_RQST_DD = 1 AND \"RP_RQST_DD\" IS NULL) OR (\"RP_RQ" +
                "ST_DD\" = :Original_RP_RQST_DD)) AND ((:IsNull_RP_RQST_SEQ = 1 AND \"RP_RQST_SEQ\" " +
                "IS NULL) OR (\"RP_RQST_SEQ\" = :Original_RP_RQST_SEQ)) AND ((:IsNull_ISSR_CAT_CD =" +
                " 1 AND \"ISSR_CAT_CD\" IS NULL) OR (\"ISSR_CAT_CD\" = :Original_ISSR_CAT_CD)) AND ((" +
                ":IsNull_SOOGU_CD = 1 AND \"SOOGU_CD\" IS NULL) OR (\"SOOGU_CD\" = :Original_SOOGU_CD" +
                ")) AND ((:IsNull_CRTE_DT = 1 AND \"CRTE_DT\" IS NULL) OR (\"CRTE_DT\" = :Original_CR" +
                "TE_DT)) AND ((:IsNull_CRTE_ID = 1 AND \"CRTE_ID\" IS NULL) OR (\"CRTE_ID\" = :Origin" +
                "al_CRTE_ID)) AND ((:IsNull_UPD_DT = 1 AND \"UPD_DT\" IS NULL) OR (\"UPD_DT\" = :Orig" +
                "inal_UPD_DT)) AND ((:IsNull_UPD_ID = 1 AND \"UPD_ID\" IS NULL) OR (\"UPD_ID\" = :Ori" +
                "ginal_UPD_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CRP_TYPE_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SRNM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FRST_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SCND_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SRNM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_FRST_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SCND_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CPCT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CPCT_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "SHRT_CRP_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_SHRT_CRP_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "CRP_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_NM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CAT_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_STAT_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CNTRY_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_YN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BIRTH_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BIRTH_DD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BZNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "BZNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SWFT_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SWFT_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_POST_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "REG_CNTRY_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "REG_REGN_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_SOATO_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "REG_STRE_ADDR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_STRE_ADDR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "REG_ADDR_CONT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_ADDR_CONT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_POST_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_CNTRY_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_REGN_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_SOATO_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_STRE_ADDR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_STRE_ADDR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_ADDR_CONT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENG_RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_ADDR_CONT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TEL_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "TEL_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "EMAIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FAX_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "FAX_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HOMP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "HOMP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DIST_ID_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OFSH_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "OFSH_YN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OKPO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "OKPO_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OKONH_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "OKONH_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TYBZ_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TYBZ_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CORPS_REG_PLC_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CORPS_REG_PLC_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LGR_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "LGR_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LGR_USR_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "LGR_USR_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CRP_ISSU_DD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OLD_CRP_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OLD_CRP_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UKWN_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "UKWN_YN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AGENT_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "AGENT_CRP_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FEE_LEVY_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "FEE_LEVY_YN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_FEE";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FEE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RP_RQST_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_DD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RP_RQST_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_SEQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ISSR_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ISSR_CAT_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SOOGU_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SOOGU_CD";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "CRP_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_SRNM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_FRST_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_SCND_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_SRNM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_SRNM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SRNM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_FRST_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_FRST_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_FRST_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_SCND_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_SCND_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_SCND_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CPCT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CPCT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CPCT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CPCT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "SHRT_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_SHRT_CRP_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_SHRT_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_SHRT_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_SHRT_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_CRP_NM";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_CRP_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ENG_CRP_NM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_STAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CRP_STAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CNTRY_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BIRTH_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BIRTH_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BIRTH_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "BIRTH_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BZNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "BZNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BZNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "BZNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SWFT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SWFT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SWFT_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SWFT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_POST_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_CNTRY_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "REG_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "REG_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_REGN_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "REG_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "REG_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_SOATO_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "REG_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_REG_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_REG_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REG_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_REG_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_REG_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_REG_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_POST_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_POST_NO";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_POST_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_CNTRY_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_CNTRY_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_CNTRY_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_REGN_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_REGN_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_REGN_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_SOATO_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_SOATO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_SOATO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_RSDT_STRE_ADDR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_RSDT_STRE_ADDR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_STRE_ADDR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RSDT_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ENG_RSDT_ADDR_CONT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ENG_RSDT_ADDR_CONT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 600;
            param.IsNullable = true;
            param.SourceColumn = "ENG_RSDT_ADDR_CONT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TEL_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "TEL_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TEL_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "TEL_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EMAIL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EMAIL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FAX_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "FAX_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAX_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "FAX_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_HOMP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "HOMP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOMP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "HOMP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID_TYPE_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_TYPE_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DIST_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DIST_ID_2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DIST_ID_2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DIST_ID_2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OFSH_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "OFSH_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OFSH_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "OFSH_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OKPO_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "OKPO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OKPO_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "OKPO_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OKONH_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "OKONH_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OKONH_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "OKONH_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TYBZ_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TYBZ_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TYBZ_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "TYBZ_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CORPS_REG_PLC_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CORPS_REG_PLC_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CORPS_REG_PLC_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "CORPS_REG_PLC_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REMARK";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REMARK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "REMARK";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LGR_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "LGR_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LGR_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "LGR_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LGR_USR_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "LGR_USR_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LGR_USR_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "LGR_USR_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_ISSU_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "CRP_ISSU_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OLD_CRP_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OLD_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OLD_CRP_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "OLD_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UKWN_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "UKWN_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UKWN_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "UKWN_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AGENT_CRP_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "AGENT_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AGENT_CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "AGENT_CRP_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCU_NO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FEE_LEVY_YN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "FEE_LEVY_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FEE_LEVY_YN";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "FEE_LEVY_YN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRP_FEE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRP_FEE";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRP_FEE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RP_RQST_DD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RP_RQST_DD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_DD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RP_RQST_SEQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RP_RQST_SEQ";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RP_RQST_SEQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ISSR_CAT_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ISSR_CAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ISSR_CAT_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ISSR_CAT_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SOOGU_CD";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SOOGU_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SOOGU_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SOOGU_CD";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRTE_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRTE_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "CRTE_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_DT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_DT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "UPD_DT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UPD_ID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UPD_ID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "UPD_ID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::app_for_CD.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CRP_CD, CRP_TYPE_CD, CRP_SRNM, CRP_FRST_NM, CRP_SCND_NM, ENG_CRP_SRNM, ENG_CRP_FRST_NM, ENG_CRP_SCND_NM, CPCT_CD, SHRT_CRP_NM, ENG_SHRT_CRP_NM, CRP_NM, ENG_CRP_NM, CRP_CAT_CD, CRP_STAT_CD, CNTRY_CD, RSDT_YN, BIRTH_DD, BZNO, SWFT_CD, REG_POST_NO, REG_CNTRY_CD, REG_REGN_CD, REG_SOATO_CD, REG_STRE_ADDR, ENG_REG_STRE_ADDR, REG_ADDR_CONT, ENG_REG_ADDR_CONT, RSDT_POST_NO, RSDT_CNTRY_CD, RSDT_REGN_CD, RSDT_SOATO_CD, RSDT_STRE_ADDR, ENG_RSDT_STRE_ADDR, RSDT_ADDR_CONT, ENG_RSDT_ADDR_CONT, TEL_NO, EMAIL, FAX_NO, HOMP, DIST_ID_TYPE_CD, DIST_ID, DIST_ID_2, OFSH_YN, OKPO_CD, OKONH_CD, TYBZ_CD, CORPS_REG_PLC_CD, REMARK, LGR_NO, LGR_USR_ID, CRP_ISSU_DD, OLD_CRP_CD, UKWN_YN, AGENT_CRP_CD, SEQ, DOCU_NO, FEE_LEVY_YN, CRP_FEE, RP_RQST_DD, RP_RQST_SEQ, ISSR_CAT_CD, SOOGU_CD, CRTE_DT, CRTE_ID, UPD_DT, UPD_ID FROM GGUZDR_APP.TBCB_CRP_INFO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NeedDataset.TBCB_CRP_INFODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NeedDataset.TBCB_CRP_INFODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NeedDataset.TBCB_CRP_INFODataTable dataTable = new NeedDataset.TBCB_CRP_INFODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset.TBCB_CRP_INFODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset dataSet) {
            return this.Adapter.Update(dataSet, "TBCB_CRP_INFO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CRP_CD, 
                    string Original_CRP_TYPE_CD, 
                    string Original_CRP_SRNM, 
                    string Original_CRP_FRST_NM, 
                    string Original_CRP_SCND_NM, 
                    string Original_ENG_CRP_SRNM, 
                    string Original_ENG_CRP_FRST_NM, 
                    string Original_ENG_CRP_SCND_NM, 
                    string Original_CPCT_CD, 
                    string Original_SHRT_CRP_NM, 
                    string Original_ENG_SHRT_CRP_NM, 
                    string Original_CRP_NM, 
                    string Original_ENG_CRP_NM, 
                    string Original_CRP_CAT_CD, 
                    string Original_CRP_STAT_CD, 
                    string Original_CNTRY_CD, 
                    string Original_RSDT_YN, 
                    string Original_BIRTH_DD, 
                    string Original_BZNO, 
                    string Original_SWFT_CD, 
                    string Original_REG_POST_NO, 
                    string Original_REG_CNTRY_CD, 
                    string Original_REG_REGN_CD, 
                    string Original_REG_SOATO_CD, 
                    string Original_REG_STRE_ADDR, 
                    string Original_ENG_REG_STRE_ADDR, 
                    string Original_REG_ADDR_CONT, 
                    string Original_ENG_REG_ADDR_CONT, 
                    string Original_RSDT_POST_NO, 
                    string Original_RSDT_CNTRY_CD, 
                    string Original_RSDT_REGN_CD, 
                    string Original_RSDT_SOATO_CD, 
                    string Original_RSDT_STRE_ADDR, 
                    string Original_ENG_RSDT_STRE_ADDR, 
                    string Original_RSDT_ADDR_CONT, 
                    string Original_ENG_RSDT_ADDR_CONT, 
                    string Original_TEL_NO, 
                    string Original_EMAIL, 
                    string Original_FAX_NO, 
                    string Original_HOMP, 
                    string Original_DIST_ID_TYPE_CD, 
                    string Original_DIST_ID, 
                    string Original_DIST_ID_2, 
                    string Original_OFSH_YN, 
                    string Original_OKPO_CD, 
                    string Original_OKONH_CD, 
                    string Original_TYBZ_CD, 
                    string Original_CORPS_REG_PLC_CD, 
                    string Original_REMARK, 
                    string Original_LGR_NO, 
                    string Original_LGR_USR_ID, 
                    string Original_CRP_ISSU_DD, 
                    string Original_OLD_CRP_CD, 
                    string Original_UKWN_YN, 
                    string Original_AGENT_CRP_CD, 
                    global::System.Nullable<long> Original_SEQ, 
                    string Original_DOCU_NO, 
                    string Original_FEE_LEVY_YN, 
                    global::System.Nullable<long> Original_CRP_FEE, 
                    string Original_RP_RQST_DD, 
                    global::System.Nullable<long> Original_RP_RQST_SEQ, 
                    string Original_ISSR_CAT_CD, 
                    string Original_SOOGU_CD, 
                    global::System.Nullable<global::System.DateTime> Original_CRTE_DT, 
                    string Original_CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPD_DT, 
                    string Original_UPD_ID) {
            if ((Original_CRP_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_CD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CRP_CD));
            }
            if ((Original_CRP_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_TYPE_CD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CRP_TYPE_CD));
            }
            if ((Original_CRP_SRNM == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CRP_SRNM));
            }
            if ((Original_CRP_FRST_NM == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CRP_FRST_NM));
            }
            if ((Original_CRP_SCND_NM == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_CRP_SCND_NM));
            }
            if ((Original_ENG_CRP_SRNM == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ENG_CRP_SRNM));
            }
            if ((Original_ENG_CRP_FRST_NM == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ENG_CRP_FRST_NM));
            }
            if ((Original_ENG_CRP_SCND_NM == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ENG_CRP_SCND_NM));
            }
            if ((Original_CPCT_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_CPCT_CD));
            }
            if ((Original_SHRT_CRP_NM == null)) {
                throw new global::System.ArgumentNullException("Original_SHRT_CRP_NM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_SHRT_CRP_NM));
            }
            if ((Original_ENG_SHRT_CRP_NM == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ENG_SHRT_CRP_NM));
            }
            if ((Original_CRP_NM == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_NM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_CRP_NM));
            }
            if ((Original_ENG_CRP_NM == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_ENG_CRP_NM));
            }
            if ((Original_CRP_CAT_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_CAT_CD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CRP_CAT_CD));
            }
            if ((Original_CRP_STAT_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_STAT_CD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_CRP_STAT_CD));
            }
            if ((Original_CNTRY_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_CNTRY_CD));
            }
            if ((Original_RSDT_YN == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_RSDT_YN));
            }
            if ((Original_BIRTH_DD == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_BIRTH_DD));
            }
            if ((Original_BZNO == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_BZNO));
            }
            if ((Original_SWFT_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_SWFT_CD));
            }
            if ((Original_REG_POST_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_REG_POST_NO));
            }
            if ((Original_REG_CNTRY_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_REG_CNTRY_CD));
            }
            if ((Original_REG_REGN_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_REG_REGN_CD));
            }
            if ((Original_REG_SOATO_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_REG_SOATO_CD));
            }
            if ((Original_REG_STRE_ADDR == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_REG_STRE_ADDR));
            }
            if ((Original_ENG_REG_STRE_ADDR == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_ENG_REG_STRE_ADDR));
            }
            if ((Original_REG_ADDR_CONT == null)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_REG_ADDR_CONT));
            }
            if ((Original_ENG_REG_ADDR_CONT == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_ENG_REG_ADDR_CONT));
            }
            if ((Original_RSDT_POST_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_RSDT_POST_NO));
            }
            if ((Original_RSDT_CNTRY_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_RSDT_CNTRY_CD));
            }
            if ((Original_RSDT_REGN_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_RSDT_REGN_CD));
            }
            if ((Original_RSDT_SOATO_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((string)(Original_RSDT_SOATO_CD));
            }
            if ((Original_RSDT_STRE_ADDR == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_RSDT_STRE_ADDR));
            }
            if ((Original_ENG_RSDT_STRE_ADDR == null)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_ENG_RSDT_STRE_ADDR));
            }
            if ((Original_RSDT_ADDR_CONT == null)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_RSDT_ADDR_CONT));
            }
            if ((Original_ENG_RSDT_ADDR_CONT == null)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((string)(Original_ENG_RSDT_ADDR_CONT));
            }
            if ((Original_TEL_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_TEL_NO));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_EMAIL));
            }
            if ((Original_FAX_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_FAX_NO));
            }
            if ((Original_HOMP == null)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_HOMP));
            }
            if ((Original_DIST_ID_TYPE_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((string)(Original_DIST_ID_TYPE_CD));
            }
            if ((Original_DIST_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_DIST_ID));
            }
            if ((Original_DIST_ID_2 == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_DIST_ID_2));
            }
            if ((Original_OFSH_YN == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_OFSH_YN));
            }
            if ((Original_OKPO_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_OKPO_CD));
            }
            if ((Original_OKONH_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_OKONH_CD));
            }
            if ((Original_TYBZ_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_TYBZ_CD));
            }
            if ((Original_CORPS_REG_PLC_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_CORPS_REG_PLC_CD));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_REMARK));
            }
            if ((Original_LGR_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_LGR_NO));
            }
            if ((Original_LGR_USR_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[95].Value = ((string)(Original_LGR_USR_ID));
            }
            if ((Original_CRP_ISSU_DD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_ISSU_DD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_CRP_ISSU_DD));
            }
            if ((Original_OLD_CRP_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_OLD_CRP_CD));
            }
            if ((Original_UKWN_YN == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_UKWN_YN));
            }
            if ((Original_AGENT_CRP_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_AGENT_CRP_CD));
            }
            if ((Original_SEQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((long)(Original_SEQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_DOCU_NO == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_DOCU_NO));
            }
            if ((Original_FEE_LEVY_YN == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_FEE_LEVY_YN));
            }
            if ((Original_CRP_FEE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((long)(Original_CRP_FEE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_RP_RQST_DD == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_RP_RQST_DD));
            }
            if ((Original_RP_RQST_SEQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((long)(Original_RP_RQST_SEQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_ISSR_CAT_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((string)(Original_ISSR_CAT_CD));
            }
            if ((Original_SOOGU_CD == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_SOOGU_CD));
            }
            if ((Original_CRTE_DT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((System.DateTime)(Original_CRTE_DT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_CRTE_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_CRTE_ID));
            }
            if ((Original_UPD_DT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((System.DateTime)(Original_UPD_DT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_UPD_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_UPD_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CRP_CD, 
                    string CRP_TYPE_CD, 
                    string CRP_SRNM, 
                    string CRP_FRST_NM, 
                    string CRP_SCND_NM, 
                    string ENG_CRP_SRNM, 
                    string ENG_CRP_FRST_NM, 
                    string ENG_CRP_SCND_NM, 
                    string CPCT_CD, 
                    string SHRT_CRP_NM, 
                    string ENG_SHRT_CRP_NM, 
                    string CRP_NM, 
                    string ENG_CRP_NM, 
                    string CRP_CAT_CD, 
                    string CRP_STAT_CD, 
                    string CNTRY_CD, 
                    string RSDT_YN, 
                    string BIRTH_DD, 
                    string BZNO, 
                    string SWFT_CD, 
                    string REG_POST_NO, 
                    string REG_CNTRY_CD, 
                    string REG_REGN_CD, 
                    string REG_SOATO_CD, 
                    string REG_STRE_ADDR, 
                    string ENG_REG_STRE_ADDR, 
                    string REG_ADDR_CONT, 
                    string ENG_REG_ADDR_CONT, 
                    string RSDT_POST_NO, 
                    string RSDT_CNTRY_CD, 
                    string RSDT_REGN_CD, 
                    string RSDT_SOATO_CD, 
                    string RSDT_STRE_ADDR, 
                    string ENG_RSDT_STRE_ADDR, 
                    string RSDT_ADDR_CONT, 
                    string ENG_RSDT_ADDR_CONT, 
                    string TEL_NO, 
                    string EMAIL, 
                    string FAX_NO, 
                    string HOMP, 
                    string DIST_ID_TYPE_CD, 
                    string DIST_ID, 
                    string DIST_ID_2, 
                    string OFSH_YN, 
                    string OKPO_CD, 
                    string OKONH_CD, 
                    string TYBZ_CD, 
                    string CORPS_REG_PLC_CD, 
                    string REMARK, 
                    string LGR_NO, 
                    string LGR_USR_ID, 
                    string CRP_ISSU_DD, 
                    string OLD_CRP_CD, 
                    string UKWN_YN, 
                    string AGENT_CRP_CD, 
                    global::System.Nullable<long> SEQ, 
                    string DOCU_NO, 
                    string FEE_LEVY_YN, 
                    global::System.Nullable<long> CRP_FEE, 
                    string RP_RQST_DD, 
                    global::System.Nullable<long> RP_RQST_SEQ, 
                    string ISSR_CAT_CD, 
                    string SOOGU_CD, 
                    global::System.Nullable<global::System.DateTime> CRTE_DT, 
                    string CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> UPD_DT, 
                    string UPD_ID) {
            if ((CRP_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CRP_CD));
            }
            if ((CRP_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_TYPE_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CRP_TYPE_CD));
            }
            if ((CRP_SRNM == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CRP_SRNM));
            }
            if ((CRP_FRST_NM == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CRP_FRST_NM));
            }
            if ((CRP_SCND_NM == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CRP_SCND_NM));
            }
            if ((ENG_CRP_SRNM == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ENG_CRP_SRNM));
            }
            if ((ENG_CRP_FRST_NM == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ENG_CRP_FRST_NM));
            }
            if ((ENG_CRP_SCND_NM == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ENG_CRP_SCND_NM));
            }
            if ((CPCT_CD == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(CPCT_CD));
            }
            if ((SHRT_CRP_NM == null)) {
                throw new global::System.ArgumentNullException("SHRT_CRP_NM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SHRT_CRP_NM));
            }
            if ((ENG_SHRT_CRP_NM == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ENG_SHRT_CRP_NM));
            }
            if ((CRP_NM == null)) {
                throw new global::System.ArgumentNullException("CRP_NM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CRP_NM));
            }
            if ((ENG_CRP_NM == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ENG_CRP_NM));
            }
            if ((CRP_CAT_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CAT_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(CRP_CAT_CD));
            }
            if ((CRP_STAT_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_STAT_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(CRP_STAT_CD));
            }
            if ((CNTRY_CD == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CNTRY_CD));
            }
            if ((RSDT_YN == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(RSDT_YN));
            }
            if ((BIRTH_DD == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(BIRTH_DD));
            }
            if ((BZNO == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(BZNO));
            }
            if ((SWFT_CD == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(SWFT_CD));
            }
            if ((REG_POST_NO == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(REG_POST_NO));
            }
            if ((REG_CNTRY_CD == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(REG_CNTRY_CD));
            }
            if ((REG_REGN_CD == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(REG_REGN_CD));
            }
            if ((REG_SOATO_CD == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(REG_SOATO_CD));
            }
            if ((REG_STRE_ADDR == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(REG_STRE_ADDR));
            }
            if ((ENG_REG_STRE_ADDR == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ENG_REG_STRE_ADDR));
            }
            if ((REG_ADDR_CONT == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(REG_ADDR_CONT));
            }
            if ((ENG_REG_ADDR_CONT == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(ENG_REG_ADDR_CONT));
            }
            if ((RSDT_POST_NO == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(RSDT_POST_NO));
            }
            if ((RSDT_CNTRY_CD == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(RSDT_CNTRY_CD));
            }
            if ((RSDT_REGN_CD == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(RSDT_REGN_CD));
            }
            if ((RSDT_SOATO_CD == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(RSDT_SOATO_CD));
            }
            if ((RSDT_STRE_ADDR == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(RSDT_STRE_ADDR));
            }
            if ((ENG_RSDT_STRE_ADDR == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ENG_RSDT_STRE_ADDR));
            }
            if ((RSDT_ADDR_CONT == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(RSDT_ADDR_CONT));
            }
            if ((ENG_RSDT_ADDR_CONT == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(ENG_RSDT_ADDR_CONT));
            }
            if ((TEL_NO == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(TEL_NO));
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(EMAIL));
            }
            if ((FAX_NO == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(FAX_NO));
            }
            if ((HOMP == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(HOMP));
            }
            if ((DIST_ID_TYPE_CD == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(DIST_ID_TYPE_CD));
            }
            if ((DIST_ID == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(DIST_ID));
            }
            if ((DIST_ID_2 == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(DIST_ID_2));
            }
            if ((OFSH_YN == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(OFSH_YN));
            }
            if ((OKPO_CD == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(OKPO_CD));
            }
            if ((OKONH_CD == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(OKONH_CD));
            }
            if ((TYBZ_CD == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(TYBZ_CD));
            }
            if ((CORPS_REG_PLC_CD == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(CORPS_REG_PLC_CD));
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(REMARK));
            }
            if ((LGR_NO == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(LGR_NO));
            }
            if ((LGR_USR_ID == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(LGR_USR_ID));
            }
            if ((CRP_ISSU_DD == null)) {
                throw new global::System.ArgumentNullException("CRP_ISSU_DD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(CRP_ISSU_DD));
            }
            if ((OLD_CRP_CD == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(OLD_CRP_CD));
            }
            if ((UKWN_YN == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(UKWN_YN));
            }
            if ((AGENT_CRP_CD == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(AGENT_CRP_CD));
            }
            if ((SEQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((long)(SEQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((DOCU_NO == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(DOCU_NO));
            }
            if ((FEE_LEVY_YN == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(FEE_LEVY_YN));
            }
            if ((CRP_FEE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((long)(CRP_FEE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((RP_RQST_DD == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(RP_RQST_DD));
            }
            if ((RP_RQST_SEQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((long)(RP_RQST_SEQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((ISSR_CAT_CD == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(ISSR_CAT_CD));
            }
            if ((SOOGU_CD == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(SOOGU_CD));
            }
            if ((CRTE_DT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((System.DateTime)(CRTE_DT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((CRTE_ID == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(CRTE_ID));
            }
            if ((UPD_DT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((System.DateTime)(UPD_DT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((UPD_ID == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(UPD_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CRP_CD, 
                    string CRP_TYPE_CD, 
                    string CRP_SRNM, 
                    string CRP_FRST_NM, 
                    string CRP_SCND_NM, 
                    string ENG_CRP_SRNM, 
                    string ENG_CRP_FRST_NM, 
                    string ENG_CRP_SCND_NM, 
                    string CPCT_CD, 
                    string SHRT_CRP_NM, 
                    string ENG_SHRT_CRP_NM, 
                    string CRP_NM, 
                    string ENG_CRP_NM, 
                    string CRP_CAT_CD, 
                    string CRP_STAT_CD, 
                    string CNTRY_CD, 
                    string RSDT_YN, 
                    string BIRTH_DD, 
                    string BZNO, 
                    string SWFT_CD, 
                    string REG_POST_NO, 
                    string REG_CNTRY_CD, 
                    string REG_REGN_CD, 
                    string REG_SOATO_CD, 
                    string REG_STRE_ADDR, 
                    string ENG_REG_STRE_ADDR, 
                    string REG_ADDR_CONT, 
                    string ENG_REG_ADDR_CONT, 
                    string RSDT_POST_NO, 
                    string RSDT_CNTRY_CD, 
                    string RSDT_REGN_CD, 
                    string RSDT_SOATO_CD, 
                    string RSDT_STRE_ADDR, 
                    string ENG_RSDT_STRE_ADDR, 
                    string RSDT_ADDR_CONT, 
                    string ENG_RSDT_ADDR_CONT, 
                    string TEL_NO, 
                    string EMAIL, 
                    string FAX_NO, 
                    string HOMP, 
                    string DIST_ID_TYPE_CD, 
                    string DIST_ID, 
                    string DIST_ID_2, 
                    string OFSH_YN, 
                    string OKPO_CD, 
                    string OKONH_CD, 
                    string TYBZ_CD, 
                    string CORPS_REG_PLC_CD, 
                    string REMARK, 
                    string LGR_NO, 
                    string LGR_USR_ID, 
                    string CRP_ISSU_DD, 
                    string OLD_CRP_CD, 
                    string UKWN_YN, 
                    string AGENT_CRP_CD, 
                    global::System.Nullable<long> SEQ, 
                    string DOCU_NO, 
                    string FEE_LEVY_YN, 
                    global::System.Nullable<long> CRP_FEE, 
                    string RP_RQST_DD, 
                    global::System.Nullable<long> RP_RQST_SEQ, 
                    string ISSR_CAT_CD, 
                    string SOOGU_CD, 
                    global::System.Nullable<global::System.DateTime> CRTE_DT, 
                    string CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> UPD_DT, 
                    string UPD_ID, 
                    string Original_CRP_CD, 
                    string Original_CRP_TYPE_CD, 
                    string Original_CRP_SRNM, 
                    string Original_CRP_FRST_NM, 
                    string Original_CRP_SCND_NM, 
                    string Original_ENG_CRP_SRNM, 
                    string Original_ENG_CRP_FRST_NM, 
                    string Original_ENG_CRP_SCND_NM, 
                    string Original_CPCT_CD, 
                    string Original_SHRT_CRP_NM, 
                    string Original_ENG_SHRT_CRP_NM, 
                    string Original_CRP_NM, 
                    string Original_ENG_CRP_NM, 
                    string Original_CRP_CAT_CD, 
                    string Original_CRP_STAT_CD, 
                    string Original_CNTRY_CD, 
                    string Original_RSDT_YN, 
                    string Original_BIRTH_DD, 
                    string Original_BZNO, 
                    string Original_SWFT_CD, 
                    string Original_REG_POST_NO, 
                    string Original_REG_CNTRY_CD, 
                    string Original_REG_REGN_CD, 
                    string Original_REG_SOATO_CD, 
                    string Original_REG_STRE_ADDR, 
                    string Original_ENG_REG_STRE_ADDR, 
                    string Original_REG_ADDR_CONT, 
                    string Original_ENG_REG_ADDR_CONT, 
                    string Original_RSDT_POST_NO, 
                    string Original_RSDT_CNTRY_CD, 
                    string Original_RSDT_REGN_CD, 
                    string Original_RSDT_SOATO_CD, 
                    string Original_RSDT_STRE_ADDR, 
                    string Original_ENG_RSDT_STRE_ADDR, 
                    string Original_RSDT_ADDR_CONT, 
                    string Original_ENG_RSDT_ADDR_CONT, 
                    string Original_TEL_NO, 
                    string Original_EMAIL, 
                    string Original_FAX_NO, 
                    string Original_HOMP, 
                    string Original_DIST_ID_TYPE_CD, 
                    string Original_DIST_ID, 
                    string Original_DIST_ID_2, 
                    string Original_OFSH_YN, 
                    string Original_OKPO_CD, 
                    string Original_OKONH_CD, 
                    string Original_TYBZ_CD, 
                    string Original_CORPS_REG_PLC_CD, 
                    string Original_REMARK, 
                    string Original_LGR_NO, 
                    string Original_LGR_USR_ID, 
                    string Original_CRP_ISSU_DD, 
                    string Original_OLD_CRP_CD, 
                    string Original_UKWN_YN, 
                    string Original_AGENT_CRP_CD, 
                    global::System.Nullable<long> Original_SEQ, 
                    string Original_DOCU_NO, 
                    string Original_FEE_LEVY_YN, 
                    global::System.Nullable<long> Original_CRP_FEE, 
                    string Original_RP_RQST_DD, 
                    global::System.Nullable<long> Original_RP_RQST_SEQ, 
                    string Original_ISSR_CAT_CD, 
                    string Original_SOOGU_CD, 
                    global::System.Nullable<global::System.DateTime> Original_CRTE_DT, 
                    string Original_CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPD_DT, 
                    string Original_UPD_ID) {
            if ((CRP_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CRP_CD));
            }
            if ((CRP_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_TYPE_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CRP_TYPE_CD));
            }
            if ((CRP_SRNM == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CRP_SRNM));
            }
            if ((CRP_FRST_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CRP_FRST_NM));
            }
            if ((CRP_SCND_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CRP_SCND_NM));
            }
            if ((ENG_CRP_SRNM == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ENG_CRP_SRNM));
            }
            if ((ENG_CRP_FRST_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ENG_CRP_FRST_NM));
            }
            if ((ENG_CRP_SCND_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ENG_CRP_SCND_NM));
            }
            if ((CPCT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(CPCT_CD));
            }
            if ((SHRT_CRP_NM == null)) {
                throw new global::System.ArgumentNullException("SHRT_CRP_NM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SHRT_CRP_NM));
            }
            if ((ENG_SHRT_CRP_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ENG_SHRT_CRP_NM));
            }
            if ((CRP_NM == null)) {
                throw new global::System.ArgumentNullException("CRP_NM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CRP_NM));
            }
            if ((ENG_CRP_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ENG_CRP_NM));
            }
            if ((CRP_CAT_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CAT_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(CRP_CAT_CD));
            }
            if ((CRP_STAT_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_STAT_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(CRP_STAT_CD));
            }
            if ((CNTRY_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CNTRY_CD));
            }
            if ((RSDT_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(RSDT_YN));
            }
            if ((BIRTH_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(BIRTH_DD));
            }
            if ((BZNO == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(BZNO));
            }
            if ((SWFT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(SWFT_CD));
            }
            if ((REG_POST_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(REG_POST_NO));
            }
            if ((REG_CNTRY_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(REG_CNTRY_CD));
            }
            if ((REG_REGN_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(REG_REGN_CD));
            }
            if ((REG_SOATO_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(REG_SOATO_CD));
            }
            if ((REG_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(REG_STRE_ADDR));
            }
            if ((ENG_REG_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ENG_REG_STRE_ADDR));
            }
            if ((REG_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(REG_ADDR_CONT));
            }
            if ((ENG_REG_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ENG_REG_ADDR_CONT));
            }
            if ((RSDT_POST_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(RSDT_POST_NO));
            }
            if ((RSDT_CNTRY_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(RSDT_CNTRY_CD));
            }
            if ((RSDT_REGN_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(RSDT_REGN_CD));
            }
            if ((RSDT_SOATO_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(RSDT_SOATO_CD));
            }
            if ((RSDT_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(RSDT_STRE_ADDR));
            }
            if ((ENG_RSDT_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(ENG_RSDT_STRE_ADDR));
            }
            if ((RSDT_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(RSDT_ADDR_CONT));
            }
            if ((ENG_RSDT_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(ENG_RSDT_ADDR_CONT));
            }
            if ((TEL_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(TEL_NO));
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(EMAIL));
            }
            if ((FAX_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(FAX_NO));
            }
            if ((HOMP == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(HOMP));
            }
            if ((DIST_ID_TYPE_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(DIST_ID_TYPE_CD));
            }
            if ((DIST_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(DIST_ID));
            }
            if ((DIST_ID_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(DIST_ID_2));
            }
            if ((OFSH_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(OFSH_YN));
            }
            if ((OKPO_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(OKPO_CD));
            }
            if ((OKONH_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(OKONH_CD));
            }
            if ((TYBZ_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(TYBZ_CD));
            }
            if ((CORPS_REG_PLC_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(CORPS_REG_PLC_CD));
            }
            if ((REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(REMARK));
            }
            if ((LGR_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(LGR_NO));
            }
            if ((LGR_USR_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(LGR_USR_ID));
            }
            if ((CRP_ISSU_DD == null)) {
                throw new global::System.ArgumentNullException("CRP_ISSU_DD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(CRP_ISSU_DD));
            }
            if ((OLD_CRP_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(OLD_CRP_CD));
            }
            if ((UKWN_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(UKWN_YN));
            }
            if ((AGENT_CRP_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(AGENT_CRP_CD));
            }
            if ((SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((long)(SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((DOCU_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(DOCU_NO));
            }
            if ((FEE_LEVY_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(FEE_LEVY_YN));
            }
            if ((CRP_FEE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((long)(CRP_FEE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((RP_RQST_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(RP_RQST_DD));
            }
            if ((RP_RQST_SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((long)(RP_RQST_SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((ISSR_CAT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(ISSR_CAT_CD));
            }
            if ((SOOGU_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(SOOGU_CD));
            }
            if ((CRTE_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(CRTE_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((CRTE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(CRTE_ID));
            }
            if ((UPD_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(UPD_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((UPD_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(UPD_ID));
            }
            if ((Original_CRP_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_CRP_CD));
            }
            if ((Original_CRP_TYPE_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_TYPE_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_CRP_TYPE_CD));
            }
            if ((Original_CRP_SRNM == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_CRP_SRNM));
            }
            if ((Original_CRP_FRST_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_CRP_FRST_NM));
            }
            if ((Original_CRP_SCND_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_CRP_SCND_NM));
            }
            if ((Original_ENG_CRP_SRNM == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_ENG_CRP_SRNM));
            }
            if ((Original_ENG_CRP_FRST_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_ENG_CRP_FRST_NM));
            }
            if ((Original_ENG_CRP_SCND_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_ENG_CRP_SCND_NM));
            }
            if ((Original_CPCT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_CPCT_CD));
            }
            if ((Original_SHRT_CRP_NM == null)) {
                throw new global::System.ArgumentNullException("Original_SHRT_CRP_NM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_SHRT_CRP_NM));
            }
            if ((Original_ENG_SHRT_CRP_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_ENG_SHRT_CRP_NM));
            }
            if ((Original_CRP_NM == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_NM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_CRP_NM));
            }
            if ((Original_ENG_CRP_NM == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_ENG_CRP_NM));
            }
            if ((Original_CRP_CAT_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_CAT_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_CRP_CAT_CD));
            }
            if ((Original_CRP_STAT_CD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_STAT_CD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_CRP_STAT_CD));
            }
            if ((Original_CNTRY_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_CNTRY_CD));
            }
            if ((Original_RSDT_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_RSDT_YN));
            }
            if ((Original_BIRTH_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_BIRTH_DD));
            }
            if ((Original_BZNO == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_BZNO));
            }
            if ((Original_SWFT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_SWFT_CD));
            }
            if ((Original_REG_POST_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_REG_POST_NO));
            }
            if ((Original_REG_CNTRY_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_REG_CNTRY_CD));
            }
            if ((Original_REG_REGN_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_REG_REGN_CD));
            }
            if ((Original_REG_SOATO_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_REG_SOATO_CD));
            }
            if ((Original_REG_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_REG_STRE_ADDR));
            }
            if ((Original_ENG_REG_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_ENG_REG_STRE_ADDR));
            }
            if ((Original_REG_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_REG_ADDR_CONT));
            }
            if ((Original_ENG_REG_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_ENG_REG_ADDR_CONT));
            }
            if ((Original_RSDT_POST_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_RSDT_POST_NO));
            }
            if ((Original_RSDT_CNTRY_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_RSDT_CNTRY_CD));
            }
            if ((Original_RSDT_REGN_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_RSDT_REGN_CD));
            }
            if ((Original_RSDT_SOATO_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_RSDT_SOATO_CD));
            }
            if ((Original_RSDT_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_RSDT_STRE_ADDR));
            }
            if ((Original_ENG_RSDT_STRE_ADDR == null)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_ENG_RSDT_STRE_ADDR));
            }
            if ((Original_RSDT_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((string)(Original_RSDT_ADDR_CONT));
            }
            if ((Original_ENG_RSDT_ADDR_CONT == null)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((string)(Original_ENG_RSDT_ADDR_CONT));
            }
            if ((Original_TEL_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_TEL_NO));
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((string)(Original_EMAIL));
            }
            if ((Original_FAX_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_FAX_NO));
            }
            if ((Original_HOMP == null)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((string)(Original_HOMP));
            }
            if ((Original_DIST_ID_TYPE_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_DIST_ID_TYPE_CD));
            }
            if ((Original_DIST_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((string)(Original_DIST_ID));
            }
            if ((Original_DIST_ID_2 == null)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_DIST_ID_2));
            }
            if ((Original_OFSH_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_OFSH_YN));
            }
            if ((Original_OKPO_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_OKPO_CD));
            }
            if ((Original_OKONH_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_OKONH_CD));
            }
            if ((Original_TYBZ_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_TYBZ_CD));
            }
            if ((Original_CORPS_REG_PLC_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_CORPS_REG_PLC_CD));
            }
            if ((Original_REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_REMARK));
            }
            if ((Original_LGR_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_LGR_NO));
            }
            if ((Original_LGR_USR_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_LGR_USR_ID));
            }
            if ((Original_CRP_ISSU_DD == null)) {
                throw new global::System.ArgumentNullException("Original_CRP_ISSU_DD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_CRP_ISSU_DD));
            }
            if ((Original_OLD_CRP_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_OLD_CRP_CD));
            }
            if ((Original_UKWN_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_UKWN_YN));
            }
            if ((Original_AGENT_CRP_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((string)(Original_AGENT_CRP_CD));
            }
            if ((Original_SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((long)(Original_SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_DOCU_NO == null)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(Original_DOCU_NO));
            }
            if ((Original_FEE_LEVY_YN == null)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((string)(Original_FEE_LEVY_YN));
            }
            if ((Original_CRP_FEE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((long)(Original_CRP_FEE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_RP_RQST_DD == null)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((string)(Original_RP_RQST_DD));
            }
            if ((Original_RP_RQST_SEQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((long)(Original_RP_RQST_SEQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_ISSR_CAT_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((string)(Original_ISSR_CAT_CD));
            }
            if ((Original_SOOGU_CD == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_SOOGU_CD));
            }
            if ((Original_CRTE_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((System.DateTime)(Original_CRTE_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_CRTE_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_CRTE_ID));
            }
            if ((Original_UPD_DT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((System.DateTime)(Original_UPD_DT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_UPD_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(Original_UPD_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CRP_TYPE_CD, 
                    string CRP_SRNM, 
                    string CRP_FRST_NM, 
                    string CRP_SCND_NM, 
                    string ENG_CRP_SRNM, 
                    string ENG_CRP_FRST_NM, 
                    string ENG_CRP_SCND_NM, 
                    string CPCT_CD, 
                    string SHRT_CRP_NM, 
                    string ENG_SHRT_CRP_NM, 
                    string CRP_NM, 
                    string ENG_CRP_NM, 
                    string CRP_CAT_CD, 
                    string CRP_STAT_CD, 
                    string CNTRY_CD, 
                    string RSDT_YN, 
                    string BIRTH_DD, 
                    string BZNO, 
                    string SWFT_CD, 
                    string REG_POST_NO, 
                    string REG_CNTRY_CD, 
                    string REG_REGN_CD, 
                    string REG_SOATO_CD, 
                    string REG_STRE_ADDR, 
                    string ENG_REG_STRE_ADDR, 
                    string REG_ADDR_CONT, 
                    string ENG_REG_ADDR_CONT, 
                    string RSDT_POST_NO, 
                    string RSDT_CNTRY_CD, 
                    string RSDT_REGN_CD, 
                    string RSDT_SOATO_CD, 
                    string RSDT_STRE_ADDR, 
                    string ENG_RSDT_STRE_ADDR, 
                    string RSDT_ADDR_CONT, 
                    string ENG_RSDT_ADDR_CONT, 
                    string TEL_NO, 
                    string EMAIL, 
                    string FAX_NO, 
                    string HOMP, 
                    string DIST_ID_TYPE_CD, 
                    string DIST_ID, 
                    string DIST_ID_2, 
                    string OFSH_YN, 
                    string OKPO_CD, 
                    string OKONH_CD, 
                    string TYBZ_CD, 
                    string CORPS_REG_PLC_CD, 
                    string REMARK, 
                    string LGR_NO, 
                    string LGR_USR_ID, 
                    string CRP_ISSU_DD, 
                    string OLD_CRP_CD, 
                    string UKWN_YN, 
                    string AGENT_CRP_CD, 
                    global::System.Nullable<long> SEQ, 
                    string DOCU_NO, 
                    string FEE_LEVY_YN, 
                    global::System.Nullable<long> CRP_FEE, 
                    string RP_RQST_DD, 
                    global::System.Nullable<long> RP_RQST_SEQ, 
                    string ISSR_CAT_CD, 
                    string SOOGU_CD, 
                    global::System.Nullable<global::System.DateTime> CRTE_DT, 
                    string CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> UPD_DT, 
                    string UPD_ID, 
                    string Original_CRP_CD, 
                    string Original_CRP_TYPE_CD, 
                    string Original_CRP_SRNM, 
                    string Original_CRP_FRST_NM, 
                    string Original_CRP_SCND_NM, 
                    string Original_ENG_CRP_SRNM, 
                    string Original_ENG_CRP_FRST_NM, 
                    string Original_ENG_CRP_SCND_NM, 
                    string Original_CPCT_CD, 
                    string Original_SHRT_CRP_NM, 
                    string Original_ENG_SHRT_CRP_NM, 
                    string Original_CRP_NM, 
                    string Original_ENG_CRP_NM, 
                    string Original_CRP_CAT_CD, 
                    string Original_CRP_STAT_CD, 
                    string Original_CNTRY_CD, 
                    string Original_RSDT_YN, 
                    string Original_BIRTH_DD, 
                    string Original_BZNO, 
                    string Original_SWFT_CD, 
                    string Original_REG_POST_NO, 
                    string Original_REG_CNTRY_CD, 
                    string Original_REG_REGN_CD, 
                    string Original_REG_SOATO_CD, 
                    string Original_REG_STRE_ADDR, 
                    string Original_ENG_REG_STRE_ADDR, 
                    string Original_REG_ADDR_CONT, 
                    string Original_ENG_REG_ADDR_CONT, 
                    string Original_RSDT_POST_NO, 
                    string Original_RSDT_CNTRY_CD, 
                    string Original_RSDT_REGN_CD, 
                    string Original_RSDT_SOATO_CD, 
                    string Original_RSDT_STRE_ADDR, 
                    string Original_ENG_RSDT_STRE_ADDR, 
                    string Original_RSDT_ADDR_CONT, 
                    string Original_ENG_RSDT_ADDR_CONT, 
                    string Original_TEL_NO, 
                    string Original_EMAIL, 
                    string Original_FAX_NO, 
                    string Original_HOMP, 
                    string Original_DIST_ID_TYPE_CD, 
                    string Original_DIST_ID, 
                    string Original_DIST_ID_2, 
                    string Original_OFSH_YN, 
                    string Original_OKPO_CD, 
                    string Original_OKONH_CD, 
                    string Original_TYBZ_CD, 
                    string Original_CORPS_REG_PLC_CD, 
                    string Original_REMARK, 
                    string Original_LGR_NO, 
                    string Original_LGR_USR_ID, 
                    string Original_CRP_ISSU_DD, 
                    string Original_OLD_CRP_CD, 
                    string Original_UKWN_YN, 
                    string Original_AGENT_CRP_CD, 
                    global::System.Nullable<long> Original_SEQ, 
                    string Original_DOCU_NO, 
                    string Original_FEE_LEVY_YN, 
                    global::System.Nullable<long> Original_CRP_FEE, 
                    string Original_RP_RQST_DD, 
                    global::System.Nullable<long> Original_RP_RQST_SEQ, 
                    string Original_ISSR_CAT_CD, 
                    string Original_SOOGU_CD, 
                    global::System.Nullable<global::System.DateTime> Original_CRTE_DT, 
                    string Original_CRTE_ID, 
                    global::System.Nullable<global::System.DateTime> Original_UPD_DT, 
                    string Original_UPD_ID) {
            return this.Update(Original_CRP_CD, CRP_TYPE_CD, CRP_SRNM, CRP_FRST_NM, CRP_SCND_NM, ENG_CRP_SRNM, ENG_CRP_FRST_NM, ENG_CRP_SCND_NM, CPCT_CD, SHRT_CRP_NM, ENG_SHRT_CRP_NM, CRP_NM, ENG_CRP_NM, CRP_CAT_CD, CRP_STAT_CD, CNTRY_CD, RSDT_YN, BIRTH_DD, BZNO, SWFT_CD, REG_POST_NO, REG_CNTRY_CD, REG_REGN_CD, REG_SOATO_CD, REG_STRE_ADDR, ENG_REG_STRE_ADDR, REG_ADDR_CONT, ENG_REG_ADDR_CONT, RSDT_POST_NO, RSDT_CNTRY_CD, RSDT_REGN_CD, RSDT_SOATO_CD, RSDT_STRE_ADDR, ENG_RSDT_STRE_ADDR, RSDT_ADDR_CONT, ENG_RSDT_ADDR_CONT, TEL_NO, EMAIL, FAX_NO, HOMP, DIST_ID_TYPE_CD, DIST_ID, DIST_ID_2, OFSH_YN, OKPO_CD, OKONH_CD, TYBZ_CD, CORPS_REG_PLC_CD, REMARK, LGR_NO, LGR_USR_ID, CRP_ISSU_DD, OLD_CRP_CD, UKWN_YN, AGENT_CRP_CD, SEQ, DOCU_NO, FEE_LEVY_YN, CRP_FEE, RP_RQST_DD, RP_RQST_SEQ, ISSR_CAT_CD, SOOGU_CD, CRTE_DT, CRTE_ID, UPD_DT, UPD_ID, Original_CRP_CD, Original_CRP_TYPE_CD, Original_CRP_SRNM, Original_CRP_FRST_NM, Original_CRP_SCND_NM, Original_ENG_CRP_SRNM, Original_ENG_CRP_FRST_NM, Original_ENG_CRP_SCND_NM, Original_CPCT_CD, Original_SHRT_CRP_NM, Original_ENG_SHRT_CRP_NM, Original_CRP_NM, Original_ENG_CRP_NM, Original_CRP_CAT_CD, Original_CRP_STAT_CD, Original_CNTRY_CD, Original_RSDT_YN, Original_BIRTH_DD, Original_BZNO, Original_SWFT_CD, Original_REG_POST_NO, Original_REG_CNTRY_CD, Original_REG_REGN_CD, Original_REG_SOATO_CD, Original_REG_STRE_ADDR, Original_ENG_REG_STRE_ADDR, Original_REG_ADDR_CONT, Original_ENG_REG_ADDR_CONT, Original_RSDT_POST_NO, Original_RSDT_CNTRY_CD, Original_RSDT_REGN_CD, Original_RSDT_SOATO_CD, Original_RSDT_STRE_ADDR, Original_ENG_RSDT_STRE_ADDR, Original_RSDT_ADDR_CONT, Original_ENG_RSDT_ADDR_CONT, Original_TEL_NO, Original_EMAIL, Original_FAX_NO, Original_HOMP, Original_DIST_ID_TYPE_CD, Original_DIST_ID, Original_DIST_ID_2, Original_OFSH_YN, Original_OKPO_CD, Original_OKONH_CD, Original_TYBZ_CD, Original_CORPS_REG_PLC_CD, Original_REMARK, Original_LGR_NO, Original_LGR_USR_ID, Original_CRP_ISSU_DD, Original_OLD_CRP_CD, Original_UKWN_YN, Original_AGENT_CRP_CD, Original_SEQ, Original_DOCU_NO, Original_FEE_LEVY_YN, Original_CRP_FEE, Original_RP_RQST_DD, Original_RP_RQST_SEQ, Original_ISSR_CAT_CD, Original_SOOGU_CD, Original_CRTE_DT, Original_CRTE_ID, Original_UPD_DT, Original_UPD_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TABLE_FOR_CDTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TABLE_FOR_CDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TABLE_FOR_CD";
            tableMapping.ColumnMappings.Add("CRP_CD", "CRP_CD");
            tableMapping.ColumnMappings.Add("DOCU_PRICE", "DOCU_PRICE");
            tableMapping.ColumnMappings.Add("GET_DD", "GET_DD");
            tableMapping.ColumnMappings.Add("DOCU_NO", "DOCU_NO");
            tableMapping.ColumnMappings.Add("ARCHV", "ARCHV");
            tableMapping.ColumnMappings.Add("DESCRPT", "DESCRPT");
            tableMapping.ColumnMappings.Add("ESTM_CD", "ESTM_CD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"GGUZDR_APP\".\"TABLE_FOR_CD\" (\"CRP_CD\", \"DOCU_PRICE\", \"GET_DD\", \"DOCU_" +
                "NO\", \"ARCHV\", \"DESCRPT\", \"ESTM_CD\") VALUES (:CRP_CD, :DOCU_PRICE, :GET_DD, :DOCU" +
                "_NO, :ARCHV, :DESCRPT, :ESTM_CD)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 13;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_PRICE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GET_DD";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 8;
            param.IsNullable = true;
            param.SourceColumn = "GET_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ARCHV";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "ARCHV";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DESCRPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DESCRPT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ESTM_CD";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ESTM_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::app_for_CD.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CRP_CD, DOCU_PRICE, GET_DD, DOCU_NO, ARCHV, DESCRPT, ESTM_CD FROM GGUZDR_A" +
                "PP.TABLE_FOR_CD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NeedDataset.TABLE_FOR_CDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NeedDataset.TABLE_FOR_CDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NeedDataset.TABLE_FOR_CDDataTable dataTable = new NeedDataset.TABLE_FOR_CDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset.TABLE_FOR_CDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset dataSet) {
            return this.Adapter.Update(dataSet, "TABLE_FOR_CD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CRP_CD, decimal DOCU_PRICE, string GET_DD, string DOCU_NO, string ARCHV, string DESCRPT, decimal ESTM_CD) {
            if ((CRP_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CRP_CD));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(DOCU_PRICE));
            if ((GET_DD == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(GET_DD));
            }
            if ((DOCU_NO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DOCU_NO));
            }
            if ((ARCHV == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ARCHV));
            }
            if ((DESCRPT == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DESCRPT));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ESTM_CD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NEW_TBCBTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public NEW_TBCBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NEW_TBCB";
            tableMapping.ColumnMappings.Add("CRP_CD", "CRP_CD");
            tableMapping.ColumnMappings.Add("DOCU_PRICE", "DOCU_PRICE");
            tableMapping.ColumnMappings.Add("GET_DD", "GET_DD");
            tableMapping.ColumnMappings.Add("DOCU_NO", "DOCU_NO");
            tableMapping.ColumnMappings.Add("ARCHV", "ARCHV");
            tableMapping.ColumnMappings.Add("DESCRPT", "DESCRPT");
            tableMapping.ColumnMappings.Add("ESTM_CD", "ESTM_CD");
            tableMapping.ColumnMappings.Add("ESTM_NM", "ESTM_NM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"GGUZDR_APP\".\"NEW_TBCB\" (\"CRP_CD\", \"DOCU_PRICE\", \"GET_DD\", \"DOCU_NO\"," +
                " \"ARCHV\", \"DESCRPT\", \"ESTM_CD\", \"ESTM_NM\") VALUES (:CRP_CD, :DOCU_PRICE, :GET_DD" +
                ", :DOCU_NO, :ARCHV, :DESCRPT, :ESTM_CD, :ESTM_NM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRP_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 12;
            param.IsNullable = true;
            param.SourceColumn = "CRP_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_PRICE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_PRICE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GET_DD";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GET_DD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCU_NO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "DOCU_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ARCHV";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "ARCHV";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DESCRPT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "DESCRPT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ESTM_CD";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ESTM_CD";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ESTM_NM";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1000;
            param.IsNullable = true;
            param.SourceColumn = "ESTM_NM";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::app_for_CD.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CRP_CD, DOCU_PRICE, GET_DD, DOCU_NO, ARCHV, DESCRPT, ESTM_CD, ESTM_NM FROM" +
                " GGUZDR_APP.NEW_TBCB";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NeedDataset.NEW_TBCBDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NeedDataset.NEW_TBCBDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NeedDataset.NEW_TBCBDataTable dataTable = new NeedDataset.NEW_TBCBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset.NEW_TBCBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NeedDataset dataSet) {
            return this.Adapter.Update(dataSet, "NEW_TBCB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CRP_CD, string DOCU_PRICE, decimal GET_DD, string DOCU_NO, string ARCHV, string DESCRPT, string ESTM_CD, string ESTM_NM) {
            if ((CRP_CD == null)) {
                throw new global::System.ArgumentNullException("CRP_CD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CRP_CD));
            }
            if ((DOCU_PRICE == null)) {
                throw new global::System.ArgumentNullException("DOCU_PRICE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DOCU_PRICE));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(GET_DD));
            if ((DOCU_NO == null)) {
                throw new global::System.ArgumentNullException("DOCU_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DOCU_NO));
            }
            if ((ARCHV == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ARCHV));
            }
            if ((DESCRPT == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DESCRPT));
            }
            if ((ESTM_CD == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ESTM_CD));
            }
            if ((ESTM_NM == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ESTM_NM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TBCB_CRP_DOCU_INFOTableAdapter _tBCB_CRP_DOCU_INFOTableAdapter;
        
        private TBCB_CRP_INFOTableAdapter _tBCB_CRP_INFOTableAdapter;
        
        private TABLE_FOR_CDTableAdapter _tABLE_FOR_CDTableAdapter;
        
        private NEW_TBCBTableAdapter _nEW_TBCBTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBCB_CRP_DOCU_INFOTableAdapter TBCB_CRP_DOCU_INFOTableAdapter {
            get {
                return this._tBCB_CRP_DOCU_INFOTableAdapter;
            }
            set {
                this._tBCB_CRP_DOCU_INFOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TBCB_CRP_INFOTableAdapter TBCB_CRP_INFOTableAdapter {
            get {
                return this._tBCB_CRP_INFOTableAdapter;
            }
            set {
                this._tBCB_CRP_INFOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TABLE_FOR_CDTableAdapter TABLE_FOR_CDTableAdapter {
            get {
                return this._tABLE_FOR_CDTableAdapter;
            }
            set {
                this._tABLE_FOR_CDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NEW_TBCBTableAdapter NEW_TBCBTableAdapter {
            get {
                return this._nEW_TBCBTableAdapter;
            }
            set {
                this._nEW_TBCBTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tBCB_CRP_DOCU_INFOTableAdapter != null) 
                            && (this._tBCB_CRP_DOCU_INFOTableAdapter.Connection != null))) {
                    return this._tBCB_CRP_DOCU_INFOTableAdapter.Connection;
                }
                if (((this._tBCB_CRP_INFOTableAdapter != null) 
                            && (this._tBCB_CRP_INFOTableAdapter.Connection != null))) {
                    return this._tBCB_CRP_INFOTableAdapter.Connection;
                }
                if (((this._tABLE_FOR_CDTableAdapter != null) 
                            && (this._tABLE_FOR_CDTableAdapter.Connection != null))) {
                    return this._tABLE_FOR_CDTableAdapter.Connection;
                }
                if (((this._nEW_TBCBTableAdapter != null) 
                            && (this._nEW_TBCBTableAdapter.Connection != null))) {
                    return this._nEW_TBCBTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tBCB_CRP_DOCU_INFOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tBCB_CRP_INFOTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tABLE_FOR_CDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nEW_TBCBTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(NeedDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBCB_CRP_DOCU_INFOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBCB_CRP_DOCU_INFO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBCB_CRP_DOCU_INFOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tBCB_CRP_INFOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TBCB_CRP_INFO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tBCB_CRP_INFOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tABLE_FOR_CDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TABLE_FOR_CD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tABLE_FOR_CDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nEW_TBCBTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NEW_TBCB.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nEW_TBCBTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(NeedDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tBCB_CRP_DOCU_INFOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBCB_CRP_DOCU_INFO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBCB_CRP_DOCU_INFOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tBCB_CRP_INFOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TBCB_CRP_INFO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tBCB_CRP_INFOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tABLE_FOR_CDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TABLE_FOR_CD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tABLE_FOR_CDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nEW_TBCBTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NEW_TBCB.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nEW_TBCBTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(NeedDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._nEW_TBCBTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NEW_TBCB.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nEW_TBCBTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tABLE_FOR_CDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TABLE_FOR_CD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tABLE_FOR_CDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBCB_CRP_INFOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBCB_CRP_INFO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBCB_CRP_INFOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tBCB_CRP_DOCU_INFOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TBCB_CRP_DOCU_INFO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tBCB_CRP_DOCU_INFOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(NeedDataset dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tBCB_CRP_DOCU_INFOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBCB_CRP_DOCU_INFOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._tBCB_CRP_INFOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tBCB_CRP_INFOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._tABLE_FOR_CDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tABLE_FOR_CDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._nEW_TBCBTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nEW_TBCBTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tBCB_CRP_DOCU_INFOTableAdapter != null)) {
                    revertConnections.Add(this._tBCB_CRP_DOCU_INFOTableAdapter, this._tBCB_CRP_DOCU_INFOTableAdapter.Connection);
                    this._tBCB_CRP_DOCU_INFOTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._tBCB_CRP_DOCU_INFOTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._tBCB_CRP_DOCU_INFOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBCB_CRP_DOCU_INFOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBCB_CRP_DOCU_INFOTableAdapter.Adapter);
                    }
                }
                if ((this._tBCB_CRP_INFOTableAdapter != null)) {
                    revertConnections.Add(this._tBCB_CRP_INFOTableAdapter, this._tBCB_CRP_INFOTableAdapter.Connection);
                    this._tBCB_CRP_INFOTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._tBCB_CRP_INFOTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._tBCB_CRP_INFOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tBCB_CRP_INFOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tBCB_CRP_INFOTableAdapter.Adapter);
                    }
                }
                if ((this._tABLE_FOR_CDTableAdapter != null)) {
                    revertConnections.Add(this._tABLE_FOR_CDTableAdapter, this._tABLE_FOR_CDTableAdapter.Connection);
                    this._tABLE_FOR_CDTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._tABLE_FOR_CDTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._tABLE_FOR_CDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tABLE_FOR_CDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tABLE_FOR_CDTableAdapter.Adapter);
                    }
                }
                if ((this._nEW_TBCBTableAdapter != null)) {
                    revertConnections.Add(this._nEW_TBCBTableAdapter, this._nEW_TBCBTableAdapter.Connection);
                    this._nEW_TBCBTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._nEW_TBCBTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._nEW_TBCBTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nEW_TBCBTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nEW_TBCBTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tBCB_CRP_DOCU_INFOTableAdapter != null)) {
                    this._tBCB_CRP_DOCU_INFOTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._tBCB_CRP_DOCU_INFOTableAdapter]));
                    this._tBCB_CRP_DOCU_INFOTableAdapter.Transaction = null;
                }
                if ((this._tBCB_CRP_INFOTableAdapter != null)) {
                    this._tBCB_CRP_INFOTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._tBCB_CRP_INFOTableAdapter]));
                    this._tBCB_CRP_INFOTableAdapter.Transaction = null;
                }
                if ((this._tABLE_FOR_CDTableAdapter != null)) {
                    this._tABLE_FOR_CDTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._tABLE_FOR_CDTableAdapter]));
                    this._tABLE_FOR_CDTableAdapter.Transaction = null;
                }
                if ((this._nEW_TBCBTableAdapter != null)) {
                    this._nEW_TBCBTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._nEW_TBCBTableAdapter]));
                    this._nEW_TBCBTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591